<?xml version="1.0" encoding="utf-8"?>
<TestRun id="d58c1a07-c26b-42b3-9786-79daeb6dbc4c" name="@Seeker-Mac 2025-09-16 23:51:44" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-09-16T23:51:44.2826690-06:00" queuing="2025-09-16T23:51:44.2826690-06:00" start="2025-09-16T23:51:43.1014710-06:00" finish="2025-09-16T23:52:11.4784500-06:00" />
  <TestSettings name="default" id="11f4869b-cfe2-4a6d-8dc7-797d1a277c6a">
    <Deployment runDeploymentRoot="_Seeker-Mac_2025-09-16_23_51_44" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="6d4e781b-9c75-4492-b79f-b93911b6a812" testId="95bec019-ba93-557e-cc59-ca4522b92c84" testName="CodexBootstrap.Tests.IdentityTests.EndSession_ShouldEndExistingSession" computerName="Seeker-Mac" duration="00:00:00.0213959" startTime="2025-09-16T23:51:45.2234760-06:00" endTime="2025-09-16T23:51:45.2234760-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6d4e781b-9c75-4492-b79f-b93911b6a812" />
    <UnitTestResult executionId="b25406fe-055c-43f9-8b3f-9c3dbd4d4a4e" testId="e7106da5-58e1-50ce-92f0-4784ebbaed9e" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnNotFound_WhenNotImplemented" computerName="Seeker-Mac" duration="00:00:00.0061320" startTime="2025-09-16T23:51:44.4775430-06:00" endTime="2025-09-16T23:51:44.4775440-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b25406fe-055c-43f9-8b3f-9c3dbd4d4a4e">
      <Output>
        <ErrorInfo>
          <Message>Expected response.StatusCode to be HttpStatusCode.NotFound {value: 404}, but found HttpStatusCode.MethodNotAllowed {value: 405}.</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
   at FluentAssertions.Primitives.EnumAssertions`2.Be(TEnum expected, String because, Object[] becauseArgs)
   at CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnNotFound_WhenNotImplemented() in /Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/Modules/EnergyModuleApiTests.cs:line 48
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="02559c69-c63b-4055-b426-24e20eff87ed" testId="65339b3c-9de7-638f-f604-692a2aef89ff" testName="CodexBootstrap.Tests.IdentityTests.IdentityProviders_ShouldReturnAvailableProviders" computerName="Seeker-Mac" duration="00:00:00.0166111" startTime="2025-09-16T23:51:45.2565110-06:00" endTime="2025-09-16T23:51:45.2565110-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="02559c69-c63b-4055-b426-24e20eff87ed" />
    <UnitTestResult executionId="e8d1ba50-33f4-4261-be01-cef1b604e643" testId="335af7d3-af17-2a3e-11a6-c40d770283f6" testName="CodexBootstrap.Tests.IdentityTests.IdentityLogin_ShouldInitiateLoginFlow" computerName="Seeker-Mac" duration="00:00:00.0135512" startTime="2025-09-16T23:51:45.2372380-06:00" endTime="2025-09-16T23:51:45.2372390-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e8d1ba50-33f4-4261-be01-cef1b604e643" />
    <UnitTestResult executionId="93af7689-eeee-4eed-99da-effc1149c571" testId="e2097409-445a-3cd5-ae6e-0205fed90d91" testName="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNode_ShouldReturnNotFound_WhenNodeDoesNotExist" computerName="Seeker-Mac" duration="00:00:00.0058602" startTime="2025-09-16T23:51:44.7672530-06:00" endTime="2025-09-16T23:51:44.7672530-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="93af7689-eeee-4eed-99da-effc1149c571" />
    <UnitTestResult executionId="705d7319-ba92-4950-b1de-145c88ae3466" testId="19930103-19e2-d6c6-243c-55a9ec794a78" testName="CodexBootstrap.Tests.IdentityTests.GetUserProfile_ShouldReturnUserProfile" computerName="Seeker-Mac" duration="00:00:00.0051025" startTime="2025-09-16T23:51:45.2711230-06:00" endTime="2025-09-16T23:51:45.2711230-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="705d7319-ba92-4950-b1de-145c88ae3466" />
    <UnitTestResult executionId="9973a9da-058d-4b41-a834-df9de8cd1d9a" testId="699de456-4b30-e20b-d29b-f9997d34c156" testName="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.Authenticate_ShouldReturnUnauthorized_WhenInvalidCredentials" computerName="Seeker-Mac" duration="00:00:00.0080208" startTime="2025-09-16T23:52:11.3772870-06:00" endTime="2025-09-16T23:52:11.3772870-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9973a9da-058d-4b41-a834-df9de8cd1d9a" />
    <UnitTestResult executionId="03b59251-30a6-4447-bae6-689631386cd6" testId="c353011d-9e94-c67d-e6eb-396de9239c5d" testName="CodexBootstrap.Tests.Core.LLMOrchestratorTests.ExecuteParallelAsync_WithMultipleOperations_ShouldExecuteAll" computerName="Seeker-Mac" duration="00:00:00.0001482" startTime="2025-09-16T23:51:44.5719410-06:00" endTime="2025-09-16T23:51:44.5719410-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="03b59251-30a6-4447-bae6-689631386cd6" />
    <UnitTestResult executionId="fa523277-033e-4d31-a34a-9747e448860e" testId="632c0374-d9e5-0e22-1403-eb730369295e" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetNewsFeed_ShouldReturnEmptyResults_WhenNoNewsAvailable" computerName="Seeker-Mac" duration="00:00:00.0082057" startTime="2025-09-16T23:52:10.9991720-06:00" endTime="2025-09-16T23:52:10.9991720-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fa523277-033e-4d31-a34a-9747e448860e" />
    <UnitTestResult executionId="d7fcdbba-7ab4-4765-bff8-68ad32aa1024" testId="5fd7373e-836c-fd3b-1266-60a16d14daf5" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnBadRequest_WhenUserIdInvalid_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0010000" startTime="2025-09-16T23:51:44.4794330-06:00" endTime="2025-09-16T23:51:44.4794330-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d7fcdbba-7ab4-4765-bff8-68ad32aa1024">
      <Output>
        <StdOut>Endpoint not yet implemented</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5e3d6a76-c5c6-46ae-b287-3ca7f6543838" testId="19691bde-a850-be64-1937-e776a14dda46" testName="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetEdge_ShouldReturnNotFound_WhenNotImplemented" computerName="Seeker-Mac" duration="00:00:00.0025793" startTime="2025-09-16T23:51:44.7933790-06:00" endTime="2025-09-16T23:51:44.7933790-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5e3d6a76-c5c6-46ae-b287-3ca7f6543838" />
    <UnitTestResult executionId="7e11242c-2fd6-4eae-9239-fe54057cc331" testId="55db700b-b4b0-5cf1-78a6-21f835d00459" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetNewsItem_ShouldReturnNotFound_WhenNewsItemNotFound" computerName="Seeker-Mac" duration="00:00:00.0065259" startTime="2025-09-16T23:52:10.9815810-06:00" endTime="2025-09-16T23:52:10.9815810-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7e11242c-2fd6-4eae-9239-fe54057cc331" />
    <UnitTestResult executionId="cd2b2f4b-efb5-4217-80d0-fa6a6807c995" testId="1f334c79-0062-1fd4-b393-16846c0c4410" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetUnreadNews_ShouldReturnEmptyResults_WhenNoUnreadNews" computerName="Seeker-Mac" duration="00:00:00.0057685" startTime="2025-09-16T23:52:10.9370110-06:00" endTime="2025-09-16T23:52:10.9370110-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cd2b2f4b-efb5-4217-80d0-fa6a6807c995" />
    <UnitTestResult executionId="83d71aa6-f5bf-43f0-a278-bd4feb91258d" testId="4cdd7a6f-85c0-305c-e9b1-fd8d4db0dee3" testName="CodexBootstrap.Tests.ApiIntegrationTests.OAuthValidate_ShouldValidateUser" computerName="Seeker-Mac" duration="00:00:00.0048913" startTime="2025-09-16T23:51:44.6550280-06:00" endTime="2025-09-16T23:51:44.6550280-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="83d71aa6-f5bf-43f0-a278-bd4feb91258d">
      <Output>
        <ErrorInfo>
          <Message>Expected response.IsSuccessStatusCode to be true, but found False.</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
   at FluentAssertions.Primitives.BooleanAssertions`1.BeTrue(String because, Object[] becauseArgs)
   at CodexBootstrap.Tests.ApiIntegrationTests.OAuthValidate_ShouldValidateUser() in /Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/ApiIntegrationTests.cs:line 170
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="88250343-cb76-4fbc-9b22-29e0d052b972" testId="c7664158-decd-1ae9-8bcf-1591fb563b34" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.SearchNews_ShouldReturnSearchResults_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0010000" startTime="2025-09-16T23:52:11.0000820-06:00" endTime="2025-09-16T23:52:11.0001160-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="88250343-cb76-4fbc-9b22-29e0d052b972">
      <Output>
        <StdOut>Endpoint not yet implemented</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="817a88c5-faea-4ab2-8efe-6f7a43607c0e" testId="0be5b3d7-ad47-a6e7-2e5c-4e8c709b4254" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetTrendingTopics_ShouldHandleConcurrentRequests" computerName="Seeker-Mac" duration="00:00:00.0165009" startTime="2025-09-16T23:52:10.9564070-06:00" endTime="2025-09-16T23:52:10.9564070-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="817a88c5-faea-4ab2-8efe-6f7a43607c0e" />
    <UnitTestResult executionId="eb37b74d-b349-437c-8a2b-2088508bc708" testId="ed4eeeaf-65c2-fe54-b0e2-7f711f9498db" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetReadNews_ShouldReturnEmptyResults_WhenNoReadNews" computerName="Seeker-Mac" duration="00:00:00.0067341" startTime="2025-09-16T23:52:10.9633470-06:00" endTime="2025-09-16T23:52:10.9633470-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eb37b74d-b349-437c-8a2b-2088508bc708" />
    <UnitTestResult executionId="e72cb2c5-424b-4380-892c-1803ff8880b7" testId="7873e7fc-d46d-3fb0-064c-39886ac6bd92" testName="CodexBootstrap.Tests.SimpleIntegrationTests.ModulesEndpoint_ShouldReturnModuleList" computerName="Seeker-Mac" duration="00:00:00.0042820" startTime="2025-09-16T23:52:10.8378440-06:00" endTime="2025-09-16T23:52:10.8378450-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e72cb2c5-424b-4380-892c-1803ff8880b7" />
    <UnitTestResult executionId="16cdf474-fdc4-4911-a325-48bd5fe963b6" testId="356cc5a1-12a0-34cb-5f3e-4ae7f80efd3b" testName="CodexBootstrap.Tests.Modules.CoreModuleTests.RegisterApiHandlers_ShouldNotThrow" computerName="Seeker-Mac" duration="00:00:00.0001546" startTime="2025-09-16T23:52:11.0764500-06:00" endTime="2025-09-16T23:52:11.0764500-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="16cdf474-fdc4-4911-a325-48bd5fe963b6" />
    <UnitTestResult executionId="4ba180bb-0316-491e-ac1d-fcbf658f2a9f" testId="ce4786bd-8689-0f1b-0de8-7d35fef968cd" testName="CodexBootstrap.Tests.ComprehensiveEndpointDiscovery.HealthEndpoint_ShouldReturnDetailedMetrics" computerName="Seeker-Mac" duration="00:00:00.0073052" startTime="2025-09-16T23:51:44.9779600-06:00" endTime="2025-09-16T23:51:44.9779600-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4ba180bb-0316-491e-ac1d-fcbf658f2a9f" />
    <UnitTestResult executionId="ac930315-f061-4f52-b615-bf274cbd9aa7" testId="c901140a-8e9f-da3b-f7f8-502ef77600a4" testName="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.GetIdentityProviders_ShouldRespondWithinAcceptableTime" computerName="Seeker-Mac" duration="00:00:00.0015811" startTime="2025-09-16T23:52:11.3292720-06:00" endTime="2025-09-16T23:52:11.3292720-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ac930315-f061-4f52-b615-bf274cbd9aa7" />
    <UnitTestResult executionId="a3f79989-e104-4bc5-9f55-33ae94eb3eb3" testId="d9ebdab0-e0e1-4dfb-e6ef-0b0976546f6d" testName="CodexBootstrap.Tests.Core.LLMOrchestratorTests.ExecuteAsync_WithValidTemplate_ShouldReturnSuccessResponse" computerName="Seeker-Mac" duration="00:00:00.0001752" startTime="2025-09-16T23:51:44.5714140-06:00" endTime="2025-09-16T23:51:44.5714140-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a3f79989-e104-4bc5-9f55-33ae94eb3eb3" />
    <UnitTestResult executionId="3db9e9e0-4db6-41b4-b254-38b6e2cf835c" testId="a117d892-9fd1-1ad8-8d90-f3c71328203c" testName="CodexBootstrap.Tests.Core.NodeRegistryTests.TryGet_WithExistingId_ShouldReturnNode" computerName="Seeker-Mac" duration="00:00:00.0005829" startTime="2025-09-16T23:51:44.2422540-06:00" endTime="2025-09-16T23:51:44.2422540-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3db9e9e0-4db6-41b4-b254-38b6e2cf835c" />
    <UnitTestResult executionId="7fc1c4c9-4490-45aa-beda-d1067e01e490" testId="8fd24cd4-a9c0-0221-2fef-ed0703bf3428" testName="CodexBootstrap.Tests.Integration.ApiIntegrationTests.ApiDiscovery_ShouldReturnAvailableEndpoints" computerName="Seeker-Mac" duration="00:00:00.0015648" startTime="2025-09-16T23:51:45.6533840-06:00" endTime="2025-09-16T23:51:45.6533840-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7fc1c4c9-4490-45aa-beda-d1067e01e490" />
    <UnitTestResult executionId="5af1b649-29b3-4ae2-bb05-cfb25858db4d" testId="9f121c41-56cf-362b-92e5-cf6e1918417e" testName="CodexBootstrap.Tests.Modules.AIModuleTests.Name_ShouldReturnCorrectName" computerName="Seeker-Mac" duration="00:00:00.0024099" startTime="2025-09-16T23:51:44.6141110-06:00" endTime="2025-09-16T23:51:44.6141110-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5af1b649-29b3-4ae2-bb05-cfb25858db4d" />
    <UnitTestResult executionId="0a1cc3e8-40f1-4ac4-9cab-7dbdb51c5d28" testId="14935da5-76f2-bd62-81ac-04e61a088bd0" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldRespondWithinAcceptableTime_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0010000" startTime="2025-09-16T23:51:44.4777060-06:00" endTime="2025-09-16T23:51:44.4777060-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0a1cc3e8-40f1-4ac4-9cab-7dbdb51c5d28">
      <Output>
        <StdOut>Endpoint not yet implemented</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a95e4347-4c8e-49b8-b1a1-cd049618f865" testId="af1e193b-6914-4dd6-b3ed-2ac18e2a1b23" testName="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.UpdateConcept_ShouldReturnSuccess_WhenConceptExists" computerName="Seeker-Mac" duration="00:00:00.0024825" startTime="2025-09-16T23:52:11.1641580-06:00" endTime="2025-09-16T23:52:11.1641580-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a95e4347-4c8e-49b8-b1a1-cd049618f865" />
    <UnitTestResult executionId="d1b3b8ee-f602-4e78-9d8b-318f16fceaf6" testId="c4827e09-d08d-46ae-e11d-0d4589191c8f" testName="CodexBootstrap.Tests.ApiIntegrationTests.UserDiscovery_ShouldReturnUsers" computerName="Seeker-Mac" duration="00:00:00.0037591" startTime="2025-09-16T23:51:44.6586180-06:00" endTime="2025-09-16T23:51:44.6586180-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d1b3b8ee-f602-4e78-9d8b-318f16fceaf6" />
    <UnitTestResult executionId="93e7cc7d-a258-4417-a768-db61aafcb4e8" testId="4c4f9506-e0d0-a7af-bb2f-e96606d3bbf1" testName="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.GetIdentityProviders_ShouldIncludeMockProvider" computerName="Seeker-Mac" duration="00:00:00.0028972" startTime="2025-09-16T23:52:11.3345000-06:00" endTime="2025-09-16T23:52:11.3345000-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="93e7cc7d-a258-4417-a768-db61aafcb4e8" />
    <UnitTestResult executionId="7a0dd941-acc5-4c05-bafb-32b6e4b365bd" testId="2fb30a0f-ddea-628a-42a5-2fe6a57a267c" testName="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.MicrosoftLogin_ShouldReturnRedirect_WhenProviderAvailable" computerName="Seeker-Mac" duration="00:00:00.0013974" startTime="2025-09-16T23:52:11.3361530-06:00" endTime="2025-09-16T23:52:11.3361530-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7a0dd941-acc5-4c05-bafb-32b6e4b365bd" />
    <UnitTestResult executionId="a01e9e3b-5ade-42c5-94da-2c8682f15224" testId="d97a6a51-1d28-ab30-5e6f-d68d2a74dcbf" testName="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.CreateConcept_ShouldReturnBadRequest_WhenInvalidRequest" computerName="Seeker-Mac" duration="00:00:00.0019029" startTime="2025-09-16T23:52:11.1584880-06:00" endTime="2025-09-16T23:52:11.1584880-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a01e9e3b-5ade-42c5-94da-2c8682f15224" />
    <UnitTestResult executionId="2540eb94-266f-4f20-bb4a-d3d71b6701dd" testId="f1200e70-c88e-dbc8-b7b0-014a66ebf8a6" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetNewsFeed_ShouldReturnNewsItems_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0010000" startTime="2025-09-16T23:52:10.9749260-06:00" endTime="2025-09-16T23:52:10.9749260-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2540eb94-266f-4f20-bb4a-d3d71b6701dd">
      <Output>
        <StdOut>Endpoint not yet implemented</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e77c9aa2-d1c3-495b-ba2f-fcb12d2f5ef1" testId="7d68e180-4522-1c63-e2b7-817dd0b2a6e5" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetTrendingTopics_ShouldAcceptHoursBackParameter" computerName="Seeker-Mac" duration="00:00:00.0024067" startTime="2025-09-16T23:52:10.9747760-06:00" endTime="2025-09-16T23:52:10.9747760-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e77c9aa2-d1c3-495b-ba2f-fcb12d2f5ef1" />
    <UnitTestResult executionId="d2795275-c863-4957-a254-7db5e9695a7c" testId="8aaeb942-4618-a8e4-c6b1-266d34c97e41" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldReturnBadRequest_WhenRequestInvalid_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0010000" startTime="2025-09-16T23:51:44.5058700-06:00" endTime="2025-09-16T23:51:44.5058700-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d2795275-c863-4957-a254-7db5e9695a7c">
      <Output>
        <StdOut>Endpoint not yet implemented</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="feb6456b-1842-4f5b-b70a-4b1000a51295" testId="79341776-28f9-9f5a-685e-8b9cb0ecc3e5" testName="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldInitiateLogin" computerName="Seeker-Mac" duration="00:00:00.0235364" startTime="2025-09-16T23:51:45.1991700-06:00" endTime="2025-09-16T23:51:45.1991700-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="feb6456b-1842-4f5b-b70a-4b1000a51295" />
    <UnitTestResult executionId="fb7d4483-2515-4dd5-a63d-715259d6b4b9" testId="d0cd9f70-6dc1-3c7d-5cf8-851aa39eea33" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetUserContributions_ShouldReturnOk_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0362781" startTime="2025-09-16T23:51:44.4704740-06:00" endTime="2025-09-16T23:51:44.4704740-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fb7d4483-2515-4dd5-a63d-715259d6b4b9" />
    <UnitTestResult executionId="167045bb-81cc-4ed0-8087-5a7e0be85d89" testId="d7af24cc-1160-9a7c-4a14-3e64c6768ae5" testName="CodexBootstrap.Tests.ComprehensiveEndpointDiscovery.SwaggerEndpoint_ShouldReturnApiDocumentation" computerName="Seeker-Mac" duration="00:00:00.0021593" startTime="2025-09-16T23:51:44.9832080-06:00" endTime="2025-09-16T23:51:44.9832080-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="167045bb-81cc-4ed0-8087-5a7e0be85d89" />
    <UnitTestResult executionId="8f4e21d4-2911-499c-b601-3cf43d7c8ec4" testId="4c978083-c229-a01c-6a7c-ef18e5236170" testName="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldExchangeCodeForToken" computerName="Seeker-Mac" duration="00:00:00.1046022" startTime="2025-09-16T23:51:45.6066920-06:00" endTime="2025-09-16T23:51:45.6066920-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8f4e21d4-2911-499c-b601-3cf43d7c8ec4" />
    <UnitTestResult executionId="f2de6e1b-440e-4e59-8302-57e3ccd3deee" testId="410a93d4-5a0d-cd14-1966-c13e3bca40a5" testName="CodexBootstrap.Tests.Core.NodeRegistryTests.GetNodesByType_ShouldReturnNodesOfSpecificType" computerName="Seeker-Mac" duration="00:00:00.0007548" startTime="2025-09-16T23:51:44.2357590-06:00" endTime="2025-09-16T23:51:44.2357590-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f2de6e1b-440e-4e59-8302-57e3ccd3deee" />
    <UnitTestResult executionId="ac494f43-3695-4c37-a7c4-04ad02c42474" testId="0500d70f-e850-de9a-7eba-8164c3b2fd99" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetRelatedNews_ShouldReturnNotFound_WhenNewsItemNotFound" computerName="Seeker-Mac" duration="00:00:00.0064775" startTime="2025-09-16T23:52:10.9907620-06:00" endTime="2025-09-16T23:52:10.9907620-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ac494f43-3695-4c37-a7c4-04ad02c42474" />
    <UnitTestResult executionId="3530e997-5a8d-46ef-8904-810a67493e69" testId="bfb2c8de-1e85-9952-9db6-620f4acf1697" testName="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNodes_ShouldHandleInvalidQueryParameters" computerName="Seeker-Mac" duration="00:00:00.0140679" startTime="2025-09-16T23:51:44.7434580-06:00" endTime="2025-09-16T23:51:44.7434580-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3530e997-5a8d-46ef-8904-810a67493e69" />
    <UnitTestResult executionId="69aeeeb2-b71a-42b4-b26f-da01f8c62ede" testId="9674b376-d6ac-4703-6bfc-2eb31e6b6cc1" testName="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldGetIdentityProviders" computerName="Seeker-Mac" duration="00:00:00.0006269" startTime="2025-09-16T23:51:45.2857350-06:00" endTime="2025-09-16T23:51:45.2857350-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="69aeeeb2-b71a-42b4-b26f-da01f8c62ede" />
    <UnitTestResult executionId="ff8204e4-e7b7-4759-b155-8e99294b06b6" testId="cf881c4c-31da-3c3d-e657-0f7a60496f37" testName="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.DeleteConcept_ShouldReturnNotFound_WhenConceptDoesNotExist" computerName="Seeker-Mac" duration="00:00:00.0062222" startTime="2025-09-16T23:52:11.1706510-06:00" endTime="2025-09-16T23:52:11.1706510-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ff8204e4-e7b7-4759-b155-8e99294b06b6" />
    <UnitTestResult executionId="c0fd9a92-96a8-47cf-94f1-91bb800a70d7" testId="3869c8f5-7ab2-ef7f-cd2f-16c870de8af9" testName="CodexBootstrap.Tests.Core.NodeRegistryTests.UpsertEdge_ShouldRegisterEdgeSuccessfully" computerName="Seeker-Mac" duration="00:00:00.0007180" startTime="2025-09-16T23:51:44.2452190-06:00" endTime="2025-09-16T23:51:44.2452190-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c0fd9a92-96a8-47cf-94f1-91bb800a70d7" />
    <UnitTestResult executionId="0b02435a-a3bf-41e0-a0bc-5df364fd4c8d" testId="0864368a-5d20-d499-562d-dea9741e52aa" testName="CodexBootstrap.Tests.Integration.ApiIntegrationTests.ModulesEndpoint_ShouldReturnModuleList" computerName="Seeker-Mac" duration="00:00:00.0021706" startTime="2025-09-16T23:51:45.6426770-06:00" endTime="2025-09-16T23:51:45.6426770-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0b02435a-a3bf-41e0-a0bc-5df364fd4c8d" />
    <UnitTestResult executionId="af126b42-e4d3-4dab-a126-6ba2663aa2ba" testId="2b034947-95be-beab-d32d-a72ae9771ccd" testName="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.GetIdentityProviders_ShouldHandleConcurrentRequests" computerName="Seeker-Mac" duration="00:00:00.0126699" startTime="2025-09-16T23:52:11.3530690-06:00" endTime="2025-09-16T23:52:11.3530690-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="af126b42-e4d3-4dab-a126-6ba2663aa2ba" />
    <UnitTestResult executionId="1dc0b5e0-98f7-4232-9110-cc271290d80a" testId="c18159c8-c488-c465-11b5-e4f60944ebea" testName="CodexBootstrap.Tests.Core.LLMOrchestratorTests.ExecuteAsync_WithException_ShouldReturnError" computerName="Seeker-Mac" duration="00:00:00.0001605" startTime="2025-09-16T23:51:44.5719100-06:00" endTime="2025-09-16T23:51:44.5719100-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1dc0b5e0-98f7-4232-9110-cc271290d80a" />
    <UnitTestResult executionId="d0545c62-00fb-4877-83b1-92d2fe17f3c3" testId="419a8404-3052-a939-642f-9bc8d54507ed" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldRespondWithinAcceptableTime_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0010000" startTime="2025-09-16T23:51:44.4706760-06:00" endTime="2025-09-16T23:51:44.4706760-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d0545c62-00fb-4877-83b1-92d2fe17f3c3">
      <Output>
        <StdOut>Endpoint not yet implemented</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ac02222d-0c6f-41f3-a9d8-9f2989b1209d" testId="f3484da0-8315-cdca-e737-98c55468fb4e" testName="CodexBootstrap.Tests.Integration.ApiIntegrationTests.RootEndpoint_ShouldReturnResponse" computerName="Seeker-Mac" duration="00:00:00.0013125" startTime="2025-09-16T23:51:45.6549180-06:00" endTime="2025-09-16T23:51:45.6549180-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ac02222d-0c6f-41f3-a9d8-9f2989b1209d" />
    <UnitTestResult executionId="d70b1b3b-c1f3-4660-8bf8-3ec90a17eb10" testId="c0bc4442-97e7-adf6-c86b-0290475ca07f" testName="CodexBootstrap.Tests.PortConfigurationTests.Modules_ShouldBeAvailableOnPort" computerName="Seeker-Mac" duration="00:00:00.0045778" startTime="2025-09-16T23:51:45.6376290-06:00" endTime="2025-09-16T23:51:45.6376290-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d70b1b3b-c1f3-4660-8bf8-3ec90a17eb10" />
    <UnitTestResult executionId="91246df9-99a9-4565-919a-2f062efe209b" testId="4e538f89-b18c-cf2e-2f16-94dc81d451d9" testName="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetEdge_ShouldReturnEdge_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0010000" startTime="2025-09-16T23:51:44.7935780-06:00" endTime="2025-09-16T23:51:44.7935780-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="91246df9-99a9-4565-919a-2f062efe209b">
      <Output>
        <StdOut>Endpoint not yet implemented</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="37fc9177-9a12-480b-b8b1-fbf383fedd3e" testId="b3191fce-24b5-6614-db34-5b0f72b496c2" testName="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNodes_ShouldReturnNodesList" computerName="Seeker-Mac" duration="00:00:00.0037103" startTime="2025-09-16T23:51:44.7905090-06:00" endTime="2025-09-16T23:51:44.7905090-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="37fc9177-9a12-480b-b8b1-fbf383fedd3e" />
    <UnitTestResult executionId="51cdef10-f1c3-4256-96df-1d2690772a5a" testId="fc7bce22-4aa8-7f2e-5825-9a1561671044" testName="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNode_ShouldReturnNode_WhenNodeExists" computerName="Seeker-Mac" duration="00:00:00.0080100" startTime="2025-09-16T23:51:44.7791320-06:00" endTime="2025-09-16T23:51:44.7791320-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="51cdef10-f1c3-4256-96df-1d2690772a5a" />
    <UnitTestResult executionId="dd730b67-99c0-4a15-b9a6-45fe11ef0f82" testId="f1e9172e-c439-b721-cfd4-273b562aabf9" testName="CodexBootstrap.Tests.ApiEndpointTests.UserEndpoints_ShouldBeAccessible" computerName="Seeker-Mac" duration="00:00:00.0014499" startTime="2025-09-16T23:51:44.9568690-06:00" endTime="2025-09-16T23:51:44.9568690-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dd730b67-99c0-4a15-b9a6-45fe11ef0f82" />
    <UnitTestResult executionId="785dceba-abc6-4c04-b4bd-c6bda133f14a" testId="3bd72a3e-a2cb-9292-a956-91e21e17c8b0" testName="CodexBootstrap.Tests.ApiIntegrationTests.HealthEndpoint_ShouldReturnHealthyStatus" computerName="Seeker-Mac" duration="00:00:00.0137289" startTime="2025-09-16T23:51:44.6462280-06:00" endTime="2025-09-16T23:51:44.6462280-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="785dceba-abc6-4c04-b4bd-c6bda133f14a" />
    <UnitTestResult executionId="f6c040a0-3fd6-4a79-a3c2-c2e704ab3274" testId="9a702a54-932a-77ac-8e6e-5b1318f49c63" testName="CodexBootstrap.Tests.ComprehensiveEndpointDiscovery.DiscoverAllEndpoints_ShouldFindAvailableEndpoints" computerName="Seeker-Mac" duration="00:00:00.0131073" startTime="2025-09-16T23:51:44.9704180-06:00" endTime="2025-09-16T23:51:44.9704180-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f6c040a0-3fd6-4a79-a3c2-c2e704ab3274" />
    <UnitTestResult executionId="dfbc649e-2a97-4df8-af71-61f940526426" testId="d369dd01-3a76-1028-9769-257b2738d39c" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetTrendingTopics_ShouldAcceptLimitParameter" computerName="Seeker-Mac" duration="00:00:00.0023016" startTime="2025-09-16T23:52:10.9308960-06:00" endTime="2025-09-16T23:52:10.9308960-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dfbc649e-2a97-4df8-af71-61f940526426" />
    <UnitTestResult executionId="0859bce5-c0e4-4bd6-98a3-7d3f5f55ccb5" testId="441903f8-b742-d387-3227-bca90d5fdf20" testName="CodexBootstrap.Tests.Integration.ApiIntegrationTests.SwaggerEndpoint_ShouldReturnSwaggerDocumentation" computerName="Seeker-Mac" duration="00:00:00.0020035" startTime="2025-09-16T23:51:45.6449660-06:00" endTime="2025-09-16T23:51:45.6449660-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0859bce5-c0e4-4bd6-98a3-7d3f5f55ccb5" />
    <UnitTestResult executionId="50675118-ac16-45a1-bc62-5f54fae13ffd" testId="e9843f28-60bb-39a2-a561-28fdfd88f317" testName="CodexBootstrap.Tests.SimpleIntegrationTests.RootEndpoint_ShouldRespond" computerName="Seeker-Mac" duration="00:00:00.0022698" startTime="2025-09-16T23:52:10.8333980-06:00" endTime="2025-09-16T23:52:10.8333980-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="50675118-ac16-45a1-bc62-5f54fae13ffd" />
    <UnitTestResult executionId="7ea8288a-2040-480b-816b-54669de4efa9" testId="aceb456b-29fd-0aae-6a6f-60147dd6581b" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetTrendingTopics_ShouldHandleInvalidParameters" computerName="Seeker-Mac" duration="00:00:00.0024437" startTime="2025-09-16T23:52:10.9396960-06:00" endTime="2025-09-16T23:52:10.9396960-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7ea8288a-2040-480b-816b-54669de4efa9" />
    <UnitTestResult executionId="5586c98e-65dc-404e-9866-8ecf8af48ca9" testId="a4d19a43-eee6-b34b-17f0-66d7158f5890" testName="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.GetConcept_ShouldReturnConcept_WhenConceptExists" computerName="Seeker-Mac" duration="00:00:00.0027548" startTime="2025-09-16T23:52:11.1614910-06:00" endTime="2025-09-16T23:52:11.1614910-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5586c98e-65dc-404e-9866-8ecf8af48ca9" />
    <UnitTestResult executionId="a1c286be-275f-4ac2-90c8-b5ba06fc8657" testId="db697f2e-ce6c-0e67-fba6-9e9dcf38b114" testName="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.DeleteConcept_ShouldReturnSuccess_WhenConceptExists" computerName="Seeker-Mac" duration="00:00:00.0025245" startTime="2025-09-16T23:52:11.1734040-06:00" endTime="2025-09-16T23:52:11.1734040-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a1c286be-275f-4ac2-90c8-b5ba06fc8657" />
    <UnitTestResult executionId="c7d5a7d1-2fda-4192-aa72-5cece35cb18d" testId="49aabe26-596c-6a15-06b4-9dadc7c4733a" testName="CodexBootstrap.Tests.IdentityTests.CreateUser_ShouldCreateNewUser" computerName="Seeker-Mac" duration="00:00:00.0065405" startTime="2025-09-16T23:51:45.2631910-06:00" endTime="2025-09-16T23:51:45.2631910-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c7d5a7d1-2fda-4192-aa72-5cece35cb18d" />
    <UnitTestResult executionId="9ec3dc7b-fbd9-4aaa-90c8-cfcb810b67e6" testId="6090d8db-c083-ec38-5d91-cefe25a89520" testName="CodexBootstrap.Tests.HealthTests.HealthCheck_ShouldReturnHealthyStatus" computerName="Seeker-Mac" duration="00:00:00.0052056" startTime="2025-09-16T23:51:45.0024880-06:00" endTime="2025-09-16T23:51:45.0024880-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9ec3dc7b-fbd9-4aaa-90c8-cfcb810b67e6" />
    <UnitTestResult executionId="2062356e-0766-44d3-ad40-13303c46675c" testId="7a9984de-d3ac-18cd-d3c6-06e7c8272524" testName="CodexBootstrap.Tests.Modules.CoreModuleTests.GetModuleNode_ShouldReturnModuleNode" computerName="Seeker-Mac" duration="00:00:00.0002264" startTime="2025-09-16T23:52:11.0761290-06:00" endTime="2025-09-16T23:52:11.0761290-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2062356e-0766-44d3-ad40-13303c46675c" />
    <UnitTestResult executionId="5be1c193-0cd0-42e0-972b-25a9ec0240c0" testId="f2016284-bdfc-f7ad-0e9e-b1b0fe7c0d74" testName="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.GetConcepts_ShouldReturnConcepts_WhenConceptsExist" computerName="Seeker-Mac" duration="00:00:00.0024760" startTime="2025-09-16T23:52:11.1845370-06:00" endTime="2025-09-16T23:52:11.1845370-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5be1c193-0cd0-42e0-972b-25a9ec0240c0" />
    <UnitTestResult executionId="e18d3b5d-6781-4c0a-bd77-bc1f9b0b8cfc" testId="8825c2ca-e48a-f1b9-4ae4-5d782ac55816" testName="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.UpdateConcept_ShouldReturnNotFound_WhenConceptDoesNotExist" computerName="Seeker-Mac" duration="00:00:00.0060912" startTime="2025-09-16T23:52:11.1818670-06:00" endTime="2025-09-16T23:52:11.1818680-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e18d3b5d-6781-4c0a-bd77-bc1f9b0b8cfc" />
    <UnitTestResult executionId="7f9fdece-621e-4cb5-af9a-7c1664730e51" testId="0eb841ee-4360-bfaa-b760-47ef164dac80" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldReturnEnergyValue_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0010000" startTime="2025-09-16T23:51:44.4776400-06:00" endTime="2025-09-16T23:51:44.4776400-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7f9fdece-621e-4cb5-af9a-7c1664730e51">
      <Output>
        <StdOut>Endpoint not yet implemented</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d2c06929-4855-4db1-b475-bd4e7f1b8b14" testId="a5fef099-ba7b-ffee-c1d2-cd74a2ae92e6" testName="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldHandleCallback" computerName="Seeker-Mac" duration="00:00:00.1725943" startTime="2025-09-16T23:51:45.1754840-06:00" endTime="2025-09-16T23:51:45.1754840-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d2c06929-4855-4db1-b475-bd4e7f1b8b14" />
    <UnitTestResult executionId="d277a49b-c9c2-4cb2-b370-0032d27809bd" testId="4e73c103-f467-67e6-7049-e34249ba699f" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.SearchNews_ShouldReturnEmptyResults_WhenNoNewsAvailable" computerName="Seeker-Mac" duration="00:00:00.0055950" startTime="2025-09-16T23:52:10.9692700-06:00" endTime="2025-09-16T23:52:10.9692700-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d277a49b-c9c2-4cb2-b370-0032d27809bd" />
    <UnitTestResult executionId="1c818ecc-bc5a-475f-bd2e-839a93f1cfb3" testId="0822fda8-1ecb-9b4b-b537-c5def62bdea6" testName="CodexBootstrap.Tests.PortConfigurationTests.Server_ShouldStartOnPort" computerName="Seeker-Mac" duration="00:00:00.0255082" startTime="2025-09-16T23:51:45.6327900-06:00" endTime="2025-09-16T23:51:45.6327900-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1c818ecc-bc5a-475f-bd2e-839a93f1cfb3" />
    <UnitTestResult executionId="96d0e6de-3456-4005-b6c6-bfb515059b34" testId="cda0a382-6483-cdc5-9e08-2b17d62c9076" testName="CodexBootstrap.Tests.Core.NodeRegistryTests.TryGet_WithNonExistentId_ShouldReturnFalse" computerName="Seeker-Mac" duration="00:00:00.0024837" startTime="2025-09-16T23:51:44.2626400-06:00" endTime="2025-09-16T23:51:44.2626400-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="96d0e6de-3456-4005-b6c6-bfb515059b34" />
    <UnitTestResult executionId="91bdd7dc-9488-466d-8c34-cc5adb7f1303" testId="137a3de0-5389-0354-9257-83888fc326aa" testName="CodexBootstrap.Tests.Integration.ApiIntegrationTests.HealthEndpoint_ShouldReturnHealthyStatus" computerName="Seeker-Mac" duration="00:00:00.0062893" startTime="2025-09-16T23:51:45.6515620-06:00" endTime="2025-09-16T23:51:45.6515620-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="91bdd7dc-9488-466d-8c34-cc5adb7f1303" />
    <UnitTestResult executionId="6bf75784-1860-4b40-abb8-35c2ddab7333" testId="81ece0d0-0623-f285-5aef-39638b72d8de" testName="CodexBootstrap.Tests.IdentityTests.CreateSession_ShouldCreateNewSession" computerName="Seeker-Mac" duration="00:00:00.0022582" startTime="2025-09-16T23:51:45.2396620-06:00" endTime="2025-09-16T23:51:45.2396620-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6bf75784-1860-4b40-abb8-35c2ddab7333" />
    <UnitTestResult executionId="9b719290-cb36-4b5d-93f5-55f887a9f4cc" testId="95697913-300a-0d09-fede-d269c1c9cc5a" testName="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.CreateConcept_ShouldReturnSuccess_WhenValidRequest" computerName="Seeker-Mac" duration="00:00:00.0042413" startTime="2025-09-16T23:52:11.1938520-06:00" endTime="2025-09-16T23:52:11.1938520-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9b719290-cb36-4b5d-93f5-55f887a9f4cc" />
    <UnitTestResult executionId="2807f7ab-d081-4a8e-870c-872216a19925" testId="f26cae9a-0cfd-3b5a-d1f4-d5ed084eadad" testName="CodexBootstrap.Tests.Modules.AIModuleTests.RegisterApiHandlers_ShouldNotThrow" computerName="Seeker-Mac" duration="00:00:00.0365261" startTime="2025-09-16T23:51:44.6086510-06:00" endTime="2025-09-16T23:51:44.6086510-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2807f7ab-d081-4a8e-870c-872216a19925" />
    <UnitTestResult executionId="9bddea4f-ef24-4925-ad1c-38619c45d21c" testId="330b9d6c-f08d-3484-f6a0-3b921f0a24a8" testName="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldValidateUser" computerName="Seeker-Mac" duration="00:00:00.0137515" startTime="2025-09-16T23:51:45.2850630-06:00" endTime="2025-09-16T23:51:45.2850630-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9bddea4f-ef24-4925-ad1c-38619c45d21c" />
    <UnitTestResult executionId="2edfe47a-dddc-4f73-aa72-ddfdc3368145" testId="fb0dc501-3b66-e027-61aa-7077b3c509b2" testName="CodexBootstrap.Tests.ApiIntegrationTests.GoogleOAuthLogin_ShouldInitiateLoginFlow" computerName="Seeker-Mac" duration="00:00:00.0019513" startTime="2025-09-16T23:51:44.6635970-06:00" endTime="2025-09-16T23:51:44.6635970-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2edfe47a-dddc-4f73-aa72-ddfdc3368145" />
    <UnitTestResult executionId="9e3258ff-d933-43e5-8770-929918979113" testId="9398df0f-b7e2-21ef-6751-b96144b08a9b" testName="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.GetConcept_ShouldReturnNotFound_WhenConceptDoesNotExist" computerName="Seeker-Mac" duration="00:00:00.0044558" startTime="2025-09-16T23:52:11.1892860-06:00" endTime="2025-09-16T23:52:11.1892860-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9e3258ff-d933-43e5-8770-929918979113" />
    <UnitTestResult executionId="9a57ddc8-a719-4f19-9998-80b5d1dbd871" testId="5c474062-002c-63b6-812f-52223136dd77" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.MarkNewsAsRead_ShouldReturnSuccess_WhenCalled" computerName="Seeker-Mac" duration="00:00:00.0026529" startTime="2025-09-16T23:52:10.9721380-06:00" endTime="2025-09-16T23:52:10.9721380-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9a57ddc8-a719-4f19-9998-80b5d1dbd871" />
    <UnitTestResult executionId="0c4237c4-1403-4f73-9c77-25c59e770e3f" testId="c1296972-c12d-1979-50fb-ef6e48530532" testName="CodexBootstrap.Tests.Core.LLMOrchestratorTests.ExecuteAsync_WithUnavailableService_ShouldReturnFallback" computerName="Seeker-Mac" duration="00:00:00.0005191" startTime="2025-09-16T23:51:44.5712140-06:00" endTime="2025-09-16T23:51:44.5712140-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0c4237c4-1403-4f73-9c77-25c59e770e3f" />
    <UnitTestResult executionId="39d84de7-6793-4ce4-9b7b-22552fd39c84" testId="386a6c80-c37f-2520-1205-e565042cab19" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributionStats_ShouldReturnStats_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0010000" startTime="2025-09-16T23:51:44.4840290-06:00" endTime="2025-09-16T23:51:44.4840290-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="39d84de7-6793-4ce4-9b7b-22552fd39c84">
      <Output>
        <StdOut>Endpoint not yet implemented</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="12f40fa7-9fc5-4f53-b723-0d313ec6e008" testId="1c07a485-c5ef-f8ee-f55f-68f9eb497dae" testName="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.Authenticate_ShouldReturnSuccess_WhenValidCredentials" computerName="Seeker-Mac" duration="00:00:00.0019406" startTime="2025-09-16T23:52:11.3314120-06:00" endTime="2025-09-16T23:52:11.3314120-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="12f40fa7-9fc5-4f53-b723-0d313ec6e008" />
    <UnitTestResult executionId="fd4fd2da-d2d4-4216-9b08-85616b9b066e" testId="d54e53b6-4b26-6bd1-09f9-f73b753baeb3" testName="CodexBootstrap.Tests.ComprehensiveEndpointDiscovery.ModulesEndpoint_ShouldReturnStructuredData" computerName="Seeker-Mac" duration="00:00:00.0025810" startTime="2025-09-16T23:51:44.9808270-06:00" endTime="2025-09-16T23:51:44.9808270-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fd4fd2da-d2d4-4216-9b08-85616b9b066e" />
    <UnitTestResult executionId="e0750f4a-4ee3-4835-8ada-a128fd436935" testId="4bd130c7-f504-8b12-ce2a-87666fadd50e" testName="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNodes_ShouldRespondWithinAcceptableTime" computerName="Seeker-Mac" duration="00:00:00.0025822" startTime="2025-09-16T23:51:44.7819190-06:00" endTime="2025-09-16T23:51:44.7819190-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e0750f4a-4ee3-4835-8ada-a128fd436935" />
    <UnitTestResult executionId="2fde5f6f-8833-4269-a99f-757926b3a799" testId="5f30b836-0b78-553e-28a0-931140309955" testName="CodexBootstrap.Tests.Core.NodeRegistryTests.UpsertNode_WithDuplicateId_ShouldOverwrite" computerName="Seeker-Mac" duration="00:00:00.0011297" startTime="2025-09-16T23:51:44.2349810-06:00" endTime="2025-09-16T23:51:44.2349810-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2fde5f6f-8833-4269-a99f-757926b3a799" />
    <UnitTestResult executionId="a8c48cf4-0512-4433-86d6-00c112736649" testId="3ee13cb4-0958-6775-b9ba-c8af5a50fd57" testName="CodexBootstrap.Tests.IdentityTests.AuthenticateUser_ShouldAuthenticateValidUser" computerName="Seeker-Mac" duration="00:00:00.0024459" startTime="2025-09-16T23:51:45.2658410-06:00" endTime="2025-09-16T23:51:45.2658410-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a8c48cf4-0512-4433-86d6-00c112736649" />
    <UnitTestResult executionId="63ebd2c4-3cf6-4876-9793-23340d6ff322" testId="58ac984c-ccd6-0f0f-d8b2-fe2845649ddf" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldCreateContribution_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0010000" startTime="2025-09-16T23:51:44.5059290-06:00" endTime="2025-09-16T23:51:44.5059290-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="63ebd2c4-3cf6-4876-9793-23340d6ff322">
      <Output>
        <StdOut>Endpoint not yet implemented</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="317ba6bc-6028-4664-b2b1-19ec2bccd12d" testId="0c97d759-0190-10c2-9a46-6ea0e0639ab1" testName="CodexBootstrap.Tests.ApiEndpointTests.Root_ShouldReturnResponse" computerName="Seeker-Mac" duration="00:00:00.0020397" startTime="2025-09-16T23:51:44.9524480-06:00" endTime="2025-09-16T23:51:44.9524480-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="317ba6bc-6028-4664-b2b1-19ec2bccd12d" />
    <UnitTestResult executionId="1ba80c7d-cbd5-40d8-8936-e04eb29971a0" testId="9be0611b-f7d4-ce31-5093-d9477df4e742" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributionStats_ShouldReturnNotFound_WhenNotImplemented" computerName="Seeker-Mac" duration="00:00:00.0035767" startTime="2025-09-16T23:51:44.4838390-06:00" endTime="2025-09-16T23:51:44.4838390-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1ba80c7d-cbd5-40d8-8936-e04eb29971a0">
      <Output>
        <ErrorInfo>
          <Message>Expected response.StatusCode to be HttpStatusCode.NotFound {value: 404}, but found HttpStatusCode.MethodNotAllowed {value: 405}.</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
   at FluentAssertions.Primitives.EnumAssertions`2.Be(TEnum expected, String because, Object[] becauseArgs)
   at CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributionStats_ShouldReturnNotFound_WhenNotImplemented() in /Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/Modules/EnergyModuleApiTests.cs:line 74
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b7f2da22-8e78-43a5-baa8-8f9629c0afe8" testId="8e2e70aa-52bc-bb4c-eb25-92a87f9a71ab" testName="CodexBootstrap.Tests.Modules.CoreModuleTests.Constructor_ShouldInitializeCorrectly" computerName="Seeker-Mac" duration="00:00:00.0001015" startTime="2025-09-16T23:52:11.0762490-06:00" endTime="2025-09-16T23:52:11.0762490-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b7f2da22-8e78-43a5-baa8-8f9629c0afe8" />
    <UnitTestResult executionId="98e0ed69-b643-4571-a185-920c6890ed52" testId="bae85a23-fcdf-5f3d-d506-0fa1d219f067" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetTrendingTopics_ShouldRespondWithinAcceptableTime" computerName="Seeker-Mac" duration="00:00:00.0022793" startTime="2025-09-16T23:52:10.9840890-06:00" endTime="2025-09-16T23:52:10.9840900-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="98e0ed69-b643-4571-a185-920c6890ed52" />
    <UnitTestResult executionId="e54b1f90-ccc5-4e74-ade0-c92f5ccdf5b8" testId="b99ace35-33d5-7d18-6ea4-38a87a6c5135" testName="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.GetConcepts_ShouldRespondWithinAcceptableTime" computerName="Seeker-Mac" duration="00:00:00.0019623" startTime="2025-09-16T23:52:11.1755850-06:00" endTime="2025-09-16T23:52:11.1755850-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e54b1f90-ccc5-4e74-ade0-c92f5ccdf5b8" />
    <UnitTestResult executionId="9132fb45-2c0b-45fa-ba1e-707b31631b34" testId="65b80104-e391-765d-11f2-1a66e8fb8050" testName="CodexBootstrap.Tests.Modules.AIModuleTests.RegisterHttpEndpoints_ShouldNotThrow" computerName="Seeker-Mac" duration="00:00:00.0003791" startTime="2025-09-16T23:51:44.6356910-06:00" endTime="2025-09-16T23:51:44.6356910-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9132fb45-2c0b-45fa-ba1e-707b31631b34" />
    <UnitTestResult executionId="f6765a5e-84ce-4443-8f59-950f2554df6f" testId="36c7d109-6289-1556-5b99-f94c9642b779" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetUserContributions_ShouldReturnContributionsList_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0010000" startTime="2025-09-16T23:51:44.3614220-06:00" endTime="2025-09-16T23:51:44.3614220-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f6765a5e-84ce-4443-8f59-950f2554df6f">
      <Output>
        <StdOut>Endpoint not yet implemented</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="752abb76-8363-4aa0-b72f-bf9d403006d2" testId="7fb892fc-7cfe-4a21-f5bf-3ca5ffe75254" testName="CodexBootstrap.Tests.SimpleIntegrationTests.SwaggerEndpoint_ShouldBeAccessible" computerName="Seeker-Mac" duration="00:00:00.0039160" startTime="2025-09-16T23:52:10.8309420-06:00" endTime="2025-09-16T23:52:10.8309420-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="752abb76-8363-4aa0-b72f-bf9d403006d2" />
    <UnitTestResult executionId="7ef36c34-6db0-41ae-a9be-690138c063e6" testId="494a6f72-6254-5a6e-4577-c52cd4a0c3cd" testName="CodexBootstrap.Tests.HealthTests.HealthCheck_ShouldIncludeSystemMetrics" computerName="Seeker-Mac" duration="00:00:00.0064287" startTime="2025-09-16T23:51:44.9970260-06:00" endTime="2025-09-16T23:51:44.9970260-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7ef36c34-6db0-41ae-a9be-690138c063e6" />
    <UnitTestResult executionId="89e1e588-b3f5-4962-9c22-e1f1882f358a" testId="52464efb-4166-65c1-6219-acc12f2b3ff6" testName="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.Authenticate_ShouldRespondWithinAcceptableTime" computerName="Seeker-Mac" duration="00:00:00.0078925" startTime="2025-09-16T23:52:11.3274350-06:00" endTime="2025-09-16T23:52:11.3274350-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="89e1e588-b3f5-4962-9c22-e1f1882f358a" />
    <UnitTestResult executionId="993db5ec-cf61-40ff-b04c-6aa96acfcda3" testId="2fb70c5e-3630-184f-467a-2c4ada567323" testName="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.SearchNodes_ShouldReturnSearchResults_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0119711" startTime="2025-09-16T23:51:44.7611090-06:00" endTime="2025-09-16T23:51:44.7611090-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="993db5ec-cf61-40ff-b04c-6aa96acfcda3" />
    <UnitTestResult executionId="3467a00b-a8fa-43a9-8572-d21ed9fb94a4" testId="075a023e-ceab-b914-c2b0-73dc9a4930e6" testName="CodexBootstrap.Tests.SimpleIntegrationTests.HealthEndpoint_ShouldReturnHealthyStatus" computerName="Seeker-Mac" duration="00:00:00.0204641" startTime="2025-09-16T23:52:10.8267690-06:00" endTime="2025-09-16T23:52:10.8267690-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3467a00b-a8fa-43a9-8572-d21ed9fb94a4" />
    <UnitTestResult executionId="cbb55add-9205-4ab1-9e29-009a12a8baef" testId="080e755c-ee7a-1e14-8f28-e087a10675d0" testName="CodexBootstrap.Tests.ApiIntegrationTests.OAuthProviders_ShouldReturnAvailableProviders" computerName="Seeker-Mac" duration="00:00:00.0019104" startTime="2025-09-16T23:51:44.6657020-06:00" endTime="2025-09-16T23:51:44.6657020-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cbb55add-9205-4ab1-9e29-009a12a8baef" />
    <UnitTestResult executionId="e438af9d-9ab4-4f13-a8d4-0dd67dcc1317" testId="9703efcc-6a13-36f7-cf46-5b1fef7db5be" testName="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.CreateConceptLegacy_ShouldReturnSuccess_WhenValidRequest" computerName="Seeker-Mac" duration="00:00:00.0069835" startTime="2025-09-16T23:52:11.1529250-06:00" endTime="2025-09-16T23:52:11.1529250-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e438af9d-9ab4-4f13-a8d4-0dd67dcc1317" />
    <UnitTestResult executionId="cba95566-0af3-47fb-a1c5-253b1ebd056b" testId="3ffad5fc-3d39-cf1b-b6aa-3a273e7e7f8c" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnUserEnergy_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0010000" startTime="2025-09-16T23:51:44.4793540-06:00" endTime="2025-09-16T23:51:44.4793540-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="NotExecuted" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cba95566-0af3-47fb-a1c5-253b1ebd056b">
      <Output>
        <StdOut>Endpoint not yet implemented</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="46eba62d-43f4-437f-8094-f8b7c62a3dd0" testId="44690745-9c88-3bf3-0c2f-a725a9065892" testName="CodexBootstrap.Tests.Modules.AIModuleTests.Register_ShouldRegisterModuleWithRegistry" computerName="Seeker-Mac" duration="00:00:00.0169496" startTime="2025-09-16T23:51:44.6356390-06:00" endTime="2025-09-16T23:51:44.6356390-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="46eba62d-43f4-437f-8094-f8b7c62a3dd0">
      <Output>
        <ErrorInfo>
          <Message>Moq.MockException : 
Expected invocation on the mock exactly 5 times, but was 9 times: x =&gt; x.Upsert(It.IsAny&lt;Node&gt;())

Performed invocations:

   Mock&lt;INodeRegistry:7&gt; (x):

      INodeRegistry.Upsert(Node { Id = prompt.concept-extraction, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = Concept Extraction, Description = Prompt template for analysis, Content = ContentRef { MediaType = application/json, InlineJson = {
  "template": "Analyze the following text for consciousness-related concepts.\n\nText: \u0022{content}\u0022\n\nFocus on: consciousness, transformation, unity, love, wisdom, energy, healing, abundance, sacred patterns.\n\nIMPORTANT: Return ONLY a valid JSON array, no markdown, no explanations, no additional text. Start with [ and end with ].\n\n[\n  {{\n    \u0022concept\u0022: \u0022concept_name\u0022,\n    \u0022score\u0022: 0.0-1.0,\n    \u0022description\u0022: \u0022brief description\u0022,\n    \u0022category\u0022: \u0022consciousness|transformation|unity|love|wisdom|energy|healing|abundance|sacred|fractal\u0022,\n    \u0022confidence\u0022: 0.0-1.0\n  }}\n]",
  "defaultParameters": {
    "content": ""
  },
  "defaultLLMConfig": {
    "id": "default-ai",
    "name": "Default AI Config",
    "provider": "ollama",
    "model": "llama2",
    "apiKey": "",
    "baseUrl": "http://localhost:11434",
    "maxTokens": 1000,
    "temperature": 0.3,
    "topP": 0.9,
    "parameters": {
      "stop": [
        "---",
        "###"
      ]
    }
  },
  "category": "analysis"
}, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
      INodeRegistry.Upsert(Node { Id = prompt.fractal-transformation, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = Fractal Transformation, Description = Prompt template for transformation, Content = ContentRef { MediaType = application/json, InlineJson = {
  "template": "You are a JSON API. You must respond with ONLY valid JSON. No markdown, no explanations, no other text.\n\nTransform this content: \u0022{content}\u0022\n\nReturn this exact JSON structure:\n{\n  \u0022headline\u0022: \u0022transformed headline\u0022,\n  \u0022beliefTranslation\u0022: \u0022how this translates to belief systems\u0022,\n  \u0022summary\u0022: \u0022transformed summary\u0022,\n  \u0022impactAreas\u0022: [\u0022area1\u0022, \u0022area2\u0022],\n  \u0022consciousnessLevel\u0022: \u0022L3\u0022,\n  \u0022resonanceFrequency\u0022: 0.8,\n  \u0022unityScore\u0022: 0.7\n}\n\nRESPOND WITH ONLY THE JSON OBJECT. NO OTHER TEXT.",
  "defaultParameters": {
    "content": "",
    "consciousnessLevel": "L3"
  },
  "defaultLLMConfig": {
    "id": "default-ai",
    "name": "Default AI Config",
    "provider": "ollama",
    "model": "llama2",
    "apiKey": "",
    "baseUrl": "http://localhost:11434",
    "maxTokens": 1000,
    "temperature": 0.3,
    "topP": 0.9,
    "parameters": {
      "stop": [
        "---",
        "###"
      ]
    }
  },
  "category": "transformation"
}, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
      INodeRegistry.Upsert(Node { Id = prompt.scoring-analysis, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = Scoring Analysis, Description = Prompt template for analysis, Content = ContentRef { MediaType = application/json, InlineJson = {
  "template": "Analyze and score the following content based on the specified criteria.\n\nContent: \u0022{content}\u0022\nAnalysis Type: {analysisType}\nCriteria: {criteria}\n\nScore each criterion from 0.0 to 1.0:\n- Abundance: Growth, prosperity, opportunity, collective benefit\n- Consciousness: Awareness, mindfulness, wisdom, spiritual insight\n- Unity: Connection, collaboration, harmony, global perspective\n\nIMPORTANT: Return ONLY a valid JSON object, no markdown, no explanations, no additional text. Start with {{ and end with }}.\n\n{{\n  \u0022abundanceScore\u0022: 0.0-1.0,\n  \u0022consciousnessScore\u0022: 0.0-1.0,\n  \u0022unityScore\u0022: 0.0-1.0,\n  \u0022overallScore\u0022: 0.0-1.0,\n  \u0022reasoning\u0022: \u0022brief explanation of scores\u0022\n}}",
  "defaultParameters": {
    "content": "",
    "analysisType": "general",
    "criteria": [
      "relevance",
      "quality",
      "impact"
    ]
  },
  "defaultLLMConfig": {
    "id": "default-ai",
    "name": "Default AI Config",
    "provider": "ollama",
    "model": "llama2",
    "apiKey": "",
    "baseUrl": "http://localhost:11434",
    "maxTokens": 1000,
    "temperature": 0.3,
    "topP": 0.9,
    "parameters": {
      "stop": [
        "---",
        "###"
      ]
    }
  },
  "category": "analysis"
}, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
      INodeRegistry.Upsert(Node { Id = prompt.future-query, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = Future Knowledge Query, Description = Prompt template for future, Content = ContentRef { MediaType = application/json, InlineJson = {
  "template": "You are an advanced AI specializing in future knowledge and consciousness expansion.\n\nContext: {context}\nTime Horizon: {timeHorizon}\nPerspective: {perspective}\n\nQuery: {query}\n\nProvide insights focusing on:\n1. Future scenarios and trends\n2. Consciousness implications\n3. Practical applications\n4. Spiritual insights\n\nResponse:",
  "defaultParameters": {
    "context": "",
    "timeHorizon": "5 years",
    "perspective": "consciousness-expanding",
    "query": ""
  },
  "defaultLLMConfig": {
    "id": "default-ai",
    "name": "Default AI Config",
    "provider": "ollama",
    "model": "llama2",
    "apiKey": "",
    "baseUrl": "http://localhost:11434",
    "maxTokens": 1000,
    "temperature": 0.3,
    "topP": 0.9,
    "parameters": {
      "stop": [
        "---",
        "###"
      ]
    }
  },
  "category": "future"
}, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
      INodeRegistry.Upsert(Node { Id = prompt.ui-page-generation, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = UI Page Generation, Description = Prompt template for ui-generation, Content = ContentRef { MediaType = application/json, InlineJson = {
  "template": "Generate a Next.js page component from this UI atom specification.\n\nUI Atom: {uiAtom}\n\nRequirements:\n- Use TypeScript and Tailwind CSS\n- Implement the specified lenses and controls\n- Connect to the declared API endpoints\n- Follow the Living Codex design principles (resonance, joy, unity)\n- Use React Query for data fetching\n- Include proper error handling and loading states\n\nIMPORTANT: Return ONLY valid TypeScript code, no markdown, no explanations, no additional text.\n\n\u0060\u0060\u0060typescript\n{generatedCode}\n\u0060\u0060\u0060",
  "defaultParameters": {
    "uiAtom": "",
    "generatedCode": ""
  },
  "defaultLLMConfig": {
    "id": "default-ai",
    "name": "Default AI Config",
    "provider": "ollama",
    "model": "llama2",
    "apiKey": "",
    "baseUrl": "http://localhost:11434",
    "maxTokens": 1000,
    "temperature": 0.3,
    "topP": 0.9,
    "parameters": {
      "stop": [
        "---",
        "###"
      ]
    }
  },
  "category": "ui-generation"
}, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
      INodeRegistry.Upsert(Node { Id = prompt.ui-component-generation, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = UI Component Generation, Description = Prompt template for ui-generation, Content = ContentRef { MediaType = application/json, InlineJson = {
  "template": "Generate a React component from this lens specification.\n\nLens Spec: {lensSpec}\nComponent Type: {componentType}\nRequirements: {requirements}\n\nRequirements:\n- Use the specified projection type (list, masonry, thread, etc.)\n- Implement the declared actions (attune, amplify, weave, reflect, invite)\n- Connect to the adapter endpoints\n- Follow resonance-driven design principles\n- Use TypeScript and Tailwind CSS\n- Include proper TypeScript interfaces\n\nIMPORTANT: Return ONLY valid TypeScript code, no markdown, no explanations, no additional text.\n\n\u0060\u0060\u0060typescript\n{generatedCode}\n\u0060\u0060\u0060",
  "defaultParameters": {
    "lensSpec": "",
    "componentType": "list",
    "requirements": "",
    "generatedCode": ""
  },
  "defaultLLMConfig": {
    "id": "default-ai",
    "name": "Default AI Config",
    "provider": "ollama",
    "model": "llama2",
    "apiKey": "",
    "baseUrl": "http://localhost:11434",
    "maxTokens": 1000,
    "temperature": 0.3,
    "topP": 0.9,
    "parameters": {
      "stop": [
        "---",
        "###"
      ]
    }
  },
  "category": "ui-generation"
}, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
      INodeRegistry.Upsert(Node { Id = prompt.ui-feedback-analysis, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = UI Feedback Analysis, Description = Prompt template for ui-feedback, Content = ContentRef { MediaType = application/json, InlineJson = {
  "template": "Analyze user feedback on this UI component and suggest specific improvements.\n\nComponent ID: {componentId}\nComponent Code: {componentCode}\nUser Feedback: {feedback}\nUsage Metrics: {metrics}\n\nAnalyze and suggest improvements to:\n1. Copy and messaging (resonance, joy, clarity)\n2. Interaction patterns (attune, amplify, weave, reflect, invite)\n3. Visual design (resonance-driven, inviting, not overwhelming)\n4. API integration (endpoint bindings, error handling)\n5. Performance and accessibility\n\nIMPORTANT: Return ONLY a valid JSON object, no markdown, no explanations, no additional text.\n\n{{\n  \u0022analysis\u0022: {{\n    \u0022strengths\u0022: [\u0022strength1\u0022, \u0022strength2\u0022],\n    \u0022weaknesses\u0022: [\u0022weakness1\u0022, \u0022weakness2\u0022],\n    \u0022suggestions\u0022: [\n      {{\n        \u0022area\u0022: \u0022copy\u0022,\n        \u0022priority\u0022: \u0022high\u0022,\n        \u0022suggestion\u0022: \u0022specific improvement\u0022,\n        \u0022reasoning\u0022: \u0022why this helps\u0022\n      }}\n    ],\n    \u0022resonanceScore\u0022: 0.0-1.0,\n    \u0022joyScore\u0022: 0.0-1.0,\n    \u0022unityScore\u0022: 0.0-1.0\n  }},\n  \u0022recommendedChanges\u0022: [\n    {{\n      \u0022type\u0022: \u0022copy\u0022,\n      \u0022change\u0022: \u0022specific change to make\u0022,\n      \u0022impact\u0022: \u0022expected improvement\u0022\n    }}\n  ]\n}}",
  "defaultParameters": {
    "componentId": "",
    "componentCode": "",
    "feedback": "",
    "metrics": ""
  },
  "defaultLLMConfig": {
    "id": "default-ai",
    "name": "Default AI Config",
    "provider": "ollama",
    "model": "llama2",
    "apiKey": "",
    "baseUrl": "http://localhost:11434",
    "maxTokens": 1000,
    "temperature": 0.3,
    "topP": 0.9,
    "parameters": {
      "stop": [
        "---",
        "###"
      ]
    }
  },
  "category": "ui-feedback"
}, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
      INodeRegistry.Upsert(Node { Id = prompt.ui-pattern-evolution, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = UI Pattern Evolution, Description = Prompt template for ui-evolution, Content = ContentRef { MediaType = application/json, InlineJson = {
  "template": "Evolve this successful UI pattern into a reusable template for future components.\n\nOriginal Pattern: {originalPattern}\nSuccess Metrics: {successMetrics}\nEvolution Context: {evolutionContext}\n\nCreate an evolved template that:\n1. Generalizes the successful elements\n2. Maintains the resonance-driven principles\n3. Adds flexibility for different use cases\n4. Preserves the joy and unity aspects\n5. Includes proper TypeScript interfaces\n6. Documents the pattern\u0027s purpose and usage\n\nIMPORTANT: Return ONLY a valid JSON object with the evolved template, no markdown, no explanations, no additional text.\n\n{{\n  \u0022templateId\u0022: \u0022evolved-pattern-id\u0022,\n  \u0022name\u0022: \u0022Evolved Pattern Name\u0022,\n  \u0022description\u0022: \u0022What this pattern does\u0022,\n  \u0022category\u0022: \u0022lens|page|component|action\u0022,\n  \u0022template\u0022: {{\n    \u0022code\u0022: \u0022evolved TypeScript code\u0022,\n    \u0022interfaces\u0022: \u0022TypeScript interfaces\u0022,\n    \u0022props\u0022: [\u0022prop1\u0022, \u0022prop2\u0022],\n    \u0022endpoints\u0022: [\u0022endpoint1\u0022, \u0022endpoint2\u0022],\n    \u0022actions\u0022: [\u0022attune\u0022, \u0022amplify\u0022, \u0022weave\u0022]\n  }},\n  \u0022usage\u0022: {{\n    \u0022whenToUse\u0022: \u0022when to apply this pattern\u0022,\n    \u0022variations\u0022: [\u0022variation1\u0022, \u0022variation2\u0022],\n    \u0022customization\u0022: [\u0022customization1\u0022, \u0022customization2\u0022]\n  }},\n  \u0022resonanceFactors\u0022: {{\n    \u0022joy\u0022: 0.0-1.0,\n    \u0022unity\u0022: 0.0-1.0,\n    \u0022clarity\u0022: 0.0-1.0,\n    \u0022engagement\u0022: 0.0-1.0\n  }}\n}}",
  "defaultParameters": {
    "originalPattern": "",
    "successMetrics": "",
    "evolutionContext": ""
  },
  "defaultLLMConfig": {
    "id": "default-ai",
    "name": "Default AI Config",
    "provider": "ollama",
    "model": "llama2",
    "apiKey": "",
    "baseUrl": "http://localhost:11434",
    "maxTokens": 1000,
    "temperature": 0.3,
    "topP": 0.9,
    "parameters": {
      "stop": [
        "---",
        "###"
      ]
    }
  },
  "category": "ui-evolution"
}, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
      INodeRegistry.Upsert(Node { Id = ai-module, TypeId = codex.meta/module, State = Ice, Locale = en-US, Title = AI Module (Refactored), Description = Streamlined AI functionality with configurable prompts and reusable patterns, Content = ContentRef { MediaType = application/json, InlineJson = {"ModuleId":"ai-module","Name":"AI Module (Refactored)","Version":"2.0.0","Description":"Streamlined AI functionality with configurable prompts and reusable patterns","Tags":["ai","concepts","llm","analysis","refactored"],"Capabilities":["concept-extraction","llm-integration","fractal-transformation","analysis"],"Spec":"codex.spec.ai"}, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
</Message>
          <StackTrace>   at Moq.Mock.Verify(Mock mock, LambdaExpression expression, Times times, String failMessage) in /_/src/Moq/Mock.cs:line 331
   at Moq.Mock`1.Verify(Expression`1 expression, Times times) in /_/src/Moq/Mock`1.cs:line 920
   at CodexBootstrap.Tests.Modules.AIModuleTests.Register_ShouldRegisterModuleWithRegistry() in /Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/Modules/AIModuleTests.cs:line 56</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="907c5ed9-7572-4070-930e-cefbea0fdbf7" testId="48f0b978-87f3-597c-b969-584d8c7f342b" testName="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetEdges_ShouldReturnEdgesList_WhenImplemented" computerName="Seeker-Mac" duration="00:00:00.0044428" startTime="2025-09-16T23:51:44.7866220-06:00" endTime="2025-09-16T23:51:44.7866220-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="907c5ed9-7572-4070-930e-cefbea0fdbf7" />
    <UnitTestResult executionId="7d120f02-c420-4c49-90ad-b4699204c010" testId="079febbc-fefa-997d-a518-2bb9b896a10f" testName="CodexBootstrap.Tests.ApiEndpointTests.Modules_ShouldReturnModuleList" computerName="Seeker-Mac" duration="00:00:00.0025060" startTime="2025-09-16T23:51:44.9552100-06:00" endTime="2025-09-16T23:51:44.9552100-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7d120f02-c420-4c49-90ad-b4699204c010" />
    <UnitTestResult executionId="1cda3bc2-1b0d-46df-b23d-0b1736068a2f" testId="6d4dda94-e519-5838-44e2-8dc3d94e25ab" testName="CodexBootstrap.Tests.ApiIntegrationTests.Swagger_ShouldBeAvailable" computerName="Seeker-Mac" duration="00:00:00.0026760" startTime="2025-09-16T23:51:44.6614890-06:00" endTime="2025-09-16T23:51:44.6614890-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1cda3bc2-1b0d-46df-b23d-0b1736068a2f" />
    <UnitTestResult executionId="a22abb1f-696a-40ab-8e29-2444e39b8473" testId="1f7976e5-938b-de19-e4f9-70a3b56afbf7" testName="CodexBootstrap.Tests.Modules.AIModuleTests.Description_ShouldReturnCorrectDescription" computerName="Seeker-Mac" duration="00:00:00.0003806" startTime="2025-09-16T23:51:44.6116270-06:00" endTime="2025-09-16T23:51:44.6116270-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a22abb1f-696a-40ab-8e29-2444e39b8473" />
    <UnitTestResult executionId="e91bb5ae-6a22-4328-af2d-8ad1ef2b854a" testId="6e5a8b91-6a75-56d3-b317-a9ac48ab0672" testName="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNodes_ShouldAcceptQueryParameters" computerName="Seeker-Mac" duration="00:00:00.0033500" startTime="2025-09-16T23:51:44.7709070-06:00" endTime="2025-09-16T23:51:44.7709070-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e91bb5ae-6a22-4328-af2d-8ad1ef2b854a" />
    <UnitTestResult executionId="6d109a3f-e1d3-4dab-a3a5-3efc24bc7717" testId="4f365743-de47-b07f-fd2b-1af885da9411" testName="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.Authenticate_ShouldReturnBadRequest_WhenInvalidRequest" computerName="Seeker-Mac" duration="00:00:00.0070940" startTime="2025-09-16T23:52:11.3687980-06:00" endTime="2025-09-16T23:52:11.3687980-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6d109a3f-e1d3-4dab-a3a5-3efc24bc7717" />
    <UnitTestResult executionId="b6b432ba-1708-4fa4-a2f7-4cf25036e6e2" testId="0f0b59f9-3161-1d3d-fc85-4e0ab616dec1" testName="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetTrendingTopics_ShouldReturnTopicsList" computerName="Seeker-Mac" duration="00:00:00.0111128" startTime="2025-09-16T23:52:10.9283900-06:00" endTime="2025-09-16T23:52:10.9283900-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b6b432ba-1708-4fa4-a2f7-4cf25036e6e2" />
    <UnitTestResult executionId="d766c103-ee8c-47d4-936c-7e7828122f36" testId="904747e7-ff5e-8218-74d7-bb12f2b82a35" testName="CodexBootstrap.Tests.Modules.AIModuleTests.Constructor_ShouldInitializeCorrectly" computerName="Seeker-Mac" duration="00:00:00.0003564" startTime="2025-09-16T23:51:44.6097300-06:00" endTime="2025-09-16T23:51:44.6097300-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d766c103-ee8c-47d4-936c-7e7828122f36" />
    <UnitTestResult executionId="cebeaf91-4e0c-4554-9c4f-e90c8192f417" testId="6599a9fd-a45c-3f51-a550-7571741afdc8" testName="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.GetConcepts_ShouldReturnValidConceptsArray" computerName="Seeker-Mac" duration="00:00:00.0031594" startTime="2025-09-16T23:52:11.1563670-06:00" endTime="2025-09-16T23:52:11.1563670-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cebeaf91-4e0c-4554-9c4f-e90c8192f417" />
    <UnitTestResult executionId="92e01a3a-3464-44ab-a36c-5519d1f2307e" testId="9362de11-64d0-3a11-bfe7-ba203f9734b0" testName="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.Authenticate_ShouldHandleMalformedJson" computerName="Seeker-Mac" duration="00:00:00.0017533" startTime="2025-09-16T23:52:11.3793690-06:00" endTime="2025-09-16T23:52:11.3793690-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="92e01a3a-3464-44ab-a36c-5519d1f2307e" />
    <UnitTestResult executionId="e1cc66bd-6c17-4c58-b358-5b7c1978229d" testId="d0160707-f909-e423-0bd5-ceb0e7a99a9c" testName="CodexBootstrap.Tests.Core.NodeRegistryTests.UpsertNode_WithValidNode_ShouldRegisterSuccessfully" computerName="Seeker-Mac" duration="00:00:00.0570561" startTime="2025-09-16T23:51:44.2306640-06:00" endTime="2025-09-16T23:51:44.2306780-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e1cc66bd-6c17-4c58-b358-5b7c1978229d" />
    <UnitTestResult executionId="3a9a4126-6257-4849-82ef-ed188bada953" testId="4d5b8656-5c24-f46d-b781-bdd5173b1d4a" testName="CodexBootstrap.Tests.PortConfigurationTests.Swagger_ShouldBeAvailableOnPort" computerName="Seeker-Mac" duration="00:00:00.0022319" startTime="2025-09-16T23:51:45.6400800-06:00" endTime="2025-09-16T23:51:45.6400800-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3a9a4126-6257-4849-82ef-ed188bada953" />
    <UnitTestResult executionId="5e9b58cb-a5aa-426f-8766-8e182d625c1b" testId="d42ce1cc-fe07-766d-01d9-4d3235eb06da" testName="CodexBootstrap.Tests.Core.NodeRegistryTests.Upsert_NodeStateTransitionUpdatesMemoryAndPersistence" computerName="Seeker-Mac" duration="00:00:00.0038775" startTime="2025-09-16T23:51:44.2415790-06:00" endTime="2025-09-16T23:51:44.2415790-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5e9b58cb-a5aa-426f-8766-8e182d625c1b" />
    <UnitTestResult executionId="cfcba634-eac2-4d2a-ab38-35650731be29" testId="b16e5439-5de2-497d-5713-ea1d44c4819a" testName="CodexBootstrap.Tests.Core.LLMOrchestratorTests.Constructor_ShouldInitializeCorrectly" computerName="Seeker-Mac" duration="00:00:00.0000208" startTime="2025-09-16T23:51:44.5719960-06:00" endTime="2025-09-16T23:51:44.5719960-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cfcba634-eac2-4d2a-ab38-35650731be29" />
    <UnitTestResult executionId="ae1569ae-d3bf-40ab-8130-cab8b7eedb58" testId="a1457caa-f4c9-ba63-922a-5d90fbfc1363" testName="CodexBootstrap.Tests.Core.NodeRegistryTests.GetEdgesFrom_ShouldReturnEdgesFromSpecificNode" computerName="Seeker-Mac" duration="00:00:00.0018791" startTime="2025-09-16T23:51:44.2376840-06:00" endTime="2025-09-16T23:51:44.2376840-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ae1569ae-d3bf-40ab-8130-cab8b7eedb58" />
    <UnitTestResult executionId="683b29a6-d2af-44f5-b387-2ee743a96c5b" testId="53137f9b-436e-e65c-fa32-e820c39f3209" testName="CodexBootstrap.Tests.ApiEndpointTests.Swagger_ShouldReturnDocumentation" computerName="Seeker-Mac" duration="00:00:00.0040836" startTime="2025-09-16T23:51:44.9340280-06:00" endTime="2025-09-16T23:51:44.9340280-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="683b29a6-d2af-44f5-b387-2ee743a96c5b" />
    <UnitTestResult executionId="79b52fbf-8958-4a53-8dc6-2622aa6fe70e" testId="7119bdd5-175e-ef34-2080-2f86d1730b51" testName="CodexBootstrap.Tests.IdentityTests.IdentityCallback_ShouldHandleMockAuthentication" computerName="Seeker-Mac" duration="00:00:00.1605818" startTime="2025-09-16T23:51:45.4465130-06:00" endTime="2025-09-16T23:51:45.4465130-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="79b52fbf-8958-4a53-8dc6-2622aa6fe70e" />
    <UnitTestResult executionId="12c202cf-fdca-49ec-88af-1b07c28a12ef" testId="3f4da332-2fb9-784e-8300-a3ffc13949c4" testName="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldGetAllMockUsers" computerName="Seeker-Mac" duration="00:00:00.0025880" startTime="2025-09-16T23:51:45.2018250-06:00" endTime="2025-09-16T23:51:45.2018250-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="12c202cf-fdca-49ec-88af-1b07c28a12ef" />
    <UnitTestResult executionId="2860807d-bb16-4aef-800d-35d0faff896c" testId="98c2172e-97df-13d5-a0eb-3bfd4b42a99b" testName="CodexBootstrap.Tests.Core.NodeRegistryTests.AllNodes_ShouldReturnAllRegisteredNodes" computerName="Seeker-Mac" duration="00:00:00.0033820" startTime="2025-09-16T23:51:44.2338290-06:00" endTime="2025-09-16T23:51:44.2338290-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2860807d-bb16-4aef-800d-35d0faff896c" />
    <UnitTestResult executionId="b931f8e9-81c5-44b9-92dc-b44cc8769dc1" testId="4dca77f7-77eb-7507-eede-4a10c4668d61" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldReturnNotFound_WhenNotImplemented" computerName="Seeker-Mac" duration="00:00:00.0216686" startTime="2025-09-16T23:51:44.5057840-06:00" endTime="2025-09-16T23:51:44.5057840-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b931f8e9-81c5-44b9-92dc-b44cc8769dc1">
      <Output>
        <ErrorInfo>
          <Message>Expected response.StatusCode to be HttpStatusCode.NotFound {value: 404}, but found HttpStatusCode.MethodNotAllowed {value: 405}.</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
   at FluentAssertions.Primitives.EnumAssertions`2.Be(TEnum expected, String because, Object[] becauseArgs)
   at CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldReturnNotFound_WhenNotImplemented() in /Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/Modules/EnergyModuleApiTests.cs:line 99
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="65c08d39-f1d5-4502-9199-756f3a81937e" testId="bb61d7e3-a613-b2b8-0303-181e7a73d65b" testName="CodexBootstrap.Tests.HealthTests.HealthCheck_ShouldReturnValidJson" computerName="Seeker-Mac" duration="00:00:00.0063857" startTime="2025-09-16T23:51:44.9901380-06:00" endTime="2025-09-16T23:51:44.9901380-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="65c08d39-f1d5-4502-9199-756f3a81937e" />
    <UnitTestResult executionId="ac4b1b45-16d3-43be-b6a9-b922da2fbef9" testId="2b00ad46-f32b-446f-acdc-2eea35c5f140" testName="CodexBootstrap.Tests.Modules.AIModuleTests.GetModuleNode_ShouldReturnModuleNode" computerName="Seeker-Mac" duration="00:00:00.0015132" startTime="2025-09-16T23:51:44.6112040-06:00" endTime="2025-09-16T23:51:44.6112040-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ac4b1b45-16d3-43be-b6a9-b922da2fbef9" />
    <UnitTestResult executionId="4a002470-2a1b-4c13-aa56-154c37fc9b69" testId="e816d20a-430f-2d97-9262-77eb57c11839" testName="CodexBootstrap.Tests.Modules.CoreModuleTests.Register_ShouldRegisterModuleWithRegistry" computerName="Seeker-Mac" duration="00:00:00.0014294" startTime="2025-09-16T23:52:11.0755880-06:00" endTime="2025-09-16T23:52:11.0755880-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4a002470-2a1b-4c13-aa56-154c37fc9b69" />
    <UnitTestResult executionId="c48ef3d1-368b-4a90-af23-964ddc763f35" testId="0e83f6d2-f0e7-2e47-ad7b-fd57feab6720" testName="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.GoogleLogin_ShouldReturnRedirect_WhenProviderAvailable" computerName="Seeker-Mac" duration="00:00:00.0016122" startTime="2025-09-16T23:52:11.3616290-06:00" endTime="2025-09-16T23:52:11.3616290-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c48ef3d1-368b-4a90-af23-964ddc763f35" />
    <UnitTestResult executionId="24bd23ff-e961-40b5-88e4-8bbf3d2d212f" testId="154b62c9-dfe1-2527-f8d9-a357f66717ec" testName="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNodes_ShouldHandleConcurrentRequests" computerName="Seeker-Mac" duration="00:00:00.0052476" startTime="2025-09-16T23:51:44.7489150-06:00" endTime="2025-09-16T23:51:44.7489150-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="24bd23ff-e961-40b5-88e4-8bbf3d2d212f" />
    <UnitTestResult executionId="bdda50ab-3e05-45fa-a08e-08ea3cc415eb" testId="5f315f1e-d6f1-03f6-3f34-8b951770fd4b" testName="CodexBootstrap.Tests.ApiIntegrationTests.Modules_ShouldBeAvailable" computerName="Seeker-Mac" duration="00:00:00.0029318" startTime="2025-09-16T23:51:44.6493730-06:00" endTime="2025-09-16T23:51:44.6493730-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bdda50ab-3e05-45fa-a08e-08ea3cc415eb" />
    <UnitTestResult executionId="a29bb7f0-8b17-4de8-a925-075e5398927a" testId="2b5053f9-f02a-344a-cea0-eb8a5823c6c3" testName="CodexBootstrap.Tests.ApiEndpointTests.Health_ShouldReturnHealthyStatus" computerName="Seeker-Mac" duration="00:00:00.0157677" startTime="2025-09-16T23:51:44.9500730-06:00" endTime="2025-09-16T23:51:44.9500730-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a29bb7f0-8b17-4de8-a925-075e5398927a" />
    <UnitTestResult executionId="c140f452-90be-4dcb-b867-75349a69873f" testId="65b09466-1f15-9c0c-7042-d7097a301973" testName="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldReturnNotFound_WhenNotImplemented" computerName="Seeker-Mac" duration="00:00:00.0697871" startTime="2025-09-16T23:51:44.4377140-06:00" endTime="2025-09-16T23:51:44.4377140-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c140f452-90be-4dcb-b867-75349a69873f">
      <Output>
        <ErrorInfo>
          <Message>Expected response.StatusCode to be HttpStatusCode.NotFound {value: 404}, but found HttpStatusCode.MethodNotAllowed {value: 405}.</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
   at FluentAssertions.Primitives.EnumAssertions`2.Be(TEnum expected, String because, Object[] becauseArgs)
   at CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldReturnNotFound_WhenNotImplemented() in /Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/Modules/EnergyModuleApiTests.cs:line 38
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="57174d7d-c454-4c1f-b9b7-92efa798bfe1" testId="0bbc52b8-9211-5e92-e7eb-f98e00a8add3" testName="CodexBootstrap.Tests.Core.NodeRegistryTests.InitializeAsync_HydratesNodesFromPersistentStorage" computerName="Seeker-Mac" duration="00:00:00.0021867" startTime="2025-09-16T23:51:44.2444880-06:00" endTime="2025-09-16T23:51:44.2444880-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="57174d7d-c454-4c1f-b9b7-92efa798bfe1" />
    <UnitTestResult executionId="0e4d6f94-ffed-4973-bcdd-c44affcc59bf" testId="a1a3cd79-a8ef-2dca-2a37-88922f31b2df" testName="CodexBootstrap.Tests.Core.NodeRegistryTests.EdgeState_ShouldFollowNodePhaseTransitions" computerName="Seeker-Mac" duration="00:00:00.0018975" startTime="2025-09-16T23:51:44.2627510-06:00" endTime="2025-09-16T23:51:44.2627510-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0e4d6f94-ffed-4973-bcdd-c44affcc59bf" />
    <UnitTestResult executionId="f40a77cf-cf9a-4841-a4d1-e059829f2c2a" testId="65b592a1-b0ad-ad07-be7a-ec8928e7c9ae" testName="CodexBootstrap.Tests.Modules.CoreModuleTests.RegisterHttpEndpoints_ShouldNotThrow" computerName="Seeker-Mac" duration="00:00:00.0002420" startTime="2025-09-16T23:52:11.0758620-06:00" endTime="2025-09-16T23:52:11.0758620-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f40a77cf-cf9a-4841-a4d1-e059829f2c2a" />
    <UnitTestResult executionId="2646bf30-2f81-4694-a89c-96c2245091b9" testId="739ddbc9-29fb-28c3-7b57-b5ec668cdd0c" testName="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.GetIdentityProviders_ShouldReturnProvidersList" computerName="Seeker-Mac" duration="00:00:00.0038424" startTime="2025-09-16T23:52:11.3401540-06:00" endTime="2025-09-16T23:52:11.3401540-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2646bf30-2f81-4694-a89c-96c2245091b9" />
    <UnitTestResult executionId="23bf0d44-dedc-4957-9141-66ff943c2737" testId="01fada6a-9beb-d06b-6787-0781734f5b1d" testName="CodexBootstrap.Tests.Core.LLMOrchestratorTests.ExecuteAsync_WithNonExistentTemplate_ShouldReturnError" computerName="Seeker-Mac" duration="00:00:00.0001444" startTime="2025-09-16T23:51:44.5719690-06:00" endTime="2025-09-16T23:51:44.5719690-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="23bf0d44-dedc-4957-9141-66ff943c2737" />
    <UnitTestResult executionId="e4b15fdc-5697-422b-a6f7-d19941d84f55" testId="e7b9a5d9-b357-ccab-0080-bfd9de9e4252" testName="CodexBootstrap.Tests.Modules.AIModuleTests.Version_ShouldReturnCorrectVersion" computerName="Seeker-Mac" duration="00:00:00.0005187" startTime="2025-09-16T23:51:44.6092330-06:00" endTime="2025-09-16T23:51:44.6092330-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e4b15fdc-5697-422b-a6f7-d19941d84f55" />
    <UnitTestResult executionId="8ab3633e-1509-407e-ad14-08d110e72166" testId="b66e2aed-6736-e5fb-1259-0a652017312d" testName="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldGetUserInfo" computerName="Seeker-Mac" duration="00:00:00.0550918" startTime="2025-09-16T23:51:45.5018380-06:00" endTime="2025-09-16T23:51:45.5018380-06:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8ab3633e-1509-407e-ad14-08d110e72166" />
  </Results>
  <TestDefinitions>
    <UnitTest name="CodexBootstrap.Tests.PortConfigurationTests.Server_ShouldStartOnPort" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="0822fda8-1ecb-9b4b-b537-c5def62bdea6">
      <Execution id="1c818ecc-bc5a-475f-bd2e-839a93f1cfb3" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.PortConfigurationTests" name="Server_ShouldStartOnPort" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNode_ShouldReturnNode_WhenNodeExists" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="fc7bce22-4aa8-7f2e-5825-9a1561671044">
      <Execution id="51cdef10-f1c3-4256-96df-1d2690772a5a" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests" name="GetNode_ShouldReturnNode_WhenNodeExists" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.AIModuleTests.GetModuleNode_ShouldReturnModuleNode" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="2b00ad46-f32b-446f-acdc-2eea35c5f140">
      <Execution id="ac4b1b45-16d3-43be-b6a9-b922da2fbef9" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.AIModuleTests" name="GetModuleNode_ShouldReturnModuleNode" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNodes_ShouldReturnNodesList" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="b3191fce-24b5-6614-db34-5b0f72b496c2">
      <Execution id="37fc9177-9a12-480b-b8b1-fbf383fedd3e" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests" name="GetNodes_ShouldReturnNodesList" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNode_ShouldReturnNotFound_WhenNodeDoesNotExist" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="e2097409-445a-3cd5-ae6e-0205fed90d91">
      <Execution id="93af7689-eeee-4eed-99da-effc1149c571" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests" name="GetNode_ShouldReturnNotFound_WhenNodeDoesNotExist" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.CreateConcept_ShouldReturnBadRequest_WhenInvalidRequest" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="d97a6a51-1d28-ab30-5e6f-d68d2a74dcbf">
      <Execution id="a01e9e3b-5ade-42c5-94da-2c8682f15224" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.ConceptModuleApiTests" name="CreateConcept_ShouldReturnBadRequest_WhenInvalidRequest" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.SearchNodes_ShouldReturnSearchResults_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="2fb70c5e-3630-184f-467a-2c4ada567323">
      <Execution id="993db5ec-cf61-40ff-b04c-6aa96acfcda3" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests" name="SearchNodes_ShouldReturnSearchResults_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetEdge_ShouldReturnNotFound_WhenNotImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="19691bde-a850-be64-1937-e776a14dda46">
      <Execution id="5e3d6a76-c5c6-46ae-b287-3ca7f6543838" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests" name="GetEdge_ShouldReturnNotFound_WhenNotImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.SimpleIntegrationTests.ModulesEndpoint_ShouldReturnModuleList" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="7873e7fc-d46d-3fb0-064c-39886ac6bd92">
      <Execution id="e72cb2c5-424b-4380-892c-1803ff8880b7" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.SimpleIntegrationTests" name="ModulesEndpoint_ShouldReturnModuleList" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.DeleteConcept_ShouldReturnNotFound_WhenConceptDoesNotExist" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="cf881c4c-31da-3c3d-e657-0f7a60496f37">
      <Execution id="ff8204e4-e7b7-4759-b155-8e99294b06b6" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.ConceptModuleApiTests" name="DeleteConcept_ShouldReturnNotFound_WhenConceptDoesNotExist" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetUserContributions_ShouldReturnOk_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="d0cd9f70-6dc1-3c7d-5cf8-851aa39eea33">
      <Execution id="fb7d4483-2515-4dd5-a63d-715259d6b4b9" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="GetUserContributions_ShouldReturnOk_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.LLMOrchestratorTests.ExecuteAsync_WithValidTemplate_ShouldReturnSuccessResponse" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="d9ebdab0-e0e1-4dfb-e6ef-0b0976546f6d">
      <Execution id="a3f79989-e104-4bc5-9f55-33ae94eb3eb3" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.LLMOrchestratorTests" name="ExecuteAsync_WithValidTemplate_ShouldReturnSuccessResponse" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Integration.ApiIntegrationTests.RootEndpoint_ShouldReturnResponse" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="f3484da0-8315-cdca-e737-98c55468fb4e">
      <Execution id="ac02222d-0c6f-41f3-a9d8-9f2989b1209d" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Integration.ApiIntegrationTests" name="RootEndpoint_ShouldReturnResponse" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNodes_ShouldAcceptQueryParameters" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="6e5a8b91-6a75-56d3-b317-a9ac48ab0672">
      <Execution id="e91bb5ae-6a22-4328-af2d-8ad1ef2b854a" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests" name="GetNodes_ShouldAcceptQueryParameters" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetNewsFeed_ShouldReturnNewsItems_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="f1200e70-c88e-dbc8-b7b0-014a66ebf8a6">
      <Execution id="2540eb94-266f-4f20-bb4a-d3d71b6701dd" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="GetNewsFeed_ShouldReturnNewsItems_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.GetConcepts_ShouldReturnConcepts_WhenConceptsExist" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="f2016284-bdfc-f7ad-0e9e-b1b0fe7c0d74">
      <Execution id="5be1c193-0cd0-42e0-972b-25a9ec0240c0" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.ConceptModuleApiTests" name="GetConcepts_ShouldReturnConcepts_WhenConceptsExist" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldHandleCallback" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="a5fef099-ba7b-ffee-c1d2-cd74a2ae92e6">
      <Execution id="d2c06929-4855-4db1-b475-bd4e7f1b8b14" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="MockIdentityProvider_ShouldHandleCallback" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributionStats_ShouldReturnStats_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="386a6c80-c37f-2520-1205-e565042cab19">
      <Execution id="39d84de7-6793-4ce4-9b7b-22552fd39c84" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="GetContributionStats_ShouldReturnStats_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ApiEndpointTests.Health_ShouldReturnHealthyStatus" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="2b5053f9-f02a-344a-cea0-eb8a5823c6c3">
      <Execution id="a29bb7f0-8b17-4de8-a925-075e5398927a" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ApiEndpointTests" name="Health_ShouldReturnHealthyStatus" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.Authenticate_ShouldHandleMalformedJson" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="9362de11-64d0-3a11-bfe7-ba203f9734b0">
      <Execution id="92e01a3a-3464-44ab-a36c-5519d1f2307e" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.IdentityModuleApiTests" name="Authenticate_ShouldHandleMalformedJson" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.NodeRegistryTests.InitializeAsync_HydratesNodesFromPersistentStorage" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="0bbc52b8-9211-5e92-e7eb-f98e00a8add3">
      <Execution id="57174d7d-c454-4c1f-b9b7-92efa798bfe1" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.NodeRegistryTests" name="InitializeAsync_HydratesNodesFromPersistentStorage" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.GetIdentityProviders_ShouldIncludeMockProvider" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="4c4f9506-e0d0-a7af-bb2f-e96606d3bbf1">
      <Execution id="93e7cc7d-a258-4417-a768-db61aafcb4e8" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.IdentityModuleApiTests" name="GetIdentityProviders_ShouldIncludeMockProvider" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.NodeRegistryTests.GetNodesByType_ShouldReturnNodesOfSpecificType" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="410a93d4-5a0d-cd14-1966-c13e3bca40a5">
      <Execution id="f2de6e1b-440e-4e59-8302-57e3ccd3deee" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.NodeRegistryTests" name="GetNodesByType_ShouldReturnNodesOfSpecificType" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.HealthTests.HealthCheck_ShouldReturnValidJson" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="bb61d7e3-a613-b2b8-0303-181e7a73d65b">
      <Execution id="65c08d39-f1d5-4502-9199-756f3a81937e" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.HealthTests" name="HealthCheck_ShouldReturnValidJson" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.LLMOrchestratorTests.Constructor_ShouldInitializeCorrectly" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="b16e5439-5de2-497d-5713-ea1d44c4819a">
      <Execution id="cfcba634-eac2-4d2a-ab38-35650731be29" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.LLMOrchestratorTests" name="Constructor_ShouldInitializeCorrectly" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.CoreModuleTests.RegisterApiHandlers_ShouldNotThrow" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="356cc5a1-12a0-34cb-5f3e-4ae7f80efd3b">
      <Execution id="16cdf474-fdc4-4911-a325-48bd5fe963b6" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.CoreModuleTests" name="RegisterApiHandlers_ShouldNotThrow" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnUserEnergy_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="3ffad5fc-3d39-cf1b-b6aa-3a273e7e7f8c">
      <Execution id="cba95566-0af3-47fb-a1c5-253b1ebd056b" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="GetContributorEnergy_ShouldReturnUserEnergy_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.GoogleLogin_ShouldReturnRedirect_WhenProviderAvailable" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="0e83f6d2-f0e7-2e47-ad7b-fd57feab6720">
      <Execution id="c48ef3d1-368b-4a90-af23-964ddc763f35" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.IdentityModuleApiTests" name="GoogleLogin_ShouldReturnRedirect_WhenProviderAvailable" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.UpdateConcept_ShouldReturnSuccess_WhenConceptExists" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="af1e193b-6914-4dd6-b3ed-2ac18e2a1b23">
      <Execution id="a95e4347-4c8e-49b8-b1a1-cd049618f865" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.ConceptModuleApiTests" name="UpdateConcept_ShouldReturnSuccess_WhenConceptExists" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldReturnNotFound_WhenNotImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="65b09466-1f15-9c0c-7042-d7097a301973">
      <Execution id="c140f452-90be-4dcb-b867-75349a69873f" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="GetCollectiveEnergy_ShouldReturnNotFound_WhenNotImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetReadNews_ShouldReturnEmptyResults_WhenNoReadNews" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="ed4eeeaf-65c2-fe54-b0e2-7f711f9498db">
      <Execution id="eb37b74d-b349-437c-8a2b-2088508bc708" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="GetReadNews_ShouldReturnEmptyResults_WhenNoReadNews" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.NodeRegistryTests.TryGet_WithNonExistentId_ShouldReturnFalse" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="cda0a382-6483-cdc5-9e08-2b17d62c9076">
      <Execution id="96d0e6de-3456-4005-b6c6-bfb515059b34" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.NodeRegistryTests" name="TryGet_WithNonExistentId_ShouldReturnFalse" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.GetConcepts_ShouldReturnValidConceptsArray" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="6599a9fd-a45c-3f51-a550-7571741afdc8">
      <Execution id="cebeaf91-4e0c-4554-9c4f-e90c8192f417" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.ConceptModuleApiTests" name="GetConcepts_ShouldReturnValidConceptsArray" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.AIModuleTests.RegisterApiHandlers_ShouldNotThrow" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="f26cae9a-0cfd-3b5a-d1f4-d5ed084eadad">
      <Execution id="2807f7ab-d081-4a8e-870c-872216a19925" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.AIModuleTests" name="RegisterApiHandlers_ShouldNotThrow" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.NodeRegistryTests.TryGet_WithExistingId_ShouldReturnNode" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="a117d892-9fd1-1ad8-8d90-f3c71328203c">
      <Execution id="3db9e9e0-4db6-41b4-b254-38b6e2cf835c" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.NodeRegistryTests" name="TryGet_WithExistingId_ShouldReturnNode" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.SearchNews_ShouldReturnSearchResults_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="c7664158-decd-1ae9-8bcf-1591fb563b34">
      <Execution id="88250343-cb76-4fbc-9b22-29e0d052b972" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="SearchNews_ShouldReturnSearchResults_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.CreateSession_ShouldCreateNewSession" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="81ece0d0-0623-f285-5aef-39638b72d8de">
      <Execution id="6bf75784-1860-4b40-abb8-35c2ddab7333" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="CreateSession_ShouldCreateNewSession" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.NodeRegistryTests.UpsertNode_WithValidNode_ShouldRegisterSuccessfully" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="d0160707-f909-e423-0bd5-ceb0e7a99a9c">
      <Execution id="e1cc66bd-6c17-4c58-b358-5b7c1978229d" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.NodeRegistryTests" name="UpsertNode_WithValidNode_ShouldRegisterSuccessfully" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldCreateContribution_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="58ac984c-ccd6-0f0f-d8b2-fe2845649ddf">
      <Execution id="63ebd2c4-3cf6-4876-9793-23340d6ff322" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="RecordContribution_ShouldCreateContribution_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ComprehensiveEndpointDiscovery.DiscoverAllEndpoints_ShouldFindAvailableEndpoints" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="9a702a54-932a-77ac-8e6e-5b1318f49c63">
      <Execution id="f6c040a0-3fd6-4a79-a3c2-c2e704ab3274" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ComprehensiveEndpointDiscovery" name="DiscoverAllEndpoints_ShouldFindAvailableEndpoints" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.AuthenticateUser_ShouldAuthenticateValidUser" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="3ee13cb4-0958-6775-b9ba-c8af5a50fd57">
      <Execution id="a8c48cf4-0512-4433-86d6-00c112736649" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="AuthenticateUser_ShouldAuthenticateValidUser" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.LLMOrchestratorTests.ExecuteAsync_WithNonExistentTemplate_ShouldReturnError" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="01fada6a-9beb-d06b-6787-0781734f5b1d">
      <Execution id="23bf0d44-dedc-4957-9141-66ff943c2737" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.LLMOrchestratorTests" name="ExecuteAsync_WithNonExistentTemplate_ShouldReturnError" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.HealthTests.HealthCheck_ShouldIncludeSystemMetrics" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="494a6f72-6254-5a6e-4577-c52cd4a0c3cd">
      <Execution id="7ef36c34-6db0-41ae-a9be-690138c063e6" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.HealthTests" name="HealthCheck_ShouldIncludeSystemMetrics" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.AIModuleTests.Version_ShouldReturnCorrectVersion" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="e7b9a5d9-b357-ccab-0080-bfd9de9e4252">
      <Execution id="e4b15fdc-5697-422b-a6f7-d19941d84f55" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.AIModuleTests" name="Version_ShouldReturnCorrectVersion" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ApiIntegrationTests.OAuthProviders_ShouldReturnAvailableProviders" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="080e755c-ee7a-1e14-8f28-e087a10675d0">
      <Execution id="cbb55add-9205-4ab1-9e29-009a12a8baef" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ApiIntegrationTests" name="OAuthProviders_ShouldReturnAvailableProviders" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.SearchNews_ShouldReturnEmptyResults_WhenNoNewsAvailable" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="4e73c103-f467-67e6-7049-e34249ba699f">
      <Execution id="d277a49b-c9c2-4cb2-b370-0032d27809bd" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="SearchNews_ShouldReturnEmptyResults_WhenNoNewsAvailable" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetTrendingTopics_ShouldHandleConcurrentRequests" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="0be5b3d7-ad47-a6e7-2e5c-4e8c709b4254">
      <Execution id="817a88c5-faea-4ab2-8efe-6f7a43607c0e" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="GetTrendingTopics_ShouldHandleConcurrentRequests" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Integration.ApiIntegrationTests.ApiDiscovery_ShouldReturnAvailableEndpoints" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="8fd24cd4-a9c0-0221-2fef-ed0703bf3428">
      <Execution id="7fc1c4c9-4490-45aa-beda-d1067e01e490" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Integration.ApiIntegrationTests" name="ApiDiscovery_ShouldReturnAvailableEndpoints" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldInitiateLogin" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="79341776-28f9-9f5a-685e-8b9cb0ecc3e5">
      <Execution id="feb6456b-1842-4f5b-b70a-4b1000a51295" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="MockIdentityProvider_ShouldInitiateLogin" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetTrendingTopics_ShouldAcceptHoursBackParameter" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="7d68e180-4522-1c63-e2b7-817dd0b2a6e5">
      <Execution id="e77c9aa2-d1c3-495b-ba2f-fcb12d2f5ef1" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="GetTrendingTopics_ShouldAcceptHoursBackParameter" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.IdentityCallback_ShouldHandleMockAuthentication" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="7119bdd5-175e-ef34-2080-2f86d1730b51">
      <Execution id="79b52fbf-8958-4a53-8dc6-2622aa6fe70e" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="IdentityCallback_ShouldHandleMockAuthentication" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldRespondWithinAcceptableTime_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="419a8404-3052-a939-642f-9bc8d54507ed">
      <Execution id="d0545c62-00fb-4877-83b1-92d2fe17f3c3" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="GetCollectiveEnergy_ShouldRespondWithinAcceptableTime_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.Authenticate_ShouldReturnBadRequest_WhenInvalidRequest" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="4f365743-de47-b07f-fd2b-1af885da9411">
      <Execution id="6d109a3f-e1d3-4dab-a3a5-3efc24bc7717" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.IdentityModuleApiTests" name="Authenticate_ShouldReturnBadRequest_WhenInvalidRequest" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ApiIntegrationTests.UserDiscovery_ShouldReturnUsers" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="c4827e09-d08d-46ae-e11d-0d4589191c8f">
      <Execution id="d1b3b8ee-f602-4e78-9d8b-318f16fceaf6" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ApiIntegrationTests" name="UserDiscovery_ShouldReturnUsers" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.NodeRegistryTests.GetEdgesFrom_ShouldReturnEdgesFromSpecificNode" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="a1457caa-f4c9-ba63-922a-5d90fbfc1363">
      <Execution id="ae1569ae-d3bf-40ab-8130-cab8b7eedb58" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.NodeRegistryTests" name="GetEdgesFrom_ShouldReturnEdgesFromSpecificNode" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ApiIntegrationTests.HealthEndpoint_ShouldReturnHealthyStatus" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="3bd72a3e-a2cb-9292-a956-91e21e17c8b0">
      <Execution id="785dceba-abc6-4c04-b4bd-c6bda133f14a" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ApiIntegrationTests" name="HealthEndpoint_ShouldReturnHealthyStatus" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.SimpleIntegrationTests.HealthEndpoint_ShouldReturnHealthyStatus" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="075a023e-ceab-b914-c2b0-73dc9a4930e6">
      <Execution id="3467a00b-a8fa-43a9-8572-d21ed9fb94a4" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.SimpleIntegrationTests" name="HealthEndpoint_ShouldReturnHealthyStatus" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.GetIdentityProviders_ShouldHandleConcurrentRequests" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="2b034947-95be-beab-d32d-a72ae9771ccd">
      <Execution id="af126b42-e4d3-4dab-a126-6ba2663aa2ba" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.IdentityModuleApiTests" name="GetIdentityProviders_ShouldHandleConcurrentRequests" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.GetConcept_ShouldReturnConcept_WhenConceptExists" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="a4d19a43-eee6-b34b-17f0-66d7158f5890">
      <Execution id="5586c98e-65dc-404e-9866-8ecf8af48ca9" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.ConceptModuleApiTests" name="GetConcept_ShouldReturnConcept_WhenConceptExists" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.NodeRegistryTests.UpsertEdge_ShouldRegisterEdgeSuccessfully" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="3869c8f5-7ab2-ef7f-cd2f-16c870de8af9">
      <Execution id="c0fd9a92-96a8-47cf-94f1-91bb800a70d7" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.NodeRegistryTests" name="UpsertEdge_ShouldRegisterEdgeSuccessfully" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.AIModuleTests.Constructor_ShouldInitializeCorrectly" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="904747e7-ff5e-8218-74d7-bb12f2b82a35">
      <Execution id="d766c103-ee8c-47d4-936c-7e7828122f36" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.AIModuleTests" name="Constructor_ShouldInitializeCorrectly" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.MicrosoftLogin_ShouldReturnRedirect_WhenProviderAvailable" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="2fb30a0f-ddea-628a-42a5-2fe6a57a267c">
      <Execution id="7a0dd941-acc5-4c05-bafb-32b6e4b365bd" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.IdentityModuleApiTests" name="MicrosoftLogin_ShouldReturnRedirect_WhenProviderAvailable" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldRespondWithinAcceptableTime_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="14935da5-76f2-bd62-81ac-04e61a088bd0">
      <Execution id="0a1cc3e8-40f1-4ac4-9cab-7dbdb51c5d28" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="GetContributorEnergy_ShouldRespondWithinAcceptableTime_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.NodeRegistryTests.UpsertNode_WithDuplicateId_ShouldOverwrite" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="5f30b836-0b78-553e-28a0-931140309955">
      <Execution id="2fde5f6f-8833-4269-a99f-757926b3a799" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.NodeRegistryTests" name="UpsertNode_WithDuplicateId_ShouldOverwrite" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Integration.ApiIntegrationTests.HealthEndpoint_ShouldReturnHealthyStatus" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="137a3de0-5389-0354-9257-83888fc326aa">
      <Execution id="91bdd7dc-9488-466d-8c34-cc5adb7f1303" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Integration.ApiIntegrationTests" name="HealthEndpoint_ShouldReturnHealthyStatus" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNodes_ShouldHandleInvalidQueryParameters" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="bfb2c8de-1e85-9952-9db6-620f4acf1697">
      <Execution id="3530e997-5a8d-46ef-8904-810a67493e69" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests" name="GetNodes_ShouldHandleInvalidQueryParameters" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNodes_ShouldRespondWithinAcceptableTime" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="4bd130c7-f504-8b12-ce2a-87666fadd50e">
      <Execution id="e0750f4a-4ee3-4835-8ada-a128fd436935" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests" name="GetNodes_ShouldRespondWithinAcceptableTime" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetEdge_ShouldReturnEdge_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="4e538f89-b18c-cf2e-2f16-94dc81d451d9">
      <Execution id="91246df9-99a9-4565-919a-2f062efe209b" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests" name="GetEdge_ShouldReturnEdge_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.PortConfigurationTests.Modules_ShouldBeAvailableOnPort" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="c0bc4442-97e7-adf6-c86b-0290475ca07f">
      <Execution id="d70b1b3b-c1f3-4660-8bf8-3ec90a17eb10" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.PortConfigurationTests" name="Modules_ShouldBeAvailableOnPort" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ApiEndpointTests.Swagger_ShouldReturnDocumentation" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="53137f9b-436e-e65c-fa32-e820c39f3209">
      <Execution id="683b29a6-d2af-44f5-b387-2ee743a96c5b" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ApiEndpointTests" name="Swagger_ShouldReturnDocumentation" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldGetIdentityProviders" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="9674b376-d6ac-4703-6bfc-2eb31e6b6cc1">
      <Execution id="69aeeeb2-b71a-42b4-b26f-da01f8c62ede" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="MockIdentityProvider_ShouldGetIdentityProviders" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetUnreadNews_ShouldReturnEmptyResults_WhenNoUnreadNews" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="1f334c79-0062-1fd4-b393-16846c0c4410">
      <Execution id="cd2b2f4b-efb5-4217-80d0-fa6a6807c995" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="GetUnreadNews_ShouldReturnEmptyResults_WhenNoUnreadNews" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.NodeRegistryTests.AllNodes_ShouldReturnAllRegisteredNodes" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="98c2172e-97df-13d5-a0eb-3bfd4b42a99b">
      <Execution id="2860807d-bb16-4aef-800d-35d0faff896c" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.NodeRegistryTests" name="AllNodes_ShouldReturnAllRegisteredNodes" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.LLMOrchestratorTests.ExecuteAsync_WithException_ShouldReturnError" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="c18159c8-c488-c465-11b5-e4f60944ebea">
      <Execution id="1dc0b5e0-98f7-4232-9110-cc271290d80a" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.LLMOrchestratorTests" name="ExecuteAsync_WithException_ShouldReturnError" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ApiIntegrationTests.GoogleOAuthLogin_ShouldInitiateLoginFlow" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="fb0dc501-3b66-e027-61aa-7077b3c509b2">
      <Execution id="2edfe47a-dddc-4f73-aa72-ddfdc3368145" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ApiIntegrationTests" name="GoogleOAuthLogin_ShouldInitiateLoginFlow" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.CreateUser_ShouldCreateNewUser" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="49aabe26-596c-6a15-06b4-9dadc7c4733a">
      <Execution id="c7d5a7d1-2fda-4192-aa72-5cece35cb18d" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="CreateUser_ShouldCreateNewUser" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ComprehensiveEndpointDiscovery.ModulesEndpoint_ShouldReturnStructuredData" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="d54e53b6-4b26-6bd1-09f9-f73b753baeb3">
      <Execution id="fd4fd2da-d2d4-4216-9b08-85616b9b066e" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ComprehensiveEndpointDiscovery" name="ModulesEndpoint_ShouldReturnStructuredData" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldReturnNotFound_WhenNotImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="4dca77f7-77eb-7507-eede-4a10c4668d61">
      <Execution id="b931f8e9-81c5-44b9-92dc-b44cc8769dc1" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="RecordContribution_ShouldReturnNotFound_WhenNotImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldValidateUser" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="330b9d6c-f08d-3484-f6a0-3b921f0a24a8">
      <Execution id="9bddea4f-ef24-4925-ad1c-38619c45d21c" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="MockIdentityProvider_ShouldValidateUser" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetNewsItem_ShouldReturnNotFound_WhenNewsItemNotFound" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="55db700b-b4b0-5cf1-78a6-21f835d00459">
      <Execution id="7e11242c-2fd6-4eae-9239-fe54057cc331" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="GetNewsItem_ShouldReturnNotFound_WhenNewsItemNotFound" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.AIModuleTests.Register_ShouldRegisterModuleWithRegistry" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="44690745-9c88-3bf3-0c2f-a725a9065892">
      <Execution id="46eba62d-43f4-437f-8094-f8b7c62a3dd0" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.AIModuleTests" name="Register_ShouldRegisterModuleWithRegistry" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetTrendingTopics_ShouldHandleInvalidParameters" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="aceb456b-29fd-0aae-6a6f-60147dd6581b">
      <Execution id="7ea8288a-2040-480b-816b-54669de4efa9" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="GetTrendingTopics_ShouldHandleInvalidParameters" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.AIModuleTests.Name_ShouldReturnCorrectName" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="9f121c41-56cf-362b-92e5-cf6e1918417e">
      <Execution id="5af1b649-29b3-4ae2-bb05-cfb25858db4d" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.AIModuleTests" name="Name_ShouldReturnCorrectName" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.GetIdentityProviders_ShouldRespondWithinAcceptableTime" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="c901140a-8e9f-da3b-f7f8-502ef77600a4">
      <Execution id="ac930315-f061-4f52-b615-bf274cbd9aa7" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.IdentityModuleApiTests" name="GetIdentityProviders_ShouldRespondWithinAcceptableTime" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.Authenticate_ShouldRespondWithinAcceptableTime" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="52464efb-4166-65c1-6219-acc12f2b3ff6">
      <Execution id="89e1e588-b3f5-4962-9c22-e1f1882f358a" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.IdentityModuleApiTests" name="Authenticate_ShouldRespondWithinAcceptableTime" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.LLMOrchestratorTests.ExecuteParallelAsync_WithMultipleOperations_ShouldExecuteAll" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="c353011d-9e94-c67d-e6eb-396de9239c5d">
      <Execution id="03b59251-30a6-4447-bae6-689631386cd6" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.LLMOrchestratorTests" name="ExecuteParallelAsync_WithMultipleOperations_ShouldExecuteAll" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetNodes_ShouldHandleConcurrentRequests" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="154b62c9-dfe1-2527-f8d9-a357f66717ec">
      <Execution id="24bd23ff-e961-40b5-88e4-8bbf3d2d212f" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests" name="GetNodes_ShouldHandleConcurrentRequests" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetTrendingTopics_ShouldReturnTopicsList" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="0f0b59f9-3161-1d3d-fc85-4e0ab616dec1">
      <Execution id="b6b432ba-1708-4fa4-a2f7-4cf25036e6e2" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="GetTrendingTopics_ShouldReturnTopicsList" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldReturnEnergyValue_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="0eb841ee-4360-bfaa-b760-47ef164dac80">
      <Execution id="7f9fdece-621e-4cb5-af9a-7c1664730e51" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="GetCollectiveEnergy_ShouldReturnEnergyValue_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.UpdateConcept_ShouldReturnNotFound_WhenConceptDoesNotExist" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="8825c2ca-e48a-f1b9-4ae4-5d782ac55816">
      <Execution id="e18d3b5d-6781-4c0a-bd77-bc1f9b0b8cfc" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.ConceptModuleApiTests" name="UpdateConcept_ShouldReturnNotFound_WhenConceptDoesNotExist" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ComprehensiveEndpointDiscovery.SwaggerEndpoint_ShouldReturnApiDocumentation" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="d7af24cc-1160-9a7c-4a14-3e64c6768ae5">
      <Execution id="167045bb-81cc-4ed0-8087-5a7e0be85d89" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ComprehensiveEndpointDiscovery" name="SwaggerEndpoint_ShouldReturnApiDocumentation" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetEdges_ShouldReturnEdgesList_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="48f0b978-87f3-597c-b969-584d8c7f342b">
      <Execution id="907c5ed9-7572-4070-930e-cefbea0fdbf7" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests" name="GetEdges_ShouldReturnEdgesList_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributionStats_ShouldReturnNotFound_WhenNotImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="9be0611b-f7d4-ce31-5093-d9477df4e742">
      <Execution id="1ba80c7d-cbd5-40d8-8936-e04eb29971a0" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="GetContributionStats_ShouldReturnNotFound_WhenNotImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ApiIntegrationTests.OAuthValidate_ShouldValidateUser" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="4cdd7a6f-85c0-305c-e9b1-fd8d4db0dee3">
      <Execution id="83d71aa6-f5bf-43f0-a278-bd4feb91258d" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ApiIntegrationTests" name="OAuthValidate_ShouldValidateUser" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldReturnBadRequest_WhenRequestInvalid_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="8aaeb942-4618-a8e4-c6b1-266d34c97e41">
      <Execution id="d2795275-c863-4957-a254-7db5e9695a7c" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="RecordContribution_ShouldReturnBadRequest_WhenRequestInvalid_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.DeleteConcept_ShouldReturnSuccess_WhenConceptExists" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="db697f2e-ce6c-0e67-fba6-9e9dcf38b114">
      <Execution id="a1c286be-275f-4ac2-90c8-b5ba06fc8657" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.ConceptModuleApiTests" name="DeleteConcept_ShouldReturnSuccess_WhenConceptExists" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.CoreModuleTests.Register_ShouldRegisterModuleWithRegistry" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="e816d20a-430f-2d97-9262-77eb57c11839">
      <Execution id="4a002470-2a1b-4c13-aa56-154c37fc9b69" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.CoreModuleTests" name="Register_ShouldRegisterModuleWithRegistry" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldGetUserInfo" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="b66e2aed-6736-e5fb-1259-0a652017312d">
      <Execution id="8ab3633e-1509-407e-ad14-08d110e72166" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="MockIdentityProvider_ShouldGetUserInfo" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.EndSession_ShouldEndExistingSession" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="95bec019-ba93-557e-cc59-ca4522b92c84">
      <Execution id="6d4e781b-9c75-4492-b79f-b93911b6a812" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="EndSession_ShouldEndExistingSession" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Integration.ApiIntegrationTests.ModulesEndpoint_ShouldReturnModuleList" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="0864368a-5d20-d499-562d-dea9741e52aa">
      <Execution id="0b02435a-a3bf-41e0-a0bc-5df364fd4c8d" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Integration.ApiIntegrationTests" name="ModulesEndpoint_ShouldReturnModuleList" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.NodeRegistryTests.Upsert_NodeStateTransitionUpdatesMemoryAndPersistence" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="d42ce1cc-fe07-766d-01d9-4d3235eb06da">
      <Execution id="5e9b58cb-a5aa-426f-8766-8e182d625c1b" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.NodeRegistryTests" name="Upsert_NodeStateTransitionUpdatesMemoryAndPersistence" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.HealthTests.HealthCheck_ShouldReturnHealthyStatus" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="6090d8db-c083-ec38-5d91-cefe25a89520">
      <Execution id="9ec3dc7b-fbd9-4aaa-90c8-cfcb810b67e6" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.HealthTests" name="HealthCheck_ShouldReturnHealthyStatus" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnNotFound_WhenNotImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="e7106da5-58e1-50ce-92f0-4784ebbaed9e">
      <Execution id="b25406fe-055c-43f9-8b3f-9c3dbd4d4a4e" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="GetContributorEnergy_ShouldReturnNotFound_WhenNotImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.GetConcepts_ShouldRespondWithinAcceptableTime" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="b99ace35-33d5-7d18-6ea4-38a87a6c5135">
      <Execution id="e54b1f90-ccc5-4e74-ade0-c92f5ccdf5b8" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.ConceptModuleApiTests" name="GetConcepts_ShouldRespondWithinAcceptableTime" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.SimpleIntegrationTests.SwaggerEndpoint_ShouldBeAccessible" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="7fb892fc-7cfe-4a21-f5bf-3ca5ffe75254">
      <Execution id="752abb76-8363-4aa0-b72f-bf9d403006d2" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.SimpleIntegrationTests" name="SwaggerEndpoint_ShouldBeAccessible" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetUserContributions_ShouldReturnContributionsList_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="36c7d109-6289-1556-5b99-f94c9642b779">
      <Execution id="f6765a5e-84ce-4443-8f59-950f2554df6f" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="GetUserContributions_ShouldReturnContributionsList_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.CreateConcept_ShouldReturnSuccess_WhenValidRequest" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="95697913-300a-0d09-fede-d269c1c9cc5a">
      <Execution id="9b719290-cb36-4b5d-93f5-55f887a9f4cc" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.ConceptModuleApiTests" name="CreateConcept_ShouldReturnSuccess_WhenValidRequest" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.IdentityLogin_ShouldInitiateLoginFlow" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="335af7d3-af17-2a3e-11a6-c40d770283f6">
      <Execution id="e8d1ba50-33f4-4261-be01-cef1b604e643" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="IdentityLogin_ShouldInitiateLoginFlow" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.NodeRegistryTests.EdgeState_ShouldFollowNodePhaseTransitions" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="a1a3cd79-a8ef-2dca-2a37-88922f31b2df">
      <Execution id="0e4d6f94-ffed-4973-bcdd-c44affcc59bf" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.NodeRegistryTests" name="EdgeState_ShouldFollowNodePhaseTransitions" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.GetIdentityProviders_ShouldReturnProvidersList" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="739ddbc9-29fb-28c3-7b57-b5ec668cdd0c">
      <Execution id="2646bf30-2f81-4694-a89c-96c2245091b9" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.IdentityModuleApiTests" name="GetIdentityProviders_ShouldReturnProvidersList" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.GetConcept_ShouldReturnNotFound_WhenConceptDoesNotExist" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="9398df0f-b7e2-21ef-6751-b96144b08a9b">
      <Execution id="9e3258ff-d933-43e5-8770-929918979113" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.ConceptModuleApiTests" name="GetConcept_ShouldReturnNotFound_WhenConceptDoesNotExist" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetNewsFeed_ShouldReturnEmptyResults_WhenNoNewsAvailable" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="632c0374-d9e5-0e22-1403-eb730369295e">
      <Execution id="fa523277-033e-4d31-a34a-9747e448860e" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="GetNewsFeed_ShouldReturnEmptyResults_WhenNoNewsAvailable" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ComprehensiveEndpointDiscovery.HealthEndpoint_ShouldReturnDetailedMetrics" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="ce4786bd-8689-0f1b-0de8-7d35fef968cd">
      <Execution id="4ba180bb-0316-491e-ac1d-fcbf658f2a9f" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ComprehensiveEndpointDiscovery" name="HealthEndpoint_ShouldReturnDetailedMetrics" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.AIModuleTests.Description_ShouldReturnCorrectDescription" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="1f7976e5-938b-de19-e4f9-70a3b56afbf7">
      <Execution id="a22abb1f-696a-40ab-8e29-2444e39b8473" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.AIModuleTests" name="Description_ShouldReturnCorrectDescription" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.Authenticate_ShouldReturnSuccess_WhenValidCredentials" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="1c07a485-c5ef-f8ee-f55f-68f9eb497dae">
      <Execution id="12f40fa7-9fc5-4f53-b723-0d313ec6e008" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.IdentityModuleApiTests" name="Authenticate_ShouldReturnSuccess_WhenValidCredentials" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldGetAllMockUsers" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="3f4da332-2fb9-784e-8300-a3ffc13949c4">
      <Execution id="12c202cf-fdca-49ec-88af-1b07c28a12ef" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="MockIdentityProvider_ShouldGetAllMockUsers" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetTrendingTopics_ShouldRespondWithinAcceptableTime" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="bae85a23-fcdf-5f3d-d506-0fa1d219f067">
      <Execution id="98e0ed69-b643-4571-a185-920c6890ed52" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="GetTrendingTopics_ShouldRespondWithinAcceptableTime" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Core.LLMOrchestratorTests.ExecuteAsync_WithUnavailableService_ShouldReturnFallback" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="c1296972-c12d-1979-50fb-ef6e48530532">
      <Execution id="0c4237c4-1403-4f73-9c77-25c59e770e3f" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Core.LLMOrchestratorTests" name="ExecuteAsync_WithUnavailableService_ShouldReturnFallback" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.MockIdentityProvider_ShouldExchangeCodeForToken" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="4c978083-c229-a01c-6a7c-ef18e5236170">
      <Execution id="8f4e21d4-2911-499c-b601-3cf43d7c8ec4" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="MockIdentityProvider_ShouldExchangeCodeForToken" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnBadRequest_WhenUserIdInvalid_WhenImplemented" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="5fd7373e-836c-fd3b-1266-60a16d14daf5">
      <Execution id="d7fcdbba-7ab4-4765-bff8-68ad32aa1024" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.EnergyModuleApiTests" name="GetContributorEnergy_ShouldReturnBadRequest_WhenUserIdInvalid_WhenImplemented" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.GetUserProfile_ShouldReturnUserProfile" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="19930103-19e2-d6c6-243c-55a9ec794a78">
      <Execution id="705d7319-ba92-4950-b1de-145c88ae3466" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="GetUserProfile_ShouldReturnUserProfile" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.CoreModuleTests.Constructor_ShouldInitializeCorrectly" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="8e2e70aa-52bc-bb4c-eb25-92a87f9a71ab">
      <Execution id="b7f2da22-8e78-43a5-baa8-8f9629c0afe8" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.CoreModuleTests" name="Constructor_ShouldInitializeCorrectly" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ApiEndpointTests.UserEndpoints_ShouldBeAccessible" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="f1e9172e-c439-b721-cfd4-273b562aabf9">
      <Execution id="dd730b67-99c0-4a15-b9a6-45fe11ef0f82" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ApiEndpointTests" name="UserEndpoints_ShouldBeAccessible" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.AIModuleTests.RegisterHttpEndpoints_ShouldNotThrow" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="65b80104-e391-765d-11f2-1a66e8fb8050">
      <Execution id="9132fb45-2c0b-45fa-ba1e-707b31631b34" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.AIModuleTests" name="RegisterHttpEndpoints_ShouldNotThrow" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ApiEndpointTests.Root_ShouldReturnResponse" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="0c97d759-0190-10c2-9a46-6ea0e0639ab1">
      <Execution id="317ba6bc-6028-4664-b2b1-19ec2bccd12d" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ApiEndpointTests" name="Root_ShouldReturnResponse" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.SimpleIntegrationTests.RootEndpoint_ShouldRespond" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="e9843f28-60bb-39a2-a561-28fdfd88f317">
      <Execution id="50675118-ac16-45a1-bc62-5f54fae13ffd" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.SimpleIntegrationTests" name="RootEndpoint_ShouldRespond" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetRelatedNews_ShouldReturnNotFound_WhenNewsItemNotFound" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="0500d70f-e850-de9a-7eba-8164c3b2fd99">
      <Execution id="ac494f43-3695-4c37-a7c4-04ad02c42474" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="GetRelatedNews_ShouldReturnNotFound_WhenNewsItemNotFound" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetTrendingTopics_ShouldAcceptLimitParameter" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="d369dd01-3a76-1028-9769-257b2738d39c">
      <Execution id="dfbc649e-2a97-4df8-af71-61f940526426" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="GetTrendingTopics_ShouldAcceptLimitParameter" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.CoreModuleTests.RegisterHttpEndpoints_ShouldNotThrow" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="65b592a1-b0ad-ad07-be7a-ec8928e7c9ae">
      <Execution id="f40a77cf-cf9a-4841-a4d1-e059829f2c2a" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.CoreModuleTests" name="RegisterHttpEndpoints_ShouldNotThrow" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.IdentityModuleApiTests.Authenticate_ShouldReturnUnauthorized_WhenInvalidCredentials" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="699de456-4b30-e20b-d29b-f9997d34c156">
      <Execution id="9973a9da-058d-4b41-a834-df9de8cd1d9a" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.IdentityModuleApiTests" name="Authenticate_ShouldReturnUnauthorized_WhenInvalidCredentials" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.ConceptModuleApiTests.CreateConceptLegacy_ShouldReturnSuccess_WhenValidRequest" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="9703efcc-6a13-36f7-cf46-5b1fef7db5be">
      <Execution id="e438af9d-9ab4-4f13-a8d4-0dd67dcc1317" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.ConceptModuleApiTests" name="CreateConceptLegacy_ShouldReturnSuccess_WhenValidRequest" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.CoreModuleTests.GetModuleNode_ShouldReturnModuleNode" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="7a9984de-d3ac-18cd-d3c6-06e7c8272524">
      <Execution id="2062356e-0766-44d3-ad40-13303c46675c" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.CoreModuleTests" name="GetModuleNode_ShouldReturnModuleNode" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ApiEndpointTests.Modules_ShouldReturnModuleList" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="079febbc-fefa-997d-a518-2bb9b896a10f">
      <Execution id="7d120f02-c420-4c49-90ad-b4699204c010" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ApiEndpointTests" name="Modules_ShouldReturnModuleList" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Modules.NewsModuleApiTests.MarkNewsAsRead_ShouldReturnSuccess_WhenCalled" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="5c474062-002c-63b6-812f-52223136dd77">
      <Execution id="9a57ddc8-a719-4f19-9998-80b5d1dbd871" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Modules.NewsModuleApiTests" name="MarkNewsAsRead_ShouldReturnSuccess_WhenCalled" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.Integration.ApiIntegrationTests.SwaggerEndpoint_ShouldReturnSwaggerDocumentation" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="441903f8-b742-d387-3227-bca90d5fdf20">
      <Execution id="0859bce5-c0e4-4bd6-98a3-7d3f5f55ccb5" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.Integration.ApiIntegrationTests" name="SwaggerEndpoint_ShouldReturnSwaggerDocumentation" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ApiIntegrationTests.Modules_ShouldBeAvailable" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="5f315f1e-d6f1-03f6-3f34-8b951770fd4b">
      <Execution id="bdda50ab-3e05-45fa-a08e-08ea3cc415eb" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ApiIntegrationTests" name="Modules_ShouldBeAvailable" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.PortConfigurationTests.Swagger_ShouldBeAvailableOnPort" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="4d5b8656-5c24-f46d-b781-bdd5173b1d4a">
      <Execution id="3a9a4126-6257-4849-82ef-ed188bada953" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.PortConfigurationTests" name="Swagger_ShouldBeAvailableOnPort" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.ApiIntegrationTests.Swagger_ShouldBeAvailable" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="6d4dda94-e519-5838-44e2-8dc3d94e25ab">
      <Execution id="1cda3bc2-1b0d-46df-b23d-0b1736068a2f" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.ApiIntegrationTests" name="Swagger_ShouldBeAvailable" />
    </UnitTest>
    <UnitTest name="CodexBootstrap.Tests.IdentityTests.IdentityProviders_ShouldReturnAvailableProviders" storage="/users/ursmuff/source/living-codex-csharp/src/codexbootstrap.tests/bin/release/net6.0/codexbootstrap.tests.dll" id="65339b3c-9de7-638f-f604-692a2aef89ff">
      <Execution id="02559c69-c63b-4055-b426-24e20eff87ed" />
      <TestMethod codeBase="/Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/bin/Release/net6.0/CodexBootstrap.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CodexBootstrap.Tests.IdentityTests" name="IdentityProviders_ShouldReturnAvailableProviders" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="95bec019-ba93-557e-cc59-ca4522b92c84" executionId="6d4e781b-9c75-4492-b79f-b93911b6a812" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e7106da5-58e1-50ce-92f0-4784ebbaed9e" executionId="b25406fe-055c-43f9-8b3f-9c3dbd4d4a4e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="65339b3c-9de7-638f-f604-692a2aef89ff" executionId="02559c69-c63b-4055-b426-24e20eff87ed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="335af7d3-af17-2a3e-11a6-c40d770283f6" executionId="e8d1ba50-33f4-4261-be01-cef1b604e643" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e2097409-445a-3cd5-ae6e-0205fed90d91" executionId="93af7689-eeee-4eed-99da-effc1149c571" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="19930103-19e2-d6c6-243c-55a9ec794a78" executionId="705d7319-ba92-4950-b1de-145c88ae3466" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="699de456-4b30-e20b-d29b-f9997d34c156" executionId="9973a9da-058d-4b41-a834-df9de8cd1d9a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c353011d-9e94-c67d-e6eb-396de9239c5d" executionId="03b59251-30a6-4447-bae6-689631386cd6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="632c0374-d9e5-0e22-1403-eb730369295e" executionId="fa523277-033e-4d31-a34a-9747e448860e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5fd7373e-836c-fd3b-1266-60a16d14daf5" executionId="d7fcdbba-7ab4-4765-bff8-68ad32aa1024" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="19691bde-a850-be64-1937-e776a14dda46" executionId="5e3d6a76-c5c6-46ae-b287-3ca7f6543838" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="55db700b-b4b0-5cf1-78a6-21f835d00459" executionId="7e11242c-2fd6-4eae-9239-fe54057cc331" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1f334c79-0062-1fd4-b393-16846c0c4410" executionId="cd2b2f4b-efb5-4217-80d0-fa6a6807c995" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4cdd7a6f-85c0-305c-e9b1-fd8d4db0dee3" executionId="83d71aa6-f5bf-43f0-a278-bd4feb91258d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c7664158-decd-1ae9-8bcf-1591fb563b34" executionId="88250343-cb76-4fbc-9b22-29e0d052b972" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0be5b3d7-ad47-a6e7-2e5c-4e8c709b4254" executionId="817a88c5-faea-4ab2-8efe-6f7a43607c0e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ed4eeeaf-65c2-fe54-b0e2-7f711f9498db" executionId="eb37b74d-b349-437c-8a2b-2088508bc708" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7873e7fc-d46d-3fb0-064c-39886ac6bd92" executionId="e72cb2c5-424b-4380-892c-1803ff8880b7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="356cc5a1-12a0-34cb-5f3e-4ae7f80efd3b" executionId="16cdf474-fdc4-4911-a325-48bd5fe963b6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ce4786bd-8689-0f1b-0de8-7d35fef968cd" executionId="4ba180bb-0316-491e-ac1d-fcbf658f2a9f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c901140a-8e9f-da3b-f7f8-502ef77600a4" executionId="ac930315-f061-4f52-b615-bf274cbd9aa7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d9ebdab0-e0e1-4dfb-e6ef-0b0976546f6d" executionId="a3f79989-e104-4bc5-9f55-33ae94eb3eb3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a117d892-9fd1-1ad8-8d90-f3c71328203c" executionId="3db9e9e0-4db6-41b4-b254-38b6e2cf835c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8fd24cd4-a9c0-0221-2fef-ed0703bf3428" executionId="7fc1c4c9-4490-45aa-beda-d1067e01e490" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9f121c41-56cf-362b-92e5-cf6e1918417e" executionId="5af1b649-29b3-4ae2-bb05-cfb25858db4d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="14935da5-76f2-bd62-81ac-04e61a088bd0" executionId="0a1cc3e8-40f1-4ac4-9cab-7dbdb51c5d28" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="af1e193b-6914-4dd6-b3ed-2ac18e2a1b23" executionId="a95e4347-4c8e-49b8-b1a1-cd049618f865" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c4827e09-d08d-46ae-e11d-0d4589191c8f" executionId="d1b3b8ee-f602-4e78-9d8b-318f16fceaf6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4c4f9506-e0d0-a7af-bb2f-e96606d3bbf1" executionId="93e7cc7d-a258-4417-a768-db61aafcb4e8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2fb30a0f-ddea-628a-42a5-2fe6a57a267c" executionId="7a0dd941-acc5-4c05-bafb-32b6e4b365bd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d97a6a51-1d28-ab30-5e6f-d68d2a74dcbf" executionId="a01e9e3b-5ade-42c5-94da-2c8682f15224" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f1200e70-c88e-dbc8-b7b0-014a66ebf8a6" executionId="2540eb94-266f-4f20-bb4a-d3d71b6701dd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7d68e180-4522-1c63-e2b7-817dd0b2a6e5" executionId="e77c9aa2-d1c3-495b-ba2f-fcb12d2f5ef1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8aaeb942-4618-a8e4-c6b1-266d34c97e41" executionId="d2795275-c863-4957-a254-7db5e9695a7c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="79341776-28f9-9f5a-685e-8b9cb0ecc3e5" executionId="feb6456b-1842-4f5b-b70a-4b1000a51295" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d0cd9f70-6dc1-3c7d-5cf8-851aa39eea33" executionId="fb7d4483-2515-4dd5-a63d-715259d6b4b9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d7af24cc-1160-9a7c-4a14-3e64c6768ae5" executionId="167045bb-81cc-4ed0-8087-5a7e0be85d89" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4c978083-c229-a01c-6a7c-ef18e5236170" executionId="8f4e21d4-2911-499c-b601-3cf43d7c8ec4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="410a93d4-5a0d-cd14-1966-c13e3bca40a5" executionId="f2de6e1b-440e-4e59-8302-57e3ccd3deee" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0500d70f-e850-de9a-7eba-8164c3b2fd99" executionId="ac494f43-3695-4c37-a7c4-04ad02c42474" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bfb2c8de-1e85-9952-9db6-620f4acf1697" executionId="3530e997-5a8d-46ef-8904-810a67493e69" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9674b376-d6ac-4703-6bfc-2eb31e6b6cc1" executionId="69aeeeb2-b71a-42b4-b26f-da01f8c62ede" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cf881c4c-31da-3c3d-e657-0f7a60496f37" executionId="ff8204e4-e7b7-4759-b155-8e99294b06b6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3869c8f5-7ab2-ef7f-cd2f-16c870de8af9" executionId="c0fd9a92-96a8-47cf-94f1-91bb800a70d7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0864368a-5d20-d499-562d-dea9741e52aa" executionId="0b02435a-a3bf-41e0-a0bc-5df364fd4c8d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2b034947-95be-beab-d32d-a72ae9771ccd" executionId="af126b42-e4d3-4dab-a126-6ba2663aa2ba" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c18159c8-c488-c465-11b5-e4f60944ebea" executionId="1dc0b5e0-98f7-4232-9110-cc271290d80a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="419a8404-3052-a939-642f-9bc8d54507ed" executionId="d0545c62-00fb-4877-83b1-92d2fe17f3c3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f3484da0-8315-cdca-e737-98c55468fb4e" executionId="ac02222d-0c6f-41f3-a9d8-9f2989b1209d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c0bc4442-97e7-adf6-c86b-0290475ca07f" executionId="d70b1b3b-c1f3-4660-8bf8-3ec90a17eb10" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4e538f89-b18c-cf2e-2f16-94dc81d451d9" executionId="91246df9-99a9-4565-919a-2f062efe209b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b3191fce-24b5-6614-db34-5b0f72b496c2" executionId="37fc9177-9a12-480b-b8b1-fbf383fedd3e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fc7bce22-4aa8-7f2e-5825-9a1561671044" executionId="51cdef10-f1c3-4256-96df-1d2690772a5a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f1e9172e-c439-b721-cfd4-273b562aabf9" executionId="dd730b67-99c0-4a15-b9a6-45fe11ef0f82" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3bd72a3e-a2cb-9292-a956-91e21e17c8b0" executionId="785dceba-abc6-4c04-b4bd-c6bda133f14a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9a702a54-932a-77ac-8e6e-5b1318f49c63" executionId="f6c040a0-3fd6-4a79-a3c2-c2e704ab3274" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d369dd01-3a76-1028-9769-257b2738d39c" executionId="dfbc649e-2a97-4df8-af71-61f940526426" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="441903f8-b742-d387-3227-bca90d5fdf20" executionId="0859bce5-c0e4-4bd6-98a3-7d3f5f55ccb5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e9843f28-60bb-39a2-a561-28fdfd88f317" executionId="50675118-ac16-45a1-bc62-5f54fae13ffd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aceb456b-29fd-0aae-6a6f-60147dd6581b" executionId="7ea8288a-2040-480b-816b-54669de4efa9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a4d19a43-eee6-b34b-17f0-66d7158f5890" executionId="5586c98e-65dc-404e-9866-8ecf8af48ca9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="db697f2e-ce6c-0e67-fba6-9e9dcf38b114" executionId="a1c286be-275f-4ac2-90c8-b5ba06fc8657" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="49aabe26-596c-6a15-06b4-9dadc7c4733a" executionId="c7d5a7d1-2fda-4192-aa72-5cece35cb18d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6090d8db-c083-ec38-5d91-cefe25a89520" executionId="9ec3dc7b-fbd9-4aaa-90c8-cfcb810b67e6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7a9984de-d3ac-18cd-d3c6-06e7c8272524" executionId="2062356e-0766-44d3-ad40-13303c46675c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f2016284-bdfc-f7ad-0e9e-b1b0fe7c0d74" executionId="5be1c193-0cd0-42e0-972b-25a9ec0240c0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8825c2ca-e48a-f1b9-4ae4-5d782ac55816" executionId="e18d3b5d-6781-4c0a-bd77-bc1f9b0b8cfc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0eb841ee-4360-bfaa-b760-47ef164dac80" executionId="7f9fdece-621e-4cb5-af9a-7c1664730e51" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a5fef099-ba7b-ffee-c1d2-cd74a2ae92e6" executionId="d2c06929-4855-4db1-b475-bd4e7f1b8b14" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4e73c103-f467-67e6-7049-e34249ba699f" executionId="d277a49b-c9c2-4cb2-b370-0032d27809bd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0822fda8-1ecb-9b4b-b537-c5def62bdea6" executionId="1c818ecc-bc5a-475f-bd2e-839a93f1cfb3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cda0a382-6483-cdc5-9e08-2b17d62c9076" executionId="96d0e6de-3456-4005-b6c6-bfb515059b34" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="137a3de0-5389-0354-9257-83888fc326aa" executionId="91bdd7dc-9488-466d-8c34-cc5adb7f1303" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="81ece0d0-0623-f285-5aef-39638b72d8de" executionId="6bf75784-1860-4b40-abb8-35c2ddab7333" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="95697913-300a-0d09-fede-d269c1c9cc5a" executionId="9b719290-cb36-4b5d-93f5-55f887a9f4cc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f26cae9a-0cfd-3b5a-d1f4-d5ed084eadad" executionId="2807f7ab-d081-4a8e-870c-872216a19925" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="330b9d6c-f08d-3484-f6a0-3b921f0a24a8" executionId="9bddea4f-ef24-4925-ad1c-38619c45d21c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fb0dc501-3b66-e027-61aa-7077b3c509b2" executionId="2edfe47a-dddc-4f73-aa72-ddfdc3368145" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9398df0f-b7e2-21ef-6751-b96144b08a9b" executionId="9e3258ff-d933-43e5-8770-929918979113" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5c474062-002c-63b6-812f-52223136dd77" executionId="9a57ddc8-a719-4f19-9998-80b5d1dbd871" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c1296972-c12d-1979-50fb-ef6e48530532" executionId="0c4237c4-1403-4f73-9c77-25c59e770e3f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="386a6c80-c37f-2520-1205-e565042cab19" executionId="39d84de7-6793-4ce4-9b7b-22552fd39c84" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1c07a485-c5ef-f8ee-f55f-68f9eb497dae" executionId="12f40fa7-9fc5-4f53-b723-0d313ec6e008" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d54e53b6-4b26-6bd1-09f9-f73b753baeb3" executionId="fd4fd2da-d2d4-4216-9b08-85616b9b066e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4bd130c7-f504-8b12-ce2a-87666fadd50e" executionId="e0750f4a-4ee3-4835-8ada-a128fd436935" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5f30b836-0b78-553e-28a0-931140309955" executionId="2fde5f6f-8833-4269-a99f-757926b3a799" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3ee13cb4-0958-6775-b9ba-c8af5a50fd57" executionId="a8c48cf4-0512-4433-86d6-00c112736649" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="58ac984c-ccd6-0f0f-d8b2-fe2845649ddf" executionId="63ebd2c4-3cf6-4876-9793-23340d6ff322" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0c97d759-0190-10c2-9a46-6ea0e0639ab1" executionId="317ba6bc-6028-4664-b2b1-19ec2bccd12d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9be0611b-f7d4-ce31-5093-d9477df4e742" executionId="1ba80c7d-cbd5-40d8-8936-e04eb29971a0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8e2e70aa-52bc-bb4c-eb25-92a87f9a71ab" executionId="b7f2da22-8e78-43a5-baa8-8f9629c0afe8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bae85a23-fcdf-5f3d-d506-0fa1d219f067" executionId="98e0ed69-b643-4571-a185-920c6890ed52" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b99ace35-33d5-7d18-6ea4-38a87a6c5135" executionId="e54b1f90-ccc5-4e74-ade0-c92f5ccdf5b8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="65b80104-e391-765d-11f2-1a66e8fb8050" executionId="9132fb45-2c0b-45fa-ba1e-707b31631b34" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="36c7d109-6289-1556-5b99-f94c9642b779" executionId="f6765a5e-84ce-4443-8f59-950f2554df6f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7fb892fc-7cfe-4a21-f5bf-3ca5ffe75254" executionId="752abb76-8363-4aa0-b72f-bf9d403006d2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="494a6f72-6254-5a6e-4577-c52cd4a0c3cd" executionId="7ef36c34-6db0-41ae-a9be-690138c063e6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="52464efb-4166-65c1-6219-acc12f2b3ff6" executionId="89e1e588-b3f5-4962-9c22-e1f1882f358a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2fb70c5e-3630-184f-467a-2c4ada567323" executionId="993db5ec-cf61-40ff-b04c-6aa96acfcda3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="075a023e-ceab-b914-c2b0-73dc9a4930e6" executionId="3467a00b-a8fa-43a9-8572-d21ed9fb94a4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="080e755c-ee7a-1e14-8f28-e087a10675d0" executionId="cbb55add-9205-4ab1-9e29-009a12a8baef" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9703efcc-6a13-36f7-cf46-5b1fef7db5be" executionId="e438af9d-9ab4-4f13-a8d4-0dd67dcc1317" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3ffad5fc-3d39-cf1b-b6aa-3a273e7e7f8c" executionId="cba95566-0af3-47fb-a1c5-253b1ebd056b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="44690745-9c88-3bf3-0c2f-a725a9065892" executionId="46eba62d-43f4-437f-8094-f8b7c62a3dd0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="48f0b978-87f3-597c-b969-584d8c7f342b" executionId="907c5ed9-7572-4070-930e-cefbea0fdbf7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="079febbc-fefa-997d-a518-2bb9b896a10f" executionId="7d120f02-c420-4c49-90ad-b4699204c010" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6d4dda94-e519-5838-44e2-8dc3d94e25ab" executionId="1cda3bc2-1b0d-46df-b23d-0b1736068a2f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1f7976e5-938b-de19-e4f9-70a3b56afbf7" executionId="a22abb1f-696a-40ab-8e29-2444e39b8473" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6e5a8b91-6a75-56d3-b317-a9ac48ab0672" executionId="e91bb5ae-6a22-4328-af2d-8ad1ef2b854a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4f365743-de47-b07f-fd2b-1af885da9411" executionId="6d109a3f-e1d3-4dab-a3a5-3efc24bc7717" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0f0b59f9-3161-1d3d-fc85-4e0ab616dec1" executionId="b6b432ba-1708-4fa4-a2f7-4cf25036e6e2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="904747e7-ff5e-8218-74d7-bb12f2b82a35" executionId="d766c103-ee8c-47d4-936c-7e7828122f36" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6599a9fd-a45c-3f51-a550-7571741afdc8" executionId="cebeaf91-4e0c-4554-9c4f-e90c8192f417" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9362de11-64d0-3a11-bfe7-ba203f9734b0" executionId="92e01a3a-3464-44ab-a36c-5519d1f2307e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d0160707-f909-e423-0bd5-ceb0e7a99a9c" executionId="e1cc66bd-6c17-4c58-b358-5b7c1978229d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4d5b8656-5c24-f46d-b781-bdd5173b1d4a" executionId="3a9a4126-6257-4849-82ef-ed188bada953" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d42ce1cc-fe07-766d-01d9-4d3235eb06da" executionId="5e9b58cb-a5aa-426f-8766-8e182d625c1b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b16e5439-5de2-497d-5713-ea1d44c4819a" executionId="cfcba634-eac2-4d2a-ab38-35650731be29" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a1457caa-f4c9-ba63-922a-5d90fbfc1363" executionId="ae1569ae-d3bf-40ab-8130-cab8b7eedb58" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="53137f9b-436e-e65c-fa32-e820c39f3209" executionId="683b29a6-d2af-44f5-b387-2ee743a96c5b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7119bdd5-175e-ef34-2080-2f86d1730b51" executionId="79b52fbf-8958-4a53-8dc6-2622aa6fe70e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3f4da332-2fb9-784e-8300-a3ffc13949c4" executionId="12c202cf-fdca-49ec-88af-1b07c28a12ef" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="98c2172e-97df-13d5-a0eb-3bfd4b42a99b" executionId="2860807d-bb16-4aef-800d-35d0faff896c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4dca77f7-77eb-7507-eede-4a10c4668d61" executionId="b931f8e9-81c5-44b9-92dc-b44cc8769dc1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bb61d7e3-a613-b2b8-0303-181e7a73d65b" executionId="65c08d39-f1d5-4502-9199-756f3a81937e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2b00ad46-f32b-446f-acdc-2eea35c5f140" executionId="ac4b1b45-16d3-43be-b6a9-b922da2fbef9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e816d20a-430f-2d97-9262-77eb57c11839" executionId="4a002470-2a1b-4c13-aa56-154c37fc9b69" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0e83f6d2-f0e7-2e47-ad7b-fd57feab6720" executionId="c48ef3d1-368b-4a90-af23-964ddc763f35" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="154b62c9-dfe1-2527-f8d9-a357f66717ec" executionId="24bd23ff-e961-40b5-88e4-8bbf3d2d212f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5f315f1e-d6f1-03f6-3f34-8b951770fd4b" executionId="bdda50ab-3e05-45fa-a08e-08ea3cc415eb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2b5053f9-f02a-344a-cea0-eb8a5823c6c3" executionId="a29bb7f0-8b17-4de8-a925-075e5398927a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="65b09466-1f15-9c0c-7042-d7097a301973" executionId="c140f452-90be-4dcb-b867-75349a69873f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0bbc52b8-9211-5e92-e7eb-f98e00a8add3" executionId="57174d7d-c454-4c1f-b9b7-92efa798bfe1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a1a3cd79-a8ef-2dca-2a37-88922f31b2df" executionId="0e4d6f94-ffed-4973-bcdd-c44affcc59bf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="65b592a1-b0ad-ad07-be7a-ec8928e7c9ae" executionId="f40a77cf-cf9a-4841-a4d1-e059829f2c2a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="739ddbc9-29fb-28c3-7b57-b5ec668cdd0c" executionId="2646bf30-2f81-4694-a89c-96c2245091b9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="01fada6a-9beb-d06b-6787-0781734f5b1d" executionId="23bf0d44-dedc-4957-9141-66ff943c2737" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e7b9a5d9-b357-ccab-0080-bfd9de9e4252" executionId="e4b15fdc-5697-422b-a6f7-d19941d84f55" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b66e2aed-6736-e5fb-1259-0a652017312d" executionId="8ab3633e-1509-407e-ad14-08d110e72166" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="139" executed="127" passed="121" failed="6" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.3+1b45f5407b (64-bit .NET 6.0.6)
[xUnit.net 00:00:00.69]   Discovering: CodexBootstrap.Tests
[xUnit.net 00:00:00.72]   Discovered:  CodexBootstrap.Tests
[xUnit.net 00:00:00.72]   Starting:    CodexBootstrap.Tests
[xUnit.net 00:00:00.94]       Endpoint not yet implemented
[xUnit.net 00:00:01.01]       Expected response.StatusCode to be HttpStatusCode.NotFound {value: 404}, but found HttpStatusCode.MethodNotAllowed {value: 405}.
[xUnit.net 00:00:01.01]       Stack Trace:
[xUnit.net 00:00:01.01]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
[xUnit.net 00:00:01.01]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
[xUnit.net 00:00:01.01]            at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
[xUnit.net 00:00:01.01]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:01.01]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:01.01]            at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
[xUnit.net 00:00:01.01]            at FluentAssertions.Primitives.EnumAssertions`2.Be(TEnum expected, String because, Object[] becauseArgs)
[xUnit.net 00:00:01.01]         /Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/Modules/EnergyModuleApiTests.cs(38,0): at CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldReturnNotFound_WhenNotImplemented()
[xUnit.net 00:00:01.01]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.05]       Endpoint not yet implemented
[xUnit.net 00:00:01.05]       Expected response.StatusCode to be HttpStatusCode.NotFound {value: 404}, but found HttpStatusCode.MethodNotAllowed {value: 405}.
[xUnit.net 00:00:01.05]       Stack Trace:
[xUnit.net 00:00:01.05]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
[xUnit.net 00:00:01.05]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
[xUnit.net 00:00:01.05]            at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
[xUnit.net 00:00:01.05]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:01.05]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:01.05]            at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
[xUnit.net 00:00:01.05]            at FluentAssertions.Primitives.EnumAssertions`2.Be(TEnum expected, String because, Object[] becauseArgs)
[xUnit.net 00:00:01.05]         /Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/Modules/EnergyModuleApiTests.cs(48,0): at CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnNotFound_WhenNotImplemented()
[xUnit.net 00:00:01.05]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.05]       Endpoint not yet implemented
[xUnit.net 00:00:01.05]       Endpoint not yet implemented
Test 'CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetUserContributions_ShouldReturnContributionsList_WhenImplemented' was skipped in the test run.
Test 'CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldRespondWithinAcceptableTime_WhenImplemented' was skipped in the test run.
Test 'CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldReturnEnergyValue_WhenImplemented' was skipped in the test run.
Test 'CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldRespondWithinAcceptableTime_WhenImplemented' was skipped in the test run.
[xUnit.net 00:00:01.06]       Endpoint not yet implemented
[xUnit.net 00:00:01.06]       Endpoint not yet implemented
[xUnit.net 00:00:01.06]       Expected response.StatusCode to be HttpStatusCode.NotFound {value: 404}, but found HttpStatusCode.MethodNotAllowed {value: 405}.
[xUnit.net 00:00:01.06]       Stack Trace:
[xUnit.net 00:00:01.06]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
[xUnit.net 00:00:01.06]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
[xUnit.net 00:00:01.06]            at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
[xUnit.net 00:00:01.06]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:01.06]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:01.06]            at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
[xUnit.net 00:00:01.06]            at FluentAssertions.Primitives.EnumAssertions`2.Be(TEnum expected, String because, Object[] becauseArgs)
[xUnit.net 00:00:01.06]         /Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/Modules/EnergyModuleApiTests.cs(74,0): at CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributionStats_ShouldReturnNotFound_WhenNotImplemented()
[xUnit.net 00:00:01.06]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.06]       Endpoint not yet implemented
[xUnit.net 00:00:01.08]       Expected response.StatusCode to be HttpStatusCode.NotFound {value: 404}, but found HttpStatusCode.MethodNotAllowed {value: 405}.
[xUnit.net 00:00:01.08]       Stack Trace:
[xUnit.net 00:00:01.08]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
[xUnit.net 00:00:01.08]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
[xUnit.net 00:00:01.08]            at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
[xUnit.net 00:00:01.08]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:01.08]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:01.08]            at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
[xUnit.net 00:00:01.08]            at FluentAssertions.Primitives.EnumAssertions`2.Be(TEnum expected, String because, Object[] becauseArgs)
[xUnit.net 00:00:01.08]         /Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/Modules/EnergyModuleApiTests.cs(99,0): at CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldReturnNotFound_WhenNotImplemented()
[xUnit.net 00:00:01.08]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.08]       Endpoint not yet implemented
[xUnit.net 00:00:01.08]       Endpoint not yet implemented
Test 'CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnUserEnergy_WhenImplemented' was skipped in the test run.
Test 'CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnBadRequest_WhenUserIdInvalid_WhenImplemented' was skipped in the test run.
Test 'CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributionStats_ShouldReturnStats_WhenImplemented' was skipped in the test run.
Test 'CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldReturnBadRequest_WhenRequestInvalid_WhenImplemented' was skipped in the test run.
Test 'CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldCreateContribution_WhenImplemented' was skipped in the test run.
[xUnit.net 00:00:01.21]       Moq.MockException : 
[xUnit.net 00:00:01.21]       Expected invocation on the mock exactly 5 times, but was 9 times: x =&gt; x.Upsert(It.IsAny&lt;Node&gt;())
[xUnit.net 00:00:01.21]       
[xUnit.net 00:00:01.21]       Performed invocations:
[xUnit.net 00:00:01.21]       
[xUnit.net 00:00:01.21]          Mock&lt;INodeRegistry:7&gt; (x):
[xUnit.net 00:00:01.21]       
[xUnit.net 00:00:01.21]             INodeRegistry.Upsert(Node { Id = prompt.concept-extraction, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = Concept Extraction, Description = Prompt template for analysis, Content = ContentRef { MediaType = application/json, InlineJson = {
[xUnit.net 00:00:01.21]         "template": "Analyze the following text for consciousness-related concepts.\n\nText: \u0022{content}\u0022\n\nFocus on: consciousness, transformation, unity, love, wisdom, energy, healing, abundance, sacred patterns.\n\nIMPORTANT: Return ONLY a valid JSON array, no markdown, no explanations, no additional text. Start with [ and end with ].\n\n[\n  {{\n    \u0022concept\u0022: \u0022concept_name\u0022,\n    \u0022score\u0022: 0.0-1.0,\n    \u0022description\u0022: \u0022brief description\u0022,\n    \u0022category\u0022: \u0022consciousness|transformation|unity|love|wisdom|energy|healing|abundance|sacred|fractal\u0022,\n    \u0022confidence\u0022: 0.0-1.0\n  }}\n]",
[xUnit.net 00:00:01.21]         "defaultParameters": {
[xUnit.net 00:00:01.21]           "content": ""
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "defaultLLMConfig": {
[xUnit.net 00:00:01.21]           "id": "default-ai",
[xUnit.net 00:00:01.21]           "name": "Default AI Config",
[xUnit.net 00:00:01.21]           "provider": "ollama",
[xUnit.net 00:00:01.21]           "model": "llama2",
[xUnit.net 00:00:01.21]           "apiKey": "",
[xUnit.net 00:00:01.21]           "baseUrl": "http://localhost:11434",
[xUnit.net 00:00:01.21]           "maxTokens": 1000,
[xUnit.net 00:00:01.21]           "temperature": 0.3,
[xUnit.net 00:00:01.21]           "topP": 0.9,
[xUnit.net 00:00:01.21]           "parameters": {
[xUnit.net 00:00:01.21]             "stop": [
[xUnit.net 00:00:01.21]               "---",
[xUnit.net 00:00:01.21]               "###"
[xUnit.net 00:00:01.21]             ]
[xUnit.net 00:00:01.21]           }
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "category": "analysis"
[xUnit.net 00:00:01.21]       }, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
[xUnit.net 00:00:01.21]             INodeRegistry.Upsert(Node { Id = prompt.fractal-transformation, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = Fractal Transformation, Description = Prompt template for transformation, Content = ContentRef { MediaType = application/json, InlineJson = {
[xUnit.net 00:00:01.21]         "template": "You are a JSON API. You must respond with ONLY valid JSON. No markdown, no explanations, no other text.\n\nTransform this content: \u0022{content}\u0022\n\nReturn this exact JSON structure:\n{\n  \u0022headline\u0022: \u0022transformed headline\u0022,\n  \u0022beliefTranslation\u0022: \u0022how this translates to belief systems\u0022,\n  \u0022summary\u0022: \u0022transformed summary\u0022,\n  \u0022impactAreas\u0022: [\u0022area1\u0022, \u0022area2\u0022],\n  \u0022consciousnessLevel\u0022: \u0022L3\u0022,\n  \u0022resonanceFrequency\u0022: 0.8,\n  \u0022unityScore\u0022: 0.7\n}\n\nRESPOND WITH ONLY THE JSON OBJECT. NO OTHER TEXT.",
[xUnit.net 00:00:01.21]         "defaultParameters": {
[xUnit.net 00:00:01.21]           "content": "",
[xUnit.net 00:00:01.21]           "consciousnessLevel": "L3"
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "defaultLLMConfig": {
[xUnit.net 00:00:01.21]           "id": "default-ai",
[xUnit.net 00:00:01.21]           "name": "Default AI Config",
[xUnit.net 00:00:01.21]           "provider": "ollama",
[xUnit.net 00:00:01.21]           "model": "llama2",
[xUnit.net 00:00:01.21]           "apiKey": "",
[xUnit.net 00:00:01.21]           "baseUrl": "http://localhost:11434",
[xUnit.net 00:00:01.21]           "maxTokens": 1000,
[xUnit.net 00:00:01.21]           "temperature": 0.3,
[xUnit.net 00:00:01.21]           "topP": 0.9,
[xUnit.net 00:00:01.21]           "parameters": {
[xUnit.net 00:00:01.21]             "stop": [
[xUnit.net 00:00:01.21]               "---",
[xUnit.net 00:00:01.21]               "###"
[xUnit.net 00:00:01.21]             ]
[xUnit.net 00:00:01.21]           }
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "category": "transformation"
[xUnit.net 00:00:01.21]       }, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
[xUnit.net 00:00:01.21]             INodeRegistry.Upsert(Node { Id = prompt.scoring-analysis, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = Scoring Analysis, Description = Prompt template for analysis, Content = ContentRef { MediaType = application/json, InlineJson = {
[xUnit.net 00:00:01.21]         "template": "Analyze and score the following content based on the specified criteria.\n\nContent: \u0022{content}\u0022\nAnalysis Type: {analysisType}\nCriteria: {criteria}\n\nScore each criterion from 0.0 to 1.0:\n- Abundance: Growth, prosperity, opportunity, collective benefit\n- Consciousness: Awareness, mindfulness, wisdom, spiritual insight\n- Unity: Connection, collaboration, harmony, global perspective\n\nIMPORTANT: Return ONLY a valid JSON object, no markdown, no explanations, no additional text. Start with {{ and end with }}.\n\n{{\n  \u0022abundanceScore\u0022: 0.0-1.0,\n  \u0022consciousnessScore\u0022: 0.0-1.0,\n  \u0022unityScore\u0022: 0.0-1.0,\n  \u0022overallScore\u0022: 0.0-1.0,\n  \u0022reasoning\u0022: \u0022brief explanation of scores\u0022\n}}",
[xUnit.net 00:00:01.21]         "defaultParameters": {
[xUnit.net 00:00:01.21]           "content": "",
[xUnit.net 00:00:01.21]           "analysisType": "general",
[xUnit.net 00:00:01.21]           "criteria": [
[xUnit.net 00:00:01.21]             "relevance",
[xUnit.net 00:00:01.21]             "quality",
[xUnit.net 00:00:01.21]             "impact"
[xUnit.net 00:00:01.21]           ]
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "defaultLLMConfig": {
[xUnit.net 00:00:01.21]           "id": "default-ai",
[xUnit.net 00:00:01.21]           "name": "Default AI Config",
[xUnit.net 00:00:01.21]           "provider": "ollama",
[xUnit.net 00:00:01.21]           "model": "llama2",
[xUnit.net 00:00:01.21]           "apiKey": "",
[xUnit.net 00:00:01.21]           "baseUrl": "http://localhost:11434",
[xUnit.net 00:00:01.21]           "maxTokens": 1000,
[xUnit.net 00:00:01.21]           "temperature": 0.3,
[xUnit.net 00:00:01.21]           "topP": 0.9,
[xUnit.net 00:00:01.21]           "parameters": {
[xUnit.net 00:00:01.21]             "stop": [
[xUnit.net 00:00:01.21]               "---",
[xUnit.net 00:00:01.21]               "###"
[xUnit.net 00:00:01.21]             ]
[xUnit.net 00:00:01.21]           }
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "category": "analysis"
[xUnit.net 00:00:01.21]       }, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
[xUnit.net 00:00:01.21]             INodeRegistry.Upsert(Node { Id = prompt.future-query, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = Future Knowledge Query, Description = Prompt template for future, Content = ContentRef { MediaType = application/json, InlineJson = {
[xUnit.net 00:00:01.21]         "template": "You are an advanced AI specializing in future knowledge and consciousness expansion.\n\nContext: {context}\nTime Horizon: {timeHorizon}\nPerspective: {perspective}\n\nQuery: {query}\n\nProvide insights focusing on:\n1. Future scenarios and trends\n2. Consciousness implications\n3. Practical applications\n4. Spiritual insights\n\nResponse:",
[xUnit.net 00:00:01.21]         "defaultParameters": {
[xUnit.net 00:00:01.21]           "context": "",
[xUnit.net 00:00:01.21]           "timeHorizon": "5 years",
[xUnit.net 00:00:01.21]           "perspective": "consciousness-expanding",
[xUnit.net 00:00:01.21]           "query": ""
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "defaultLLMConfig": {
[xUnit.net 00:00:01.21]           "id": "default-ai",
[xUnit.net 00:00:01.21]           "name": "Default AI Config",
[xUnit.net 00:00:01.21]           "provider": "ollama",
[xUnit.net 00:00:01.21]           "model": "llama2",
[xUnit.net 00:00:01.21]           "apiKey": "",
[xUnit.net 00:00:01.21]           "baseUrl": "http://localhost:11434",
[xUnit.net 00:00:01.21]           "maxTokens": 1000,
[xUnit.net 00:00:01.21]           "temperature": 0.3,
[xUnit.net 00:00:01.21]           "topP": 0.9,
[xUnit.net 00:00:01.21]           "parameters": {
[xUnit.net 00:00:01.21]             "stop": [
[xUnit.net 00:00:01.21]               "---",
[xUnit.net 00:00:01.21]               "###"
[xUnit.net 00:00:01.21]             ]
[xUnit.net 00:00:01.21]           }
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "category": "future"
[xUnit.net 00:00:01.21]       }, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
[xUnit.net 00:00:01.21]             INodeRegistry.Upsert(Node { Id = prompt.ui-page-generation, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = UI Page Generation, Description = Prompt template for ui-generation, Content = ContentRef { MediaType = application/json, InlineJson = {
[xUnit.net 00:00:01.21]         "template": "Generate a Next.js page component from this UI atom specification.\n\nUI Atom: {uiAtom}\n\nRequirements:\n- Use TypeScript and Tailwind CSS\n- Implement the specified lenses and controls\n- Connect to the declared API endpoints\n- Follow the Living Codex design principles (resonance, joy, unity)\n- Use React Query for data fetching\n- Include proper error handling and loading states\n\nIMPORTANT: Return ONLY valid TypeScript code, no markdown, no explanations, no additional text.\n\n\u0060\u0060\u0060typescript\n{generatedCode}\n\u0060\u0060\u0060",
[xUnit.net 00:00:01.21]         "defaultParameters": {
[xUnit.net 00:00:01.21]           "uiAtom": "",
[xUnit.net 00:00:01.21]           "generatedCode": ""
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "defaultLLMConfig": {
[xUnit.net 00:00:01.21]           "id": "default-ai",
[xUnit.net 00:00:01.21]           "name": "Default AI Config",
[xUnit.net 00:00:01.21]           "provider": "ollama",
[xUnit.net 00:00:01.21]           "model": "llama2",
[xUnit.net 00:00:01.21]           "apiKey": "",
[xUnit.net 00:00:01.21]           "baseUrl": "http://localhost:11434",
[xUnit.net 00:00:01.21]           "maxTokens": 1000,
[xUnit.net 00:00:01.21]           "temperature": 0.3,
[xUnit.net 00:00:01.21]           "topP": 0.9,
[xUnit.net 00:00:01.21]           "parameters": {
[xUnit.net 00:00:01.21]             "stop": [
[xUnit.net 00:00:01.21]               "---",
[xUnit.net 00:00:01.21]               "###"
[xUnit.net 00:00:01.21]             ]
[xUnit.net 00:00:01.21]           }
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "category": "ui-generation"
[xUnit.net 00:00:01.21]       }, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
[xUnit.net 00:00:01.21]             INodeRegistry.Upsert(Node { Id = prompt.ui-component-generation, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = UI Component Generation, Description = Prompt template for ui-generation, Content = ContentRef { MediaType = application/json, InlineJson = {
[xUnit.net 00:00:01.21]         "template": "Generate a React component from this lens specification.\n\nLens Spec: {lensSpec}\nComponent Type: {componentType}\nRequirements: {requirements}\n\nRequirements:\n- Use the specified projection type (list, masonry, thread, etc.)\n- Implement the declared actions (attune, amplify, weave, reflect, invite)\n- Connect to the adapter endpoints\n- Follow resonance-driven design principles\n- Use TypeScript and Tailwind CSS\n- Include proper TypeScript interfaces\n\nIMPORTANT: Return ONLY valid TypeScript code, no markdown, no explanations, no additional text.\n\n\u0060\u0060\u0060typescript\n{generatedCode}\n\u0060\u0060\u0060",
[xUnit.net 00:00:01.21]         "defaultParameters": {
[xUnit.net 00:00:01.21]           "lensSpec": "",
[xUnit.net 00:00:01.21]           "componentType": "list",
[xUnit.net 00:00:01.21]           "requirements": "",
[xUnit.net 00:00:01.21]           "generatedCode": ""
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "defaultLLMConfig": {
[xUnit.net 00:00:01.21]           "id": "default-ai",
[xUnit.net 00:00:01.21]           "name": "Default AI Config",
[xUnit.net 00:00:01.21]           "provider": "ollama",
[xUnit.net 00:00:01.21]           "model": "llama2",
[xUnit.net 00:00:01.21]           "apiKey": "",
[xUnit.net 00:00:01.21]           "baseUrl": "http://localhost:11434",
[xUnit.net 00:00:01.21]           "maxTokens": 1000,
[xUnit.net 00:00:01.21]           "temperature": 0.3,
[xUnit.net 00:00:01.21]           "topP": 0.9,
[xUnit.net 00:00:01.21]           "parameters": {
[xUnit.net 00:00:01.21]             "stop": [
[xUnit.net 00:00:01.21]               "---",
[xUnit.net 00:00:01.21]               "###"
[xUnit.net 00:00:01.21]             ]
[xUnit.net 00:00:01.21]           }
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "category": "ui-generation"
[xUnit.net 00:00:01.21]       }, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
[xUnit.net 00:00:01.21]             INodeRegistry.Upsert(Node { Id = prompt.ui-feedback-analysis, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = UI Feedback Analysis, Description = Prompt template for ui-feedback, Content = ContentRef { MediaType = application/json, InlineJson = {
[xUnit.net 00:00:01.21]         "template": "Analyze user feedback on this UI component and suggest specific improvements.\n\nComponent ID: {componentId}\nComponent Code: {componentCode}\nUser Feedback: {feedback}\nUsage Metrics: {metrics}\n\nAnalyze and suggest improvements to:\n1. Copy and messaging (resonance, joy, clarity)\n2. Interaction patterns (attune, amplify, weave, reflect, invite)\n3. Visual design (resonance-driven, inviting, not overwhelming)\n4. API integration (endpoint bindings, error handling)\n5. Performance and accessibility\n\nIMPORTANT: Return ONLY a valid JSON object, no markdown, no explanations, no additional text.\n\n{{\n  \u0022analysis\u0022: {{\n    \u0022strengths\u0022: [\u0022strength1\u0022, \u0022strength2\u0022],\n    \u0022weaknesses\u0022: [\u0022weakness1\u0022, \u0022weakness2\u0022],\n    \u0022suggestions\u0022: [\n      {{\n        \u0022area\u0022: \u0022copy\u0022,\n        \u0022priority\u0022: \u0022high\u0022,\n        \u0022suggestion\u0022: \u0022specific improvement\u0022,\n        \u0022reasoning\u0022: \u0022why this helps\u0022\n      }}\n    ],\n    \u0022resonanceScore\u0022: 0.0-1.0,\n    \u0022joyScore\u0022: 0.0-1.0,\n    \u0022unityScore\u0022: 0.0-1.0\n  }},\n  \u0022recommendedChanges\u0022: [\n    {{\n      \u0022type\u0022: \u0022copy\u0022,\n      \u0022change\u0022: \u0022specific change to make\u0022,\n      \u0022impact\u0022: \u0022expected improvement\u0022\n    }}\n  ]\n}}",
[xUnit.net 00:00:01.21]         "defaultParameters": {
[xUnit.net 00:00:01.21]           "componentId": "",
[xUnit.net 00:00:01.21]           "componentCode": "",
[xUnit.net 00:00:01.21]           "feedback": "",
[xUnit.net 00:00:01.21]           "metrics": ""
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "defaultLLMConfig": {
[xUnit.net 00:00:01.21]           "id": "default-ai",
[xUnit.net 00:00:01.21]           "name": "Default AI Config",
[xUnit.net 00:00:01.21]           "provider": "ollama",
[xUnit.net 00:00:01.21]           "model": "llama2",
[xUnit.net 00:00:01.21]           "apiKey": "",
[xUnit.net 00:00:01.21]           "baseUrl": "http://localhost:11434",
[xUnit.net 00:00:01.21]           "maxTokens": 1000,
[xUnit.net 00:00:01.21]           "temperature": 0.3,
[xUnit.net 00:00:01.21]           "topP": 0.9,
[xUnit.net 00:00:01.21]           "parameters": {
[xUnit.net 00:00:01.21]             "stop": [
[xUnit.net 00:00:01.21]               "---",
[xUnit.net 00:00:01.21]               "###"
[xUnit.net 00:00:01.21]             ]
[xUnit.net 00:00:01.21]           }
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "category": "ui-feedback"
[xUnit.net 00:00:01.21]       }, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
[xUnit.net 00:00:01.21]             INodeRegistry.Upsert(Node { Id = prompt.ui-pattern-evolution, TypeId = codex.meta/prompt-template, State = Ice, Locale = en, Title = UI Pattern Evolution, Description = Prompt template for ui-evolution, Content = ContentRef { MediaType = application/json, InlineJson = {
[xUnit.net 00:00:01.21]         "template": "Evolve this successful UI pattern into a reusable template for future components.\n\nOriginal Pattern: {originalPattern}\nSuccess Metrics: {successMetrics}\nEvolution Context: {evolutionContext}\n\nCreate an evolved template that:\n1. Generalizes the successful elements\n2. Maintains the resonance-driven principles\n3. Adds flexibility for different use cases\n4. Preserves the joy and unity aspects\n5. Includes proper TypeScript interfaces\n6. Documents the pattern\u0027s purpose and usage\n\nIMPORTANT: Return ONLY a valid JSON object with the evolved template, no markdown, no explanations, no additional text.\n\n{{\n  \u0022templateId\u0022: \u0022evolved-pattern-id\u0022,\n  \u0022name\u0022: \u0022Evolved Pattern Name\u0022,\n  \u0022description\u0022: \u0022What this pattern does\u0022,\n  \u0022category\u0022: \u0022lens|page|component|action\u0022,\n  \u0022template\u0022: {{\n    \u0022code\u0022: \u0022evolved TypeScript code\u0022,\n    \u0022interfaces\u0022: \u0022TypeScript interfaces\u0022,\n    \u0022props\u0022: [\u0022prop1\u0022, \u0022prop2\u0022],\n    \u0022endpoints\u0022: [\u0022endpoint1\u0022, \u0022endpoint2\u0022],\n    \u0022actions\u0022: [\u0022attune\u0022, \u0022amplify\u0022, \u0022weave\u0022]\n  }},\n  \u0022usage\u0022: {{\n    \u0022whenToUse\u0022: \u0022when to apply this pattern\u0022,\n    \u0022variations\u0022: [\u0022variation1\u0022, \u0022variation2\u0022],\n    \u0022customization\u0022: [\u0022customization1\u0022, \u0022customization2\u0022]\n  }},\n  \u0022resonanceFactors\u0022: {{\n    \u0022joy\u0022: 0.0-1.0,\n    \u0022unity\u0022: 0.0-1.0,\n    \u0022clarity\u0022: 0.0-1.0,\n    \u0022engagement\u0022: 0.0-1.0\n  }}\n}}",
[xUnit.net 00:00:01.21]         "defaultParameters": {
[xUnit.net 00:00:01.21]           "originalPattern": "",
[xUnit.net 00:00:01.21]           "successMetrics": "",
[xUnit.net 00:00:01.21]           "evolutionContext": ""
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "defaultLLMConfig": {
[xUnit.net 00:00:01.21]           "id": "default-ai",
[xUnit.net 00:00:01.21]           "name": "Default AI Config",
[xUnit.net 00:00:01.21]           "provider": "ollama",
[xUnit.net 00:00:01.21]           "model": "llama2",
[xUnit.net 00:00:01.21]           "apiKey": "",
[xUnit.net 00:00:01.21]           "baseUrl": "http://localhost:11434",
[xUnit.net 00:00:01.21]           "maxTokens": 1000,
[xUnit.net 00:00:01.21]           "temperature": 0.3,
[xUnit.net 00:00:01.21]           "topP": 0.9,
[xUnit.net 00:00:01.21]           "parameters": {
[xUnit.net 00:00:01.21]             "stop": [
[xUnit.net 00:00:01.21]               "---",
[xUnit.net 00:00:01.21]               "###"
[xUnit.net 00:00:01.21]             ]
[xUnit.net 00:00:01.21]           }
[xUnit.net 00:00:01.21]         },
[xUnit.net 00:00:01.21]         "category": "ui-evolution"
[xUnit.net 00:00:01.21]       }, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
[xUnit.net 00:00:01.21]             INodeRegistry.Upsert(Node { Id = ai-module, TypeId = codex.meta/module, State = Ice, Locale = en-US, Title = AI Module (Refactored), Description = Streamlined AI functionality with configurable prompts and reusable patterns, Content = ContentRef { MediaType = application/json, InlineJson = {"ModuleId":"ai-module","Name":"AI Module (Refactored)","Version":"2.0.0","Description":"Streamlined AI functionality with configurable prompts and reusable patterns","Tags":["ai","concepts","llm","analysis","refactored"],"Capabilities":["concept-extraction","llm-integration","fractal-transformation","analysis"],"Spec":"codex.spec.ai"}, InlineBytes = , ExternalUri = , Selector = , Query = , Headers = , AuthRef = , CacheKey =  }, Meta = System.Collections.Generic.Dictionary`2[System.String,System.Object] })
[xUnit.net 00:00:01.21]       
[xUnit.net 00:00:01.21]       Stack Trace:
[xUnit.net 00:00:01.21]         /_/src/Moq/Mock.cs(331,0): at Moq.Mock.Verify(Mock mock, LambdaExpression expression, Times times, String failMessage)
[xUnit.net 00:00:01.21]         /_/src/Moq/Mock`1.cs(920,0): at Moq.Mock`1.Verify(Expression`1 expression, Times times)
[xUnit.net 00:00:01.21]         /Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/Modules/AIModuleTests.cs(56,0): at CodexBootstrap.Tests.Modules.AIModuleTests.Register_ShouldRegisterModuleWithRegistry()
[xUnit.net 00:00:01.23]       Expected response.IsSuccessStatusCode to be true, but found False.
[xUnit.net 00:00:01.23]       Stack Trace:
[xUnit.net 00:00:01.23]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
[xUnit.net 00:00:01.23]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
[xUnit.net 00:00:01.23]            at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
[xUnit.net 00:00:01.23]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:01.23]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:01.23]            at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
[xUnit.net 00:00:01.23]            at FluentAssertions.Primitives.BooleanAssertions`1.BeTrue(String because, Object[] becauseArgs)
[xUnit.net 00:00:01.23]         /Users/ursmuff/source/Living-Codex-CSharp/src/CodexBootstrap.Tests/ApiIntegrationTests.cs(170,0): at CodexBootstrap.Tests.ApiIntegrationTests.OAuthValidate_ShouldValidateUser()
[xUnit.net 00:00:01.23]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.37]       Endpoint not yet implemented
Test 'CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetEdge_ShouldReturnEdge_WhenImplemented' was skipped in the test run.
[xUnit.net 00:00:27.55]       Endpoint not yet implemented
Test 'CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetNewsFeed_ShouldReturnNewsItems_WhenImplemented' was skipped in the test run.
[xUnit.net 00:00:27.58]       Endpoint not yet implemented
Test 'CodexBootstrap.Tests.Modules.NewsModuleApiTests.SearchNews_ShouldReturnSearchResults_WhenImplemented' was skipped in the test run.
[xUnit.net 00:00:28.02]   Finished:    CodexBootstrap.Tests
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="Seeker-Mac" outcome="Warning" timestamp="2025-09-16T23:51:44.3615310-06:00">
        <Text>[xUnit.net 00:00:00.94]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetUserContributions_ShouldReturnContributionsList_WhenImplemented [SKIP]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Error" timestamp="2025-09-16T23:51:44.4362460-06:00">
        <Text>[xUnit.net 00:00:01.01]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldReturnNotFound_WhenNotImplemented [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Warning" timestamp="2025-09-16T23:51:44.4709060-06:00">
        <Text>[xUnit.net 00:00:01.05]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldRespondWithinAcceptableTime_WhenImplemented [SKIP]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Error" timestamp="2025-09-16T23:51:44.4774930-06:00">
        <Text>[xUnit.net 00:00:01.05]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnNotFound_WhenNotImplemented [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Warning" timestamp="2025-09-16T23:51:44.4779880-06:00">
        <Text>[xUnit.net 00:00:01.05]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetCollectiveEnergy_ShouldReturnEnergyValue_WhenImplemented [SKIP]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Warning" timestamp="2025-09-16T23:51:44.4780490-06:00">
        <Text>[xUnit.net 00:00:01.05]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldRespondWithinAcceptableTime_WhenImplemented [SKIP]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Warning" timestamp="2025-09-16T23:51:44.4824370-06:00">
        <Text>[xUnit.net 00:00:01.06]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnUserEnergy_WhenImplemented [SKIP]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Warning" timestamp="2025-09-16T23:51:44.4824680-06:00">
        <Text>[xUnit.net 00:00:01.06]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributorEnergy_ShouldReturnBadRequest_WhenUserIdInvalid_WhenImplemented [SKIP]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Error" timestamp="2025-09-16T23:51:44.4837750-06:00">
        <Text>[xUnit.net 00:00:01.06]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributionStats_ShouldReturnNotFound_WhenNotImplemented [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Warning" timestamp="2025-09-16T23:51:44.4843170-06:00">
        <Text>[xUnit.net 00:00:01.06]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.GetContributionStats_ShouldReturnStats_WhenImplemented [SKIP]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Error" timestamp="2025-09-16T23:51:44.5058100-06:00">
        <Text>[xUnit.net 00:00:01.08]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldReturnNotFound_WhenNotImplemented [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Warning" timestamp="2025-09-16T23:51:44.5061860-06:00">
        <Text>[xUnit.net 00:00:01.08]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldReturnBadRequest_WhenRequestInvalid_WhenImplemented [SKIP]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Warning" timestamp="2025-09-16T23:51:44.5062520-06:00">
        <Text>[xUnit.net 00:00:01.08]     CodexBootstrap.Tests.Modules.EnergyModuleApiTests.RecordContribution_ShouldCreateContribution_WhenImplemented [SKIP]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Error" timestamp="2025-09-16T23:51:44.6321860-06:00">
        <Text>[xUnit.net 00:00:01.21]     CodexBootstrap.Tests.Modules.AIModuleTests.Register_ShouldRegisterModuleWithRegistry [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Error" timestamp="2025-09-16T23:51:44.6549840-06:00">
        <Text>[xUnit.net 00:00:01.23]     CodexBootstrap.Tests.ApiIntegrationTests.OAuthValidate_ShouldValidateUser [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Warning" timestamp="2025-09-16T23:51:44.7937320-06:00">
        <Text>[xUnit.net 00:00:01.37]     CodexBootstrap.Tests.Modules.NodeEdgeModuleApiTests.GetEdge_ShouldReturnEdge_WhenImplemented [SKIP]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Warning" timestamp="2025-09-16T23:52:10.9750700-06:00">
        <Text>[xUnit.net 00:00:27.55]     CodexBootstrap.Tests.Modules.NewsModuleApiTests.GetNewsFeed_ShouldReturnNewsItems_WhenImplemented [SKIP]</Text>
      </RunInfo>
      <RunInfo computerName="Seeker-Mac" outcome="Warning" timestamp="2025-09-16T23:52:11.0004950-06:00">
        <Text>[xUnit.net 00:00:27.58]     CodexBootstrap.Tests.Modules.NewsModuleApiTests.SearchNews_ShouldReturnSearchResults_WhenImplemented [SKIP]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>