[
  {
    "moduleId": "codex.image.concept",
    "name": "Concept Image Generation Module",
    "version": "1.0.0",
    "description": "Configurable image generation for visualizing concepts",
    "specReference": "codex.spec.concept-image",
    "capabilities": [
      "image-generation",
      "concept-visualization",
      "ai-integration",
      "multi-provider-support"
    ],
    "tags": [
      "image",
      "concept",
      "ai",
      "visualization"
    ]
  },
  {
    "moduleId": "codex.endpoint.generation-demo",
    "name": "Endpoint Generation Demo",
    "version": "1.0.0",
    "description": "Demonstrates missing endpoint generation with U-CORE delta diffs",
    "specReference": "codex.spec.endpoint-generation-demo",
    "capabilities": [
      "EndpointGeneration",
      "DeltaDiffs",
      "BreathFramework",
      "U-CORE Integration"
    ],
    "tags": [
      "endpoint",
      "generation",
      "demo",
      "ucore",
      "breath",
      "delta"
    ]
  },
  {
    "moduleId": "codex.analysis.image",
    "name": "Image Analysis Module",
    "version": "1.0.0",
    "description": "Analyzes images to extract nodes and edges for the node-based system",
    "specReference": "codex.spec.image-analysis",
    "capabilities": [
      "image-analysis",
      "node-extraction",
      "edge-extraction",
      "ai-integration"
    ],
    "tags": [
      "image",
      "analysis",
      "extraction",
      "ai"
    ]
  },
  {
    "moduleId": "codex.llm.response-handler",
    "name": "LLM Response Handler Module",
    "version": "1.0.0",
    "description": "Converts LLM responses into structured nodes and edges for bootstrap integration",
    "specReference": "codex.spec.llm-response-handler",
    "capabilities": [
      "ResponseParsing",
      "NodeGeneration",
      "EdgeCreation",
      "DiffPatch",
      "BootstrapIntegration"
    ],
    "tags": [
      "llm",
      "response-handler",
      "parsing",
      "bootstrap"
    ]
  },
  {
    "moduleId": "codex.ucore.llm-response-handler",
    "name": "U-CORE LLM Response Handler",
    "version": "1.0.0",
    "description": "Enhanced LLM response handler with U-CORE ontology mapping and resonance optimization",
    "specReference": "codex.spec.ucore-llm-response-handler",
    "capabilities": [
      "U-CORE Mapping",
      "Resonance Optimization",
      "Belief System Matching",
      "Node Generation",
      "Edge Creation",
      "Bootstrap Integration"
    ],
    "tags": [
      "ucore",
      "llm",
      "response-handler",
      "ontology"
    ]
  },
  {
    "moduleId": "codex.access-control",
    "name": "Access Control Module",
    "version": "0.1.0",
    "description": "Comprehensive access control and permissions management system",
    "specReference": "codex.spec.access-control",
    "capabilities": [
      "access-control",
      "permissions",
      "roles",
      "security",
      "authorization"
    ],
    "tags": [
      "create_permission",
      "update_permission",
      "delete_permission",
      "get_permission",
      "list_permissions",
      "create_role",
      "update_role",
      "delete_role",
      "get_role",
      "list_roles",
      "assign_role",
      "remove_role",
      "check_permission",
      "check_access",
      "create_policy",
      "update_policy",
      "delete_policy",
      "evaluate_policy",
      "create_rule",
      "update_rule",
      "delete_rule",
      "evaluate_rule"
    ]
  },
  {
    "moduleId": "codex.adapters",
    "name": "Adapter Module",
    "version": "0.1.0",
    "description": "Module for managing content adapters and external resource linking.",
    "specReference": "codex.spec.adapters",
    "capabilities": [
      "adapters",
      "content",
      "external-resources",
      "linking"
    ],
    "tags": [
      "adapter",
      "content",
      "external",
      "link"
    ]
  },
  {
    "moduleId": "ai-module",
    "name": "AI Module",
    "version": "1.0.0",
    "description": "Consolidated AI functionality for concept extraction, LLM integration, scoring, and fractal transformation",
    "specReference": "codex.spec.ai",
    "capabilities": [
      "concept-extraction",
      "llm-integration",
      "fractal-transformation",
      "analysis",
      "caching"
    ],
    "tags": [
      "ai",
      "concepts",
      "llm",
      "analysis"
    ]
  },
  {
    "moduleId": "codex.auth",
    "name": "Authentication and Authorization Module",
    "version": "0.1.0",
    "description": "Module for user authentication, authorization, and access control",
    "specReference": "codex.spec.authentication",
    "capabilities": [
      "authentication",
      "authorization",
      "jwt",
      "security",
      "access-control"
    ],
    "tags": [
      "login",
      "logout",
      "register",
      "verify",
      "authorize",
      "permissions"
    ]
  },
  {
    "moduleId": "codex.breath",
    "name": "Breath Engine Module",
    "version": "0.1.0",
    "description": "Self-contained module for breath loop operations (expand, validate, contract) using node-based storage",
    "specReference": "codex.spec.breath",
    "capabilities": [
      "breath-loop",
      "expand",
      "validate",
      "contract",
      "lifecycle"
    ],
    "tags": [
      "breath",
      "loop",
      "expand",
      "validate",
      "contract"
    ]
  },
  {
    "moduleId": "codex.composer",
    "name": "Spec Composer Module",
    "version": "0.1.0",
    "description": "Self-contained module for composing module specifications from atoms using node-based storage",
    "specReference": "codex.spec.composer",
    "capabilities": [
      "compose",
      "atoms",
      "spec",
      "composition"
    ],
    "tags": [
      "compose",
      "atoms",
      "spec",
      "composition"
    ]
  },
  {
    "moduleId": "codex.concept",
    "name": "Concept Management Module",
    "version": "1.0.0",
    "description": "Concept Management Module - Self-contained fractal APIs",
    "specReference": "codex.spec.concept",
    "capabilities": [
      "concepts",
      "management",
      "ontology",
      "knowledge"
    ],
    "tags": [
      "concept",
      "manage",
      "ontology",
      "knowledge"
    ]
  },
  {
    "moduleId": "codex.concept-registry",
    "name": "Concept Registry Module",
    "version": "1.0.0",
    "description": "Central registry for all concepts across services with version management and cross-service synchronization",
    "specReference": "codex.spec.concept-registry",
    "capabilities": [
      "concept-registration",
      "concept-discovery",
      "version-management",
      "cross-service-sync",
      "relationship-management",
      "quality-assessment"
    ],
    "tags": [
      "concept",
      "registry",
      "cross-service",
      "version-management",
      "quality-assessment"
    ]
  },
  {
    "moduleId": "codex.core",
    "name": "Core System Module",
    "version": "0.1.0",
    "description": "Self-contained module for core system operations (atoms, spec) using node-based storage",
    "specReference": "codex.spec.core",
    "capabilities": [
      "core",
      "atoms",
      "spec",
      "storage",
      "system"
    ],
    "tags": [
      "get_atoms",
      "get_spec",
      "core_operations"
    ]
  },
  {
    "moduleId": "codex.delta",
    "name": "Delta Module",
    "version": "0.1.0",
    "description": "Module for git-like patches and diffs on nodes and edges.",
    "specReference": "codex.spec.delta",
    "capabilities": [
      "delta",
      "patch",
      "diff",
      "versioning",
      "git-like"
    ],
    "tags": [
      "delta",
      "patch",
      "diff",
      "version",
      "change"
    ]
  },
  {
    "moduleId": "codex.digital-signature",
    "name": "Digital Signature Module",
    "version": "0.1.0",
    "description": "Cryptographic signing and verification for nodes and edges",
    "specReference": "codex.spec.digital-signature",
    "capabilities": [
      "cryptography",
      "digital-signature",
      "security",
      "verification"
    ],
    "tags": [
      "sign_node",
      "verify_node",
      "sign_edge",
      "verify_edge",
      "generate_keypair",
      "extract_public_key"
    ]
  },
  {
    "moduleId": "codex.distributed-storage",
    "name": "Distributed Storage Management Module",
    "version": "0.1.0",
    "description": "Module for managing distributed storage clusters and replication",
    "specReference": "codex.spec.distributed-storage",
    "capabilities": [
      "distributed-storage",
      "clusters",
      "replication",
      "management"
    ],
    "tags": [
      "distributed",
      "storage",
      "cluster",
      "replication"
    ]
  },
  {
    "moduleId": "codex.event-streaming",
    "name": "Event Streaming Module",
    "version": "0.1.0",
    "description": "Provides event streaming for live updates on node/edge changes",
    "specReference": "codex.spec.event-streaming",
    "capabilities": [
      "event_streaming",
      "event_history",
      "event_subscription",
      "event_filtering",
      "event_aggregation",
      "event_replay"
    ],
    "tags": [
      "event-streaming",
      "real-time",
      "updates",
      "subscription"
    ]
  },
  {
    "moduleId": "codex.future",
    "name": "Future Knowledge",
    "version": "1.0.0",
    "description": "Retrieves and applies knowledge from future states",
    "specReference": "codex.spec.future-knowledge",
    "capabilities": [
      "future-knowledge",
      "pattern-recognition",
      "prediction"
    ],
    "tags": [
      "future",
      "knowledge",
      "prediction",
      "patterns"
    ]
  },
  {
    "moduleId": "codex.graph.query",
    "name": "Graph Query Module",
    "version": "1.0.0",
    "description": "Graph Query Module - Provides graph-based querying and discovery using existing system infrastructure",
    "specReference": "codex.spec.graph-query",
    "capabilities": [
      "graph-querying",
      "node-discovery",
      "relationship-analysis"
    ],
    "tags": [
      "graph",
      "query",
      "discovery"
    ]
  },
  {
    "moduleId": "codex.hello",
    "name": "Hello Demo Module",
    "version": "0.1.0",
    "description": "Shows dynamic API registration, type exposure, and node creation.",
    "specReference": "codex.spec.hello",
    "capabilities": [
      "echo",
      "greeting",
      "node-creation"
    ],
    "tags": [
      "hello",
      "demo",
      "example"
    ]
  },
  {
    "moduleId": "codex.hydrate",
    "name": "Content Hydration Module",
    "version": "0.1.0",
    "description": "Self-contained module for content hydration operations using node-based storage",
    "specReference": "codex.spec.hydrate",
    "capabilities": [
      "hydration",
      "content",
      "processing",
      "transformation"
    ],
    "tags": [
      "hydrate",
      "content",
      "process",
      "transform"
    ]
  },
  {
    "moduleId": "codex.identity-management",
    "name": "Identity Management Module",
    "version": "0.1.0",
    "description": "Comprehensive identity and credential management system",
    "specReference": "codex.spec.identity-management",
    "capabilities": [
      "identity",
      "credentials",
      "claims",
      "authentication",
      "security"
    ],
    "tags": [
      "create_identity",
      "update_identity",
      "delete_identity",
      "get_identity",
      "list_identities",
      "add_credential",
      "remove_credential",
      "verify_credential",
      "add_claim",
      "remove_claim",
      "verify_claim",
      "generate_identity_proof",
      "verify_identity_proof"
    ]
  },
  {
    "moduleId": "codex.joy",
    "name": "Joy and Resonance Module",
    "version": "1.0.0",
    "description": "Consolidated Joy and Resonance Module - Self-contained fractal APIs",
    "specReference": "codex.spec.joy",
    "capabilities": [
      "joy",
      "amplification",
      "resonance",
      "energy"
    ],
    "tags": [
      "joy",
      "amplify",
      "resonance",
      "energy"
    ]
  },
  {
    "moduleId": "codex.llm.future",
    "name": "LLM-Enhanced Future Knowledge Module",
    "version": "1.0.0",
    "description": "Uses configurable local and remote LLMs for future knowledge retrieval",
    "specReference": "codex.spec.llm-future-knowledge",
    "capabilities": [
      "FutureKnowledge",
      "LLMIntegration",
      "ConfigurableProviders",
      "LocalAndRemote"
    ],
    "tags": [
      "llm",
      "future-knowledge",
      "ai",
      "concepts"
    ]
  },
  {
    "moduleId": "codex.oneshot",
    "name": "One-Shot Operations Module",
    "version": "0.1.0",
    "description": "Self-contained module for one-shot operations (apply, execute) using node-based storage",
    "specReference": "codex.spec.oneshot",
    "capabilities": [
      "one-shot",
      "apply",
      "execute",
      "operations"
    ],
    "tags": [
      "oneshot",
      "apply",
      "execute",
      "operations"
    ]
  },
  {
    "moduleId": "codex.openapi",
    "name": "OpenAPI Module",
    "version": "0.1.0",
    "description": "Module for generating deterministic OpenAPI specifications from module types and APIs.",
    "specReference": "codex.spec.openapi",
    "capabilities": [
      "openapi",
      "specification",
      "generation",
      "documentation"
    ],
    "tags": [
      "openapi",
      "spec",
      "generation",
      "documentation"
    ]
  },
  {
    "moduleId": "codex.phase",
    "name": "Phase Module",
    "version": "0.1.0",
    "description": "Module for managing node phase transitions (melt, refreeze) and resonance checking.",
    "specReference": "codex.spec.phase",
    "capabilities": [
      "phase-transitions",
      "melt",
      "refreeze",
      "resonance"
    ],
    "tags": [
      "phase",
      "transition",
      "melt",
      "refreeze",
      "resonance"
    ]
  },
  {
    "moduleId": "codex.plan",
    "name": "Plan Generation Module",
    "version": "0.1.0",
    "description": "Self-contained module for generating topology plans using node-based storage",
    "specReference": "codex.spec.plan",
    "capabilities": [
      "plan-generation",
      "topology",
      "planning"
    ],
    "tags": [
      "plan",
      "generation",
      "topology"
    ]
  },
  {
    "moduleId": "codex.push-notifications",
    "name": "Push Notification Module",
    "version": "0.1.0",
    "description": "Provides push notification system for client notifications",
    "specReference": "codex.spec.push-notifications",
    "capabilities": [
      "push_notifications",
      "notification_templates",
      "notification_subscriptions",
      "notification_history",
      "notification_scheduling",
      "notification_delivery"
    ],
    "tags": [
      "push-notifications",
      "notifications",
      "messaging",
      "client"
    ]
  },
  {
    "moduleId": "codex.realtime",
    "name": "Real-time Communication Module",
    "version": "0.1.0",
    "description": "Provides WebSocket and SignalR support for real-time bidirectional communication",
    "specReference": "codex.spec.realtime",
    "capabilities": [
      "websocket_connection",
      "signalr_hub",
      "event_streaming",
      "push_notifications",
      "collaborative_editing",
      "subscription_management",
      "session_management"
    ],
    "tags": [
      "realtime",
      "websocket",
      "signalr",
      "communication"
    ]
  },
  {
    "moduleId": "realtime-news-stream-module",
    "name": "Real-Time News Stream Module",
    "version": "1.0.0",
    "description": "Ingests external news sources and transforms them through fractal analysis",
    "specReference": "codex.spec.realtime-news-stream",
    "capabilities": [
      "rss-ingestion",
      "api-ingestion",
      "fractal-analysis",
      "real-time-streaming"
    ],
    "tags": [
      "news",
      "streaming",
      "realtime",
      "fractal"
    ]
  },
  {
    "moduleId": "codex.relations",
    "name": "Relations Module",
    "version": "0.1.0",
    "description": "Module for modeling relations, constraints, and validation rules.",
    "specReference": "codex.spec.relations",
    "capabilities": [
      "relations",
      "constraints",
      "validation",
      "modeling"
    ],
    "tags": [
      "relations",
      "constraints",
      "validation",
      "modeling"
    ]
  },
  {
    "moduleId": "self-update-module",
    "name": "Self Update Module",
    "version": "1.0.0",
    "description": "Provides self-updating functionality for dynamic modules",
    "specReference": "codex.spec.self-update",
    "capabilities": [
      "Hot Reload",
      "Module Compilation",
      "Dynamic Loading",
      "Rollback"
    ],
    "tags": [
      "self-update",
      "hot-reload",
      "modules"
    ]
  },
  {
    "moduleId": "codex.service.discovery",
    "name": "Service Discovery Module",
    "version": "1.0.0",
    "description": "Service Discovery Module - Self-contained fractal APIs for service registration and discovery",
    "specReference": "codex.spec.service-discovery",
    "capabilities": [
      "service-registration",
      "service-discovery",
      "health-monitoring"
    ],
    "tags": [
      "service-discovery",
      "microservices",
      "registration"
    ]
  },
  {
    "moduleId": "spec-driven-module",
    "name": "Spec-Driven Architecture Module",
    "version": "1.0.0",
    "description": "Provides spec-driven architecture with ice/water/gas states",
    "specReference": "codex.spec.spec-driven",
    "capabilities": [
      "Spec-Driven Architecture",
      "Ice/Water/Gas States",
      "Dynamic Generation"
    ],
    "tags": [
      "spec-driven",
      "architecture",
      "ice-water-gas"
    ]
  },
  {
    "moduleId": "codex.spec",
    "name": "Spec Management Module",
    "version": "0.1.0",
    "description": "Self-contained module for spec management operations (atoms, compose, export, import) using node-based storage",
    "specReference": "codex.spec.spec-management",
    "capabilities": [
      "spec-management",
      "atoms",
      "compose",
      "export",
      "import"
    ],
    "tags": [
      "spec",
      "management",
      "atoms",
      "compose"
    ]
  },
  {
    "moduleId": "codex.reflect",
    "name": "Spec Reflection Module",
    "version": "0.1.0",
    "description": "Converts specs to meta-nodes and back, enabling self-describing system architecture",
    "specReference": "codex.spec.reflection",
    "capabilities": [
      "reflection",
      "spec-conversion",
      "meta-nodes",
      "self-describing"
    ],
    "tags": [
      "reflection",
      "spec",
      "meta-nodes",
      "self-describing"
    ]
  },
  {
    "moduleId": "codex.storage-endpoints",
    "name": "Storage Endpoints Module",
    "version": "0.1.0",
    "description": "Direct HTTP endpoints for storage operations with comprehensive validation",
    "specReference": "codex.spec.storage-endpoints",
    "capabilities": [
      "storage",
      "endpoints",
      "validation",
      "http",
      "data-management"
    ],
    "tags": [
      "get_node",
      "create_node",
      "update_node",
      "delete_node",
      "list_nodes",
      "search_nodes",
      "get_edge",
      "create_edge",
      "update_edge",
      "delete_edge",
      "list_edges",
      "search_edges",
      "get_storage_stats",
      "backup_storage",
      "restore_storage",
      "validate_storage",
      "optimize_storage"
    ]
  },
  {
    "moduleId": "codex.storage",
    "name": "Storage Management Module",
    "version": "0.1.0",
    "description": "Self-contained module for storage management operations using node-based storage",
    "specReference": "codex.spec.storage",
    "capabilities": [
      "storage",
      "management",
      "nodes",
      "edges",
      "statistics"
    ],
    "tags": [
      "get_stats",
      "storage_operations",
      "data_management"
    ]
  },
  {
    "moduleId": "codex.system.metrics",
    "name": "System Metrics Module",
    "version": "1.0.0",
    "description": "System Metrics Module - Comprehensive system monitoring and metrics",
    "specReference": "codex.spec.system-metrics",
    "capabilities": [
      "system-monitoring",
      "metrics-collection",
      "performance-tracking"
    ],
    "tags": [
      "metrics",
      "monitoring",
      "system"
    ]
  },
  {
    "moduleId": "test-dynamic-module",
    "name": "Test Dynamic Module v3 - AI Enhanced - HOT RELOAD TEST",
    "version": "3",
    "description": "A test module for demonstrating hot-reload functionality with real AI integration - Version 3",
    "specReference": "codex.spec.test-dynamic",
    "capabilities": [
      "Status endpoint",
      "Counter increment",
      "AI insights",
      "Metrics",
      "Real LLM integration"
    ],
    "tags": [
      "test",
      "dynamic",
      "hot-reload",
      "ai-enhanced"
    ]
  },
  {
    "moduleId": "codex.userconcept",
    "name": "User-Concept Relationship Module",
    "version": "1.0.0",
    "description": "User-Concept Relationship Module - Self-contained fractal APIs",
    "specReference": "codex.spec.user-concept",
    "capabilities": [
      "user-concepts",
      "concept-management",
      "user-specific"
    ],
    "tags": [
      "user",
      "concept",
      "management"
    ]
  },
  {
    "moduleId": "codex.user-contributions",
    "name": "User Contributions Module",
    "version": "0.1.0",
    "description": "Manages user contributions with ETH ledger, change tracking, attribution, and reward sharing",
    "specReference": "codex.spec.user-contributions",
    "capabilities": [
      "contribution_tracking",
      "eth_ledger",
      "attribution_system",
      "reward_sharing",
      "change_tracking",
      "contribution_validation",
      "reward_calculation",
      "attribution_verification"
    ],
    "tags": [
      "contributions",
      "eth",
      "ledger",
      "rewards",
      "attribution"
    ]
  },
  {
    "moduleId": "codex.user",
    "name": "User Management Module",
    "version": "1.0.0",
    "description": "User Management Module - Self-contained fractal APIs",
    "specReference": "codex.spec.user",
    "capabilities": [
      "user-creation",
      "authentication",
      "profile-management",
      "permissions",
      "session-management"
    ],
    "tags": [
      "user",
      "management",
      "auth",
      "profile"
    ]
  }
]
